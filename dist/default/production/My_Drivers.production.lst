

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Apr 09 05:46:58 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Version 2.20
    75                           ; Generated 12/02/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4620 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     
   109                           	psect	idataBANK0
   110   004BB0                     __pidataBANK0:
   111                           	callstack 0
   112                           
   113                           ;initializer for _port_registers
   114   004BB0  80                 	db	128
   115   004BB1  0F                 	db	15
   116   004BB2  81                 	db	129
   117   004BB3  0F                 	db	15
   118   004BB4  82                 	db	130
   119   004BB5  0F                 	db	15
   120   004BB6  83                 	db	131
   121   004BB7  0F                 	db	15
   122   004BB8  84                 	db	132
   123   004BB9  0F                 	db	15
   124                           
   125                           ;initializer for _lat_registers
   126   004BBA  89                 	db	137
   127   004BBB  0F                 	db	15
   128   004BBC  8A                 	db	138
   129   004BBD  0F                 	db	15
   130   004BBE  8B                 	db	139
   131   004BBF  0F                 	db	15
   132   004BC0  8C                 	db	140
   133   004BC1  0F                 	db	15
   134   004BC2  8D                 	db	141
   135   004BC3  0F                 	db	15
   136                           
   137                           ;initializer for _tris_registers
   138   004BC4  92                 	db	146
   139   004BC5  0F                 	db	15
   140   004BC6  93                 	db	147
   141   004BC7  0F                 	db	15
   142   004BC8  94                 	db	148
   143   004BC9  0F                 	db	15
   144   004BCA  95                 	db	149
   145   004BCB  0F                 	db	15
   146   004BCC  96                 	db	150
   147   004BCD  0F                 	db	15
   148                           
   149                           ;initializer for _keypad
   150   004BCE  03                 	db	3
   151   004BCF  0B                 	db	11
   152   004BD0  13                 	db	19
   153   004BD1  1B                 	db	27
   154   004BD2  63                 	db	99
   155   004BD3  6B                 	db	107
   156   004BD4  73                 	db	115
   157   004BD5  7B                 	db	123
   158                           
   159                           ;initializer for _lcd_4
   160   004BD6  02                 	db	2
   161   004BD7  0A                 	db	10
   162   004BD8  22                 	db	34
   163   004BD9  2A                 	db	42
   164   004BDA  32                 	db	50
   165   004BDB  3A                 	db	58
   166                           
   167                           	psect	smallconst
   168   001000                     __psmallconst:
   169                           	callstack 0
   170   001000  00                 	db	0
   171   001001                     _btn_values:
   172                           	callstack 0
   173   001001  37                 	db	55
   174   001002  38                 	db	56
   175   001003  39                 	db	57
   176   001004  2F                 	db	47
   177   001005  34                 	db	52
   178   001006  35                 	db	53
   179   001007  36                 	db	54
   180   001008  2A                 	db	42
   181   001009  31                 	db	49
   182   00100A  32                 	db	50
   183   00100B  33                 	db	51
   184   00100C  2D                 	db	45
   185   00100D  23                 	db	35
   186   00100E  30                 	db	48
   187   00100F  3D                 	db	61
   188   001010  2B                 	db	43
   189   001011                     __end_of_btn_values:
   190                           	callstack 0
   191   001011                     STR_8:
   192   001011  20                 	db	32
   193   001012  20                 	db	32
   194   001013  20                 	db	32
   195   001014  20                 	db	32
   196   001015  20                 	db	32
   197   001016  20                 	db	32
   198   001017  20                 	db	32
   199   001018  20                 	db	32
   200   001019  20                 	db	32
   201   00101A  20                 	db	32
   202   00101B  20                 	db	32
   203   00101C  20                 	db	32
   204   00101D  20                 	db	32
   205   00101E  20                 	db	32
   206   00101F  20                 	db	32
   207   001020  20                 	db	32
   208   001021  20                 	db	32
   209   001022  20                 	db	32
   210   001023  20                 	db	32
   211   001024  20                 	db	32
   212   001025  00                 	db	0
   213   001026                     STR_9:
   214   001026  44                 	db	68	;'D'
   215   001027  69                 	db	105	;'i'
   216   001028  76                 	db	118	;'v'
   217   001029  69                 	db	105	;'i'
   218   00102A  73                 	db	115	;'s'
   219   00102B  69                 	db	105	;'i'
   220   00102C  6F                 	db	111	;'o'
   221   00102D  6E                 	db	110	;'n'
   222   00102E  20                 	db	32
   223   00102F  62                 	db	98	;'b'
   224   001030  79                 	db	121	;'y'
   225   001031  20                 	db	32
   226   001032  7A                 	db	122	;'z'
   227   001033  65                 	db	101	;'e'
   228   001034  72                 	db	114	;'r'
   229   001035  6F                 	db	111	;'o'
   230   001036  20                 	db	32
   231   001037  69                 	db	105	;'i'
   232   001038  73                 	db	115	;'s'
   233   001039  20                 	db	32
   234   00103A  00                 	db	0
   235   00103B                     STR_10:
   236   00103B  4E                 	db	78	;'N'
   237   00103C  6F                 	db	111	;'o'
   238   00103D  74                 	db	116	;'t'
   239   00103E  20                 	db	32
   240   00103F  61                 	db	97	;'a'
   241   001040  6C                 	db	108	;'l'
   242   001041  6C                 	db	108	;'l'
   243   001042  6F                 	db	111	;'o'
   244   001043  77                 	db	119	;'w'
   245   001044  65                 	db	101	;'e'
   246   001045  64                 	db	100	;'d'
   247   001046  20                 	db	32
   248   001047  00                 	db	0
   249   001048                     STR_7:
   250   001048  25                 	db	37
   251   001049  30                 	db	48	;'0'
   252   00104A  2E                 	db	46
   253   00104B  32                 	db	50	;'2'
   254   00104C  66                 	db	102	;'f'
   255   00104D  00                 	db	0
   256   00104E                     STR_11:
   257   00104E  69                 	db	105	;'i'
   258   00104F  6E                 	db	110	;'n'
   259   001050  66                 	db	102	;'f'
   260   001051  00                 	db	0
   261   001052                     STR_14:
   262   001052  6E                 	db	110	;'n'
   263   001053  61                 	db	97	;'a'
   264   001054  6E                 	db	110	;'n'
   265   001055  00                 	db	0
   266   001056                     STR_6:
   267   001056  25                 	db	37
   268   001057  6C                 	db	108	;'l'
   269   001058  64                 	db	100	;'d'
   270   001059  00                 	db	0
   271   00105A  25                 	db	37
   272   00105B  6C                 	db	108	;'l'
   273   00105C  75                 	db	117	;'u'
   274   00105D  00                 	db	0
   275   00105E                     STR_2:
   276   00105E  25                 	db	37
   277   00105F  69                 	db	105	;'i'
   278   001060  00                 	db	0
   279   001061  25                 	db	37
   280   001062  6C                 	db	108	;'l'
   281   001063  00                 	db	0
   282   001064  00                 	db	0	; dummy byte at the end
   283   000000                     
   284                           	psect	nvCOMRAM
   285   00007F                     __pnvCOMRAM:
   286                           	callstack 0
   287   00007F                     _val:
   288                           	callstack 0
   289   00007F                     	ds	1
   290   000000                     _PORTE	set	3972
   291   000000                     _PORTD	set	3971
   292   000000                     _PORTC	set	3970
   293   000000                     _PORTB	set	3969
   294   000000                     _PORTA	set	3968
   295   000000                     _LATA	set	3977
   296   000000                     _TRISA	set	3986
   297   000000                     _TRISE	set	3990
   298   000000                     _TRISD	set	3989
   299   000000                     _TRISC	set	3988
   300   000000                     _TRISB	set	3987
   301   000000                     _LATE	set	3981
   302   000000                     _LATD	set	3980
   303   000000                     _LATC	set	3979
   304   000000                     _LATB	set	3978
   305                           
   306                           ; #config settings
   307                           
   308                           	psect	cinit
   309   004960                     __pcinit:
   310                           	callstack 0
   311   004960                     start_initialization:
   312                           	callstack 0
   313   004960                     __initialization:
   314                           	callstack 0
   315                           
   316                           ; Initialize objects allocated to BANK0 (44 bytes)
   317                           ; load TBLPTR registers with __pidataBANK0
   318   004960  0EB0               	movlw	low __pidataBANK0
   319   004962  6EF6               	movwf	tblptrl,c
   320   004964  0E4B               	movlw	high __pidataBANK0
   321   004966  6EF7               	movwf	tblptrh,c
   322   004968  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   323   00496A  6EF8               	movwf	tblptru,c
   324   00496C  EE00  F0B3         	lfsr	0,__pdataBANK0
   325   004970  EE10 F02C          	lfsr	1,44
   326   004974                     copy_data0:
   327   004974  0009               	tblrd		*+
   328   004976  CFF5 FFEE          	movff	tablat,postinc0
   329   00497A  50E5               	movf	postdec1,w,c
   330   00497C  50E1               	movf	fsr1l,w,c
   331   00497E  E1FA               	bnz	copy_data0
   332                           
   333                           ; Clear objects allocated to BANK1 (113 bytes)
   334   004980  EE01  F000         	lfsr	0,__pbssBANK1
   335   004984  0E71               	movlw	113
   336   004986                     clear_0:
   337   004986  6AEE               	clrf	postinc0,c
   338   004988  06E8               	decf	wreg,f,c
   339   00498A  E1FD               	bnz	clear_0
   340                           
   341                           ; Clear objects allocated to BANK0 (51 bytes)
   342   00498C  EE00  F080         	lfsr	0,__pbssBANK0
   343   004990  0E33               	movlw	51
   344   004992                     clear_1:
   345   004992  6AEE               	clrf	postinc0,c
   346   004994  06E8               	decf	wreg,f,c
   347   004996  E1FD               	bnz	clear_1
   348   004998                     end_of_initialization:
   349                           	callstack 0
   350   004998                     __end_of__initialization:
   351                           	callstack 0
   352   004998  0E00               	movlw	low (__Lmediumconst shr (0+16))
   353   00499A  6EF8               	movwf	tblptru,c
   354   00499C  0100               	movlb	0
   355   00499E  EFBC  F013         	goto	_main	;jump to C main() function
   356                           
   357                           	psect	bssBANK0
   358   000080                     __pbssBANK0:
   359                           	callstack 0
   360   000080                     floorf@F521:
   361                           	callstack 0
   362   000080                     	ds	4
   363   000084                     ___fpclassifyf@F465:
   364                           	callstack 0
   365   000084                     	ds	4
   366   000088                     _res:
   367                           	callstack 0
   368   000088                     	ds	4
   369   00008C                     _int_res:
   370                           	callstack 0
   371   00008C                     	ds	4
   372   000090                     _width:
   373                           	callstack 0
   374   000090                     	ds	2
   375   000092                     _prec:
   376                           	callstack 0
   377   000092                     	ds	2
   378   000094                     _flags:
   379                           	callstack 0
   380   000094                     	ds	1
   381   000095                     _op:
   382                           	callstack 0
   383   000095                     	ds	1
   384   000096                     _sec_num_index:
   385                           	callstack 0
   386   000096                     	ds	1
   387   000097                     _first_num_index:
   388                           	callstack 0
   389   000097                     	ds	1
   390   000098                     _ret:
   391                           	callstack 0
   392   000098                     	ds	1
   393   000099                     relay_turn_off@F3032:
   394                           	callstack 0
   395   000099                     	ds	1
   396   00009A                     relay_turn_on@F3027:
   397                           	callstack 0
   398   00009A                     	ds	1
   399   00009B                     relay_initialize@F3022:
   400                           	callstack 0
   401   00009B                     	ds	1
   402   00009C                     led_turn_toggle@F3043:
   403                           	callstack 0
   404   00009C                     	ds	1
   405   00009D                     led_turn_off@F3038:
   406                           	callstack 0
   407   00009D                     	ds	1
   408   00009E                     led_turn_on@F3033:
   409                           	callstack 0
   410   00009E                     	ds	1
   411   00009F                     led_initialize@F3028:
   412                           	callstack 0
   413   00009F                     	ds	1
   414   0000A0                     _str_int_res:
   415                           	callstack 0
   416   0000A0                     	ds	11
   417   0000AB                     _sec_num:
   418                           	callstack 0
   419   0000AB                     	ds	4
   420   0000AF                     _first_num:
   421                           	callstack 0
   422   0000AF                     	ds	4
   423                           
   424                           	psect	dataBANK0
   425   0000B3                     __pdataBANK0:
   426                           	callstack 0
   427   0000B3                     _port_registers:
   428                           	callstack 0
   429   0000B3                     	ds	10
   430   0000BD                     _lat_registers:
   431                           	callstack 0
   432   0000BD                     	ds	10
   433   0000C7                     _tris_registers:
   434                           	callstack 0
   435   0000C7                     	ds	10
   436   0000D1                     _keypad:
   437                           	callstack 0
   438   0000D1                     	ds	8
   439   0000D9                     _lcd_4:
   440                           	callstack 0
   441   0000D9                     	ds	6
   442                           
   443                           	psect	bssBANK1
   444   000100                     __pbssBANK1:
   445                           	callstack 0
   446   000100                     _dbuf:
   447                           	callstack 0
   448   000100                     	ds	80
   449   000150                     _str_res:
   450                           	callstack 0
   451   000150                     	ds	11
   452   00015B                     _str_sec_number:
   453                           	callstack 0
   454   00015B                     	ds	11
   455   000166                     _str_first_number:
   456                           	callstack 0
   457   000166                     	ds	11
   458                           
   459                           	psect	cstackBANK0
   460   0000DF                     __pcstackBANK0:
   461                           	callstack 0
   462   0000DF                     vfprintf@cfmt:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x0
   466   0000DF                     	ds	1
   467   0000E0                     ?_sprintf:
   468                           	callstack 0
   469   0000E0                     sprintf@s:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x1
   473   0000E0                     	ds	2
   474   0000E2                     sprintf@fmt:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x3
   478   0000E2                     	ds	5
   479   0000E7                     sprintf@ap:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x8
   483   0000E7                     	ds	1
   484   0000E8                     sprintf@f:
   485                           	callstack 0
   486                           
   487                           ; 12 bytes @ 0x9
   488   0000E8                     	ds	12
   489   0000F4                     convert_sint32_to_string@value:
   490                           	callstack 0
   491   0000F4                     convert_float32_to_string@value:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x15
   495   0000F4                     	ds	4
   496   0000F8                     convert_sint32_to_string@str:
   497                           	callstack 0
   498   0000F8                     convert_float32_to_string@str:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x19
   502   0000F8                     	ds	2
   503   0000FA                     ??_main:
   504                           
   505                           ; 1 bytes @ 0x1B
   506   0000FA                     	ds	2
   507                           
   508                           	psect	cstackCOMRAM
   509   000001                     __pcstackCOMRAM:
   510                           	callstack 0
   511   000001                     ?___fpclassifyf:
   512                           	callstack 0
   513   000001                     ?___wmul:
   514                           	callstack 0
   515   000001                     ?___fladd:
   516                           	callstack 0
   517   000001                     ?___flmul:
   518                           	callstack 0
   519   000001                     ?_labs:
   520                           	callstack 0
   521   000001                     ?___lmul:
   522                           	callstack 0
   523   000001                     ?___lldiv:
   524                           	callstack 0
   525   000001                     ?___aldiv:
   526                           	callstack 0
   527   000001                     ?___almod:
   528                           	callstack 0
   529   000001                     ?___flneg:
   530                           	callstack 0
   531   000001                     ?___fltol:
   532                           	callstack 0
   533   000001                     ?___llmod:
   534                           	callstack 0
   535   000001                     ?___xxtofl:
   536                           	callstack 0
   537   000001                     gpio_pin_direction_intialize@_pin_config:
   538                           	callstack 0
   539   000001                     gpio_pin_write_logic@_pin_config:
   540                           	callstack 0
   541   000001                     gpio_pin_read_logic@_pin_config:
   542                           	callstack 0
   543   000001                     ___wmul@multiplier:
   544                           	callstack 0
   545   000001                     memset@dest:
   546                           	callstack 0
   547   000001                     memcpy@d1:
   548                           	callstack 0
   549   000001                     fputc@c:
   550                           	callstack 0
   551   000001                     strcpy@dest:
   552                           	callstack 0
   553   000001                     ___lmul@multiplier:
   554                           	callstack 0
   555   000001                     ___lldiv@dividend:
   556                           	callstack 0
   557   000001                     ___aldiv@dividend:
   558                           	callstack 0
   559   000001                     ___almod@dividend:
   560                           	callstack 0
   561   000001                     ___fleq@ff1:
   562                           	callstack 0
   563   000001                     ___flneg@f1:
   564                           	callstack 0
   565   000001                     ___fltol@f1:
   566                           	callstack 0
   567   000001                     ___llmod@dividend:
   568                           	callstack 0
   569   000001                     ___fladd@b:
   570                           	callstack 0
   571   000001                     ___flmul@b:
   572                           	callstack 0
   573   000001                     ___xxtofl@val:
   574                           	callstack 0
   575   000001                     ___fpclassifyf@x:
   576                           	callstack 0
   577   000001                     labs@a:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x0
   581   000001                     	ds	1
   582   000002                     ??_gpio_pin_direction_intialize:
   583   000002                     gpio_pin_write_logic@logic:
   584                           	callstack 0
   585   000002                     gpio_pin_read_logic@logic:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x1
   589   000002                     	ds	1
   590   000003                     ??_gpio_pin_write_logic:
   591   000003                     ??_gpio_pin_read_logic:
   592   000003                     fputc@fp:
   593                           	callstack 0
   594   000003                     strcpy@src:
   595                           	callstack 0
   596   000003                     ___wmul@multiplicand:
   597                           	callstack 0
   598   000003                     memset@c:
   599                           	callstack 0
   600   000003                     memcpy@s1:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x2
   604   000003                     	ds	1
   605   000004                     ??_fputc:
   606   000004                     ??_strcpy:
   607                           
   608                           ; 1 bytes @ 0x3
   609   000004                     	ds	1
   610   000005                     ??___fpclassifyf:
   611   000005                     ??_labs:
   612   000005                     ??___fltol:
   613   000005                     ??___xxtofl:
   614   000005                     ___wmul@product:
   615                           	callstack 0
   616   000005                     memset@n:
   617                           	callstack 0
   618   000005                     memcpy@n:
   619                           	callstack 0
   620   000005                     strcpy@d:
   621                           	callstack 0
   622   000005                     ___lmul@multiplicand:
   623                           	callstack 0
   624   000005                     ___lldiv@divisor:
   625                           	callstack 0
   626   000005                     ___aldiv@divisor:
   627                           	callstack 0
   628   000005                     ___almod@divisor:
   629                           	callstack 0
   630   000005                     ___fleq@ff2:
   631                           	callstack 0
   632   000005                     ___llmod@divisor:
   633                           	callstack 0
   634   000005                     ___fladd@a:
   635                           	callstack 0
   636   000005                     ___flmul@a:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x4
   640   000005                     	ds	2
   641   000007                     ?_read_prec_or_width:
   642                           	callstack 0
   643   000007                     gpio_pin_direction_intialize@ret:
   644                           	callstack 0
   645   000007                     gpio_pin_read_logic@ret:
   646                           	callstack 0
   647   000007                     read_prec_or_width@fmt:
   648                           	callstack 0
   649   000007                     memcpy@tmp:
   650                           	callstack 0
   651   000007                     memset@p:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x6
   655   000007                     	ds	1
   656   000008                     gpio_pin_write_logic@ret:
   657                           	callstack 0
   658   000008                     read_prec_or_width@ap:
   659                           	callstack 0
   660   000008                     memcpy@d:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x7
   664   000008                     	ds	1
   665   000009                     ??___fladd:
   666   000009                     ??___flmul:
   667   000009                     ??___fleq:
   668   000009                     lcd_send_4bits@lcd:
   669                           	callstack 0
   670   000009                     lcd_4bit_send_enable_signal@lcd:
   671                           	callstack 0
   672   000009                     keypad_get_value@_keypad_obj:
   673                           	callstack 0
   674   000009                     gpio_pin_intialize@_pin_config:
   675                           	callstack 0
   676   000009                     ___aldiv@counter:
   677                           	callstack 0
   678   000009                     ___almod@counter:
   679                           	callstack 0
   680   000009                     ___fltol@sign1:
   681                           	callstack 0
   682   000009                     ___llmod@counter:
   683                           	callstack 0
   684   000009                     ___xxtofl@sign:
   685                           	callstack 0
   686   000009                     read_prec_or_width@c:
   687                           	callstack 0
   688   000009                     ___fpclassifyf@e:
   689                           	callstack 0
   690   000009                     fputs@s:
   691                           	callstack 0
   692   000009                     ___lmul@product:
   693                           	callstack 0
   694   000009                     ___lldiv@quotient:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x8
   698   000009                     	ds	1
   699   00000A                     ??_gpio_pin_intialize:
   700   00000A                     lcd_send_4bits@_data_command:
   701                           	callstack 0
   702   00000A                     keypad_get_value@value:
   703                           	callstack 0
   704   00000A                     ___aldiv@sign:
   705                           	callstack 0
   706   00000A                     ___almod@sign:
   707                           	callstack 0
   708   00000A                     ___fltol@exp1:
   709                           	callstack 0
   710   00000A                     ___xxtofl@exp:
   711                           	callstack 0
   712   00000A                     read_prec_or_width@n:
   713                           	callstack 0
   714   00000A                     memcpy@s:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x9
   718   00000A                     	ds	1
   719   00000B                     ??_lcd_send_4bits:
   720   00000B                     ??_keypad_get_value:
   721   00000B                     ?_abs:
   722                           	callstack 0
   723   00000B                     gpio_pin_intialize@ret:
   724                           	callstack 0
   725   00000B                     fputs@fp:
   726                           	callstack 0
   727   00000B                     abs@a:
   728                           	callstack 0
   729   00000B                     ___aldiv@quotient:
   730                           	callstack 0
   731   00000B                     ___xxtofl@arg:
   732                           	callstack 0
   733   00000B                     ___fpclassifyf@u:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0xA
   737   00000B                     	ds	1
   738   00000C                     keypad_initialize@_keypad_obj:
   739                           	callstack 0
   740   00000C                     keypad_get_value@logic:
   741                           	callstack 0
   742   00000C                     fputs@c:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0xB
   746   00000C                     	ds	1
   747   00000D                     ??_abs:
   748   00000D                     ?_atol:
   749                           	callstack 0
   750   00000D                     lcd_send_4bits@data_pin_counter:
   751                           	callstack 0
   752   00000D                     keypad_initialize@ret:
   753                           	callstack 0
   754   00000D                     keypad_get_value@counter:
   755                           	callstack 0
   756   00000D                     ___lldiv@counter:
   757                           	callstack 0
   758   00000D                     ___fladd@signs:
   759                           	callstack 0
   760   00000D                     ___flmul@sign:
   761                           	callstack 0
   762   00000D                     atol@s:
   763                           	callstack 0
   764   00000D                     fputs@i:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0xC
   768   00000D                     	ds	1
   769   00000E                     lcd_4bit_send_command@lcd:
   770                           	callstack 0
   771   00000E                     lcd_4bit_send_char_data@lcd:
   772                           	callstack 0
   773   00000E                     keypad_initialize@rows_counter:
   774                           	callstack 0
   775   00000E                     keypad_get_value@rows_counter:
   776                           	callstack 0
   777   00000E                     ___fladd@aexp:
   778                           	callstack 0
   779   00000E                     ___flmul@aexp:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0xD
   783   00000E                     	ds	1
   784   00000F                     ?___fldiv:
   785                           	callstack 0
   786   00000F                     lcd_4bit_send_command@command:
   787                           	callstack 0
   788   00000F                     lcd_4bit_send_char_data@data:
   789                           	callstack 0
   790   00000F                     keypad_initialize@columns_counter:
   791                           	callstack 0
   792   00000F                     keypad_get_value@columns_counter:
   793                           	callstack 0
   794   00000F                     ___fladd@bexp:
   795                           	callstack 0
   796   00000F                     pad@fp:
   797                           	callstack 0
   798   00000F                     ___fldiv@b:
   799                           	callstack 0
   800   00000F                     ___flmul@grs:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0xE
   804   00000F                     	ds	1
   805   000010                     lcd_4bit_send_command@ret:
   806                           	callstack 0
   807   000010                     lcd_4bit_send_char_data@ret:
   808                           	callstack 0
   809   000010                     ___fladd@grs:
   810                           	callstack 0
   811   000010                     pad@buf:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0xF
   815   000010                     	ds	1
   816   000011                     ??_atol:
   817   000011                     lcd_4bit_intialize@lcd:
   818                           	callstack 0
   819   000011                     lcd_4bit_send_string@lcd:
   820                           	callstack 0
   821   000011                     lcd_4bit_set_cursor@lcd:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x10
   825   000011                     	ds	1
   826   000012                     ??_lcd_4bit_intialize:
   827   000012                     lcd_4bit_set_cursor@row:
   828                           	callstack 0
   829   000012                     lcd_4bit_send_string@str:
   830                           	callstack 0
   831   000012                     pad@p:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x11
   835   000012                     	ds	1
   836   000013                     lcd_4bit_intialize@ret:
   837                           	callstack 0
   838   000013                     lcd_4bit_set_cursor@column:
   839                           	callstack 0
   840   000013                     ___flmul@bexp:
   841                           	callstack 0
   842   000013                     ___fldiv@a:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x12
   846   000013                     	ds	1
   847   000014                     ??_pad:
   848   000014                     lcd_4bit_intialize@data_pins_counter:
   849                           	callstack 0
   850   000014                     lcd_4bit_send_char_data_pos@lcd:
   851                           	callstack 0
   852   000014                     lcd_4bit_send_string@ret:
   853                           	callstack 0
   854   000014                     ___flmul@prod:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x13
   858   000014                     	ds	1
   859   000015                     lcd_4bit_send_char_data_pos@row:
   860                           	callstack 0
   861   000015                     lcd_4bit_send_string_pos@lcd:
   862                           	callstack 0
   863   000015                     pad@i:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x14
   867   000015                     	ds	1
   868   000016                     lcd_4bit_send_char_data_pos@column:
   869                           	callstack 0
   870   000016                     lcd_4bit_send_string_pos@row:
   871                           	callstack 0
   872   000016                     atol@neg:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x15
   876   000016                     	ds	1
   877   000017                     ??___fldiv:
   878   000017                     lcd_4bit_send_char_data_pos@data:
   879                           	callstack 0
   880   000017                     lcd_4bit_send_string_pos@column:
   881                           	callstack 0
   882   000017                     dtoa@fp:
   883                           	callstack 0
   884   000017                     utoa@fp:
   885                           	callstack 0
   886   000017                     atol@n:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x16
   890   000017                     	ds	1
   891   000018                     lcd_4bit_send_char_data_pos@ret:
   892                           	callstack 0
   893   000018                     lcd_4bit_send_string_pos@str:
   894                           	callstack 0
   895   000018                     ___flmul@temp:
   896                           	callstack 0
   897   000018                     dtoa@d:
   898                           	callstack 0
   899   000018                     utoa@d:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x17
   903   000018                     	ds	2
   904   00001A                     ?___flsub:
   905                           	callstack 0
   906   00001A                     ___flge@ff1:
   907                           	callstack 0
   908   00001A                     ___flsub@b:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x19
   912   00001A                     	ds	1
   913   00001B                     convert_str_to_int@str:
   914                           	callstack 0
   915   00001B                     ___fldiv@rem:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x1A
   919   00001B                     	ds	1
   920   00001C                     _dtoa$1419:
   921                           	callstack 0
   922   00001C                     utoa@p:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x1B
   926   00001C                     	ds	1
   927   00001D                     convert_str_to_int@num:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x1C
   931   00001D                     	ds	1
   932   00001E                     dtoa@p:
   933                           	callstack 0
   934   00001E                     utoa@w:
   935                           	callstack 0
   936   00001E                     ___flge@ff2:
   937                           	callstack 0
   938   00001E                     ___flsub@a:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x1D
   942   00001E                     	ds	1
   943   00001F                     ___fldiv@sign:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x1E
   947   00001F                     	ds	1
   948   000020                     ___fldiv@new_exp:
   949                           	callstack 0
   950   000020                     dtoa@w:
   951                           	callstack 0
   952   000020                     utoa@i:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x1F
   956   000020                     	ds	2
   957   000022                     ??___flge:
   958   000022                     dtoa@s:
   959                           	callstack 0
   960   000022                     ___fldiv@grs:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x21
   964   000022                     	ds	1
   965   000023                     dtoa@i:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x22
   969   000023                     	ds	3
   970   000026                     ___fldiv@bexp:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x25
   974   000026                     	ds	1
   975   000027                     ___fldiv@aexp:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x26
   979   000027                     	ds	1
   980   000028                     ?_floorf:
   981                           	callstack 0
   982   000028                     floorf@x:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x27
   986   000028                     	ds	4
   987   00002C                     ??_floorf:
   988                           
   989                           ; 1 bytes @ 0x2B
   990   00002C                     	ds	6
   991   000032                     floorf@m:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x31
   995   000032                     	ds	4
   996   000036                     floorf@e:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x35
  1000   000036                     	ds	2
  1001   000038                     floorf@u:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x37
  1005   000038                     	ds	4
  1006   00003C                     efgtoa@fp:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x3B
  1010   00003C                     	ds	1
  1011   00003D                     efgtoa@f:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x3C
  1015   00003D                     	ds	4
  1016   000041                     efgtoa@c:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x40
  1020   000041                     	ds	1
  1021   000042                     ??_efgtoa:
  1022                           
  1023                           ; 1 bytes @ 0x41
  1024   000042                     	ds	2
  1025   000044                     efgtoa@ne:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x43
  1029   000044                     	ds	2
  1030   000046                     efgtoa@p:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x45
  1034   000046                     	ds	2
  1035   000048                     efgtoa@t:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x47
  1039   000048                     	ds	2
  1040   00004A                     _efgtoa$1450:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x49
  1044   00004A                     	ds	2
  1045   00004C                     efgtoa@pp:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x4B
  1049   00004C                     	ds	1
  1050   00004D                     efgtoa@mode:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x4C
  1054   00004D                     	ds	1
  1055   00004E                     efgtoa@nmode:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x4D
  1059   00004E                     	ds	1
  1060   00004F                     efgtoa@d:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x4E
  1064   00004F                     	ds	2
  1065   000051                     efgtoa@m:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x50
  1069   000051                     	ds	2
  1070   000053                     efgtoa@e:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x52
  1074   000053                     	ds	2
  1075   000055                     efgtoa@ou:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x54
  1079   000055                     	ds	4
  1080   000059                     efgtoa@w:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x58
  1084   000059                     	ds	2
  1085   00005B                     efgtoa@h:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x5A
  1089   00005B                     	ds	4
  1090   00005F                     efgtoa@l:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x5E
  1094   00005F                     	ds	4
  1095   000063                     efgtoa@i:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x62
  1099   000063                     	ds	2
  1100   000065                     efgtoa@sign:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x64
  1104   000065                     	ds	1
  1105   000066                     efgtoa@g:
  1106                           	callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x65
  1109   000066                     	ds	4
  1110   00006A                     efgtoa@n:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x69
  1114   00006A                     	ds	2
  1115   00006C                     efgtoa@u:
  1116                           	callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x6B
  1119   00006C                     	ds	4
  1120   000070                     vfpfcnvrt@fp:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0x6F
  1124   000070                     	ds	1
  1125   000071                     vfpfcnvrt@fmt:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x70
  1129   000071                     	ds	1
  1130   000072                     vfpfcnvrt@ap:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x71
  1134   000072                     	ds	1
  1135   000073                     ??_vfpfcnvrt:
  1136                           
  1137                           ; 1 bytes @ 0x72
  1138   000073                     	ds	2
  1139   000075                     vfpfcnvrt@done:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x74
  1143   000075                     	ds	1
  1144   000076                     vfpfcnvrt@convarg:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x75
  1148   000076                     	ds	4
  1149   00007A                     vfpfcnvrt@c:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x79
  1153   00007A                     	ds	1
  1154   00007B                     vfpfcnvrt@cp:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x7A
  1158   00007B                     	ds	1
  1159   00007C                     ?_vfprintf:
  1160                           	callstack 0
  1161   00007C                     vfprintf@fp:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x7B
  1165   00007C                     	ds	1
  1166   00007D                     vfprintf@fmt:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x7C
  1170   00007D                     	ds	1
  1171   00007E                     vfprintf@ap:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x7D
  1175   00007E                     	ds	1
  1176   00007F                     
  1177                           ; 1 bytes @ 0x7E
  1178 ;;
  1179 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1180 ;;
  1181 ;; *************** function _main *****************
  1182 ;; Defined at:
  1183 ;;		line 22 in file "application.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  2  519[None  ] int 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;Total ram usage:        2 bytes
  1202 ;; Hardware stack levels required when called: 9
  1203 ;; This function calls:
  1204 ;;		___fldiv
  1205 ;;		___lmul
  1206 ;;		___xxtofl
  1207 ;;		_application_intialize
  1208 ;;		_convert_float32_to_string
  1209 ;;		_convert_sint32_to_string
  1210 ;;		_convert_str_to_int
  1211 ;;		_keypad_get_value
  1212 ;;		_lcd_4bit_send_char_data_pos
  1213 ;;		_lcd_4bit_send_command
  1214 ;;		_lcd_4bit_send_string_pos
  1215 ;; This function is called by:
  1216 ;;		Startup code after reset
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text0
  1221   002778                     __ptext0:
  1222                           	callstack 0
  1223   002778                     _main:
  1224                           	callstack 22
  1225   002778                     
  1226                           ;application.c: 23:     application_intialize();
  1227   002778  EC2D  F026         	call	_application_intialize	;wreg free
  1228   00277C  EFC0  F013         	goto	l7687
  1229   002780                     l521:
  1230   002780                     l7687:
  1231                           
  1232                           ;application.c: 26:             val = '\0';
  1233   002780  0E00               	movlw	0
  1234   002782  6E7F               	movwf	_val^0,c
  1235   002784                     l7689:
  1236                           
  1237                           ;application.c: 28:                 keypad_get_value(&keypad, &val);
  1238   002784  0ED1               	movlw	low _keypad
  1239   002786  6E09               	movwf	keypad_get_value@_keypad_obj^0,c
  1240   002788  0E7F               	movlw	low _val
  1241   00278A  6E0A               	movwf	keypad_get_value@value^0,c
  1242   00278C  EC4E  F01F         	call	_keypad_get_value	;wreg free
  1243   002790                     
  1244                           ;application.c: 29:             } while (val == '\0');
  1245   002790  507F               	movf	_val^0,w,c
  1246   002792  B4D8               	btfsc	status,2,c
  1247   002794  EFCE  F013         	goto	u8961
  1248   002798  EFD0  F013         	goto	u8960
  1249   00279C                     u8961:
  1250   00279C  EFC2  F013         	goto	l7689
  1251   0027A0                     u8960:
  1252   0027A0                     
  1253                           ;application.c: 30:             if ('+' == val || '-' == val || '*' == val || '/' == val
      +                           || (11 - 1) == first_num_index) {
  1254   0027A0  0E2B               	movlw	43
  1255   0027A2  187F               	xorwf	_val^0,w,c
  1256   0027A4  B4D8               	btfsc	status,2,c
  1257   0027A6  EFD7  F013         	goto	u8971
  1258   0027AA  EFD9  F013         	goto	u8970
  1259   0027AE                     u8971:
  1260   0027AE  EFFE  F013         	goto	l526
  1261   0027B2                     u8970:
  1262   0027B2  0E2D               	movlw	45
  1263   0027B4  187F               	xorwf	_val^0,w,c
  1264   0027B6  B4D8               	btfsc	status,2,c
  1265   0027B8  EFE0  F013         	goto	u8981
  1266   0027BC  EFE2  F013         	goto	u8980
  1267   0027C0                     u8981:
  1268   0027C0  EFFE  F013         	goto	l526
  1269   0027C4                     u8980:
  1270   0027C4  0E2A               	movlw	42
  1271   0027C6  187F               	xorwf	_val^0,w,c
  1272   0027C8  B4D8               	btfsc	status,2,c
  1273   0027CA  EFE9  F013         	goto	u8991
  1274   0027CE  EFEB  F013         	goto	u8990
  1275   0027D2                     u8991:
  1276   0027D2  EFFE  F013         	goto	l526
  1277   0027D6                     u8990:
  1278   0027D6  0E2F               	movlw	47
  1279   0027D8  187F               	xorwf	_val^0,w,c
  1280   0027DA  B4D8               	btfsc	status,2,c
  1281   0027DC  EFF2  F013         	goto	u9001
  1282   0027E0  EFF4  F013         	goto	u9000
  1283   0027E4                     u9001:
  1284   0027E4  EFFE  F013         	goto	l526
  1285   0027E8                     u9000:
  1286   0027E8  0E0A               	movlw	10
  1287   0027EA  0100               	movlb	0	; () banked
  1288   0027EC  1997               	xorwf	_first_num_index& (0+255),w,b
  1289   0027EE  A4D8               	btfss	status,2,c
  1290   0027F0  EFFC  F013         	goto	u9011
  1291   0027F4  EFFE  F013         	goto	u9010
  1292   0027F8                     u9011:
  1293   0027F8  EF2D  F014         	goto	l7709
  1294   0027FC                     u9010:
  1295   0027FC                     l526:
  1296                           
  1297                           ;application.c: 31:                 op = val;
  1298   0027FC  C07F  F095         	movff	_val,_op
  1299   002800                     
  1300                           ;application.c: 32:                 lcd_4bit_send_string_pos(&lcd_4, 4, 1, str_first_num
      +                          ber);
  1301   002800  0ED9               	movlw	low _lcd_4
  1302   002802  6E15               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1303   002804  0E04               	movlw	4
  1304   002806  6E16               	movwf	lcd_4bit_send_string_pos@row^0,c
  1305   002808  0E01               	movlw	1
  1306   00280A  6E17               	movwf	lcd_4bit_send_string_pos@column^0,c
  1307   00280C  0E66               	movlw	low _str_first_number
  1308   00280E  6E18               	movwf	lcd_4bit_send_string_pos@str^0,c
  1309   002810  0E01               	movlw	high _str_first_number
  1310   002812  6E19               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1311   002814  ECA3  F025         	call	_lcd_4bit_send_string_pos	;wreg free
  1312   002818                     
  1313                           ;application.c: 33:                 lcd_4bit_send_char_data_pos(&lcd_4, 4, (first_num_in
      +                          dex + 1), op);
  1314   002818  0ED9               	movlw	low _lcd_4
  1315   00281A  6E14               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1316   00281C  0E04               	movlw	4
  1317   00281E  6E15               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1318   002820  0100               	movlb	0	; () banked
  1319   002822  2997               	incf	_first_num_index& (0+255),w,b
  1320   002824  6E16               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  1321   002826  C095  F017         	movff	_op,lcd_4bit_send_char_data_pos@data
  1322   00282A  EC30  F025         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1323   00282E                     
  1324                           ;application.c: 34:                 lcd_4bit_send_string_pos(&lcd_4, 1, 1, "            
      +                                  ");
  1325   00282E  0ED9               	movlw	low _lcd_4
  1326   002830  6E15               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1327   002832  0E01               	movlw	1
  1328   002834  6E16               	movwf	lcd_4bit_send_string_pos@row^0,c
  1329   002836  0E01               	movlw	1
  1330   002838  6E17               	movwf	lcd_4bit_send_string_pos@column^0,c
  1331   00283A  0E11               	movlw	low STR_8
  1332   00283C  6E18               	movwf	lcd_4bit_send_string_pos@str^0,c
  1333   00283E  5018               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1334   002840  A4D8               	btfss	status,2,c
  1335   002842  0E10               	movlw	high __smallconst
  1336   002844  6E19               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1337   002846  ECA3  F025         	call	_lcd_4bit_send_string_pos	;wreg free
  1338                           
  1339                           ;application.c: 35:                 lcd_4bit_send_command(&lcd_4, 0x02);
  1340   00284A  0ED9               	movlw	low _lcd_4
  1341   00284C  6E0E               	movwf	lcd_4bit_send_command@lcd^0,c
  1342   00284E  0E02               	movlw	2
  1343   002850  6E0F               	movwf	lcd_4bit_send_command@command^0,c
  1344   002852  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
  1345                           
  1346                           ;application.c: 36:                 break;
  1347   002856  EF60  F014         	goto	l7723
  1348   00285A                     l7709:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;application.c: 38:             if ('#' == val) {
  1352   00285A  0E23               	movlw	35
  1353   00285C  187F               	xorwf	_val^0,w,c
  1354   00285E  A4D8               	btfss	status,2,c
  1355   002860  EF34  F014         	goto	u9021
  1356   002864  EF36  F014         	goto	u9020
  1357   002868                     u9021:
  1358   002868  EF3E  F014         	goto	l7715
  1359   00286C                     u9020:
  1360   00286C                     l7711:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;application.c: 39:                 lcd_4bit_send_command(&lcd_4, 0x01);
  1364   00286C  0ED9               	movlw	low _lcd_4
  1365   00286E  6E0E               	movwf	lcd_4bit_send_command@lcd^0,c
  1366   002870  0E01               	movlw	1
  1367   002872  6E0F               	movwf	lcd_4bit_send_command@command^0,c
  1368   002874  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
  1369   002878  EFB7  F015         	goto	l529
  1370   00287C                     l7715:
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;application.c: 42:             str_first_number[first_num_index] = val;
  1374   00287C  0E66               	movlw	low _str_first_number
  1375   00287E  2597               	addwf	_first_num_index& (0+255),w,b
  1376   002880  6ED9               	movwf	fsr2l,c
  1377   002882  6ADA               	clrf	fsr2h,c
  1378   002884  0E01               	movlw	high _str_first_number
  1379   002886  22DA               	addwfc	fsr2h,f,c
  1380   002888  C07F  FFDF         	movff	_val,indf2
  1381   00288C                     
  1382                           ; BSR set to: 0
  1383                           ;application.c: 43:             first_num_index++;
  1384   00288C  2B97               	incf	_first_num_index& (0+255),f,b
  1385   00288E                     
  1386                           ; BSR set to: 0
  1387                           ;application.c: 44:             lcd_4bit_send_char_data_pos(&lcd_4, 1, first_num_index, 
      +                          val);
  1388   00288E  0ED9               	movlw	low _lcd_4
  1389   002890  6E14               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1390   002892  0E01               	movlw	1
  1391   002894  6E15               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1392   002896  C097  F016         	movff	_first_num_index,lcd_4bit_send_char_data_pos@column
  1393   00289A  C07F  F017         	movff	_val,lcd_4bit_send_char_data_pos@data
  1394   00289E  EC30  F025         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1395   0028A2                     
  1396                           ;application.c: 45:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
  1397   0028A2  0E03               	movlw	3
  1398   0028A4  0100               	movlb	0	; () banked
  1399   0028A6  6FFB               	movwf	(??_main+1)& (0+255),b
  1400   0028A8  0E8A               	movlw	138
  1401   0028AA  6FFA               	movwf	??_main& (0+255),b
  1402   0028AC  0E55               	movlw	85
  1403   0028AE                     u9087:
  1404   0028AE  2EE8               	decfsz	wreg,f,c
  1405   0028B0  D7FE               	bra	u9087
  1406   0028B2  2FFA               	decfsz	??_main& (0+255),f,b
  1407   0028B4  D7FC               	bra	u9087
  1408   0028B6  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1409   0028B8  D7FA               	bra	u9087
  1410   0028BA  D000               	nop2	
  1411   0028BC  EFC0  F013         	goto	l7687
  1412   0028C0                     l7723:
  1413                           
  1414                           ;application.c: 47:         _delay((unsigned long)((250)*(8000000UL/4000.0)));
  1415   0028C0  0E03               	movlw	3
  1416   0028C2  0100               	movlb	0	; () banked
  1417   0028C4  6FFB               	movwf	(??_main+1)& (0+255),b
  1418   0028C6  0E8A               	movlw	138
  1419   0028C8  6FFA               	movwf	??_main& (0+255),b
  1420   0028CA  0E55               	movlw	85
  1421   0028CC                     u9097:
  1422   0028CC  2EE8               	decfsz	wreg,f,c
  1423   0028CE  D7FE               	bra	u9097
  1424   0028D0  2FFA               	decfsz	??_main& (0+255),f,b
  1425   0028D2  D7FC               	bra	u9097
  1426   0028D4  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1427   0028D6  D7FA               	bra	u9097
  1428   0028D8  D000               	nop2	
  1429   0028DA                     
  1430                           ;application.c: 49:             val = '\0';
  1431   0028DA  0E00               	movlw	0
  1432   0028DC  6E7F               	movwf	_val^0,c
  1433   0028DE                     l7727:
  1434                           
  1435                           ;application.c: 51:                 keypad_get_value(&keypad, &val);
  1436   0028DE  0ED1               	movlw	low _keypad
  1437   0028E0  6E09               	movwf	keypad_get_value@_keypad_obj^0,c
  1438   0028E2  0E7F               	movlw	low _val
  1439   0028E4  6E0A               	movwf	keypad_get_value@value^0,c
  1440   0028E6  EC4E  F01F         	call	_keypad_get_value	;wreg free
  1441   0028EA                     
  1442                           ;application.c: 52:             } while (val == '\0');
  1443   0028EA  507F               	movf	_val^0,w,c
  1444   0028EC  B4D8               	btfsc	status,2,c
  1445   0028EE  EF7B  F014         	goto	u9031
  1446   0028F2  EF7D  F014         	goto	u9030
  1447   0028F6                     u9031:
  1448   0028F6  EF6F  F014         	goto	l7727
  1449   0028FA                     u9030:
  1450   0028FA                     
  1451                           ;application.c: 53:             if ('=' == val || (11 - 1) == sec_num_index) {
  1452   0028FA  0E3D               	movlw	61
  1453   0028FC  187F               	xorwf	_val^0,w,c
  1454   0028FE  B4D8               	btfsc	status,2,c
  1455   002900  EF84  F014         	goto	u9041
  1456   002904  EF86  F014         	goto	u9040
  1457   002908                     u9041:
  1458   002908  EF90  F014         	goto	l7735
  1459   00290C                     u9040:
  1460   00290C  0E0A               	movlw	10
  1461   00290E  0100               	movlb	0	; () banked
  1462   002910  1996               	xorwf	_sec_num_index& (0+255),w,b
  1463   002912  A4D8               	btfss	status,2,c
  1464   002914  EF8E  F014         	goto	u9051
  1465   002918  EF90  F014         	goto	u9050
  1466   00291C                     u9051:
  1467   00291C  EF98  F014         	goto	l7737
  1468   002920                     u9050:
  1469   002920                     l7735:
  1470                           
  1471                           ;application.c: 54:                 lcd_4bit_send_command(&lcd_4, 0x01);
  1472   002920  0ED9               	movlw	low _lcd_4
  1473   002922  6E0E               	movwf	lcd_4bit_send_command@lcd^0,c
  1474   002924  0E01               	movlw	1
  1475   002926  6E0F               	movwf	lcd_4bit_send_command@command^0,c
  1476   002928  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
  1477                           
  1478                           ;application.c: 55:                 break;
  1479   00292C  EFB8  F014         	goto	l7751
  1480   002930                     l7737:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;application.c: 57:             if ('#' == val) {
  1484   002930  0E23               	movlw	35
  1485   002932  187F               	xorwf	_val^0,w,c
  1486   002934  A4D8               	btfss	status,2,c
  1487   002936  EF9F  F014         	goto	u9061
  1488   00293A  EFA1  F014         	goto	u9060
  1489   00293E                     u9061:
  1490   00293E  EFA3  F014         	goto	l7743
  1491   002942                     u9060:
  1492   002942  EF36  F014         	goto	l7711
  1493   002946                     l7743:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;application.c: 61:             str_sec_number[sec_num_index] = val;
  1497   002946  0E5B               	movlw	low _str_sec_number
  1498   002948  2596               	addwf	_sec_num_index& (0+255),w,b
  1499   00294A  6ED9               	movwf	fsr2l,c
  1500   00294C  6ADA               	clrf	fsr2h,c
  1501   00294E  0E01               	movlw	high _str_sec_number
  1502   002950  22DA               	addwfc	fsr2h,f,c
  1503   002952  C07F  FFDF         	movff	_val,indf2
  1504   002956                     
  1505                           ; BSR set to: 0
  1506                           ;application.c: 62:             sec_num_index++;
  1507   002956  2B96               	incf	_sec_num_index& (0+255),f,b
  1508   002958                     
  1509                           ; BSR set to: 0
  1510                           ;application.c: 63:             lcd_4bit_send_char_data_pos(&lcd_4, 1, sec_num_index, va
      +                          l);
  1511   002958  0ED9               	movlw	low _lcd_4
  1512   00295A  6E14               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  1513   00295C  0E01               	movlw	1
  1514   00295E  6E15               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  1515   002960  C096  F016         	movff	_sec_num_index,lcd_4bit_send_char_data_pos@column
  1516   002964  C07F  F017         	movff	_val,lcd_4bit_send_char_data_pos@data
  1517   002968  EC30  F025         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1518   00296C  EF60  F014         	goto	l7723
  1519   002970                     l7751:
  1520                           
  1521                           ;application.c: 66:         _delay((unsigned long)((250)*(8000000UL/4000.0)));
  1522   002970  0E03               	movlw	3
  1523   002972  0100               	movlb	0	; () banked
  1524   002974  6FFB               	movwf	(??_main+1)& (0+255),b
  1525   002976  0E8A               	movlw	138
  1526   002978  6FFA               	movwf	??_main& (0+255),b
  1527   00297A  0E55               	movlw	85
  1528   00297C                     u9107:
  1529   00297C  2EE8               	decfsz	wreg,f,c
  1530   00297E  D7FE               	bra	u9107
  1531   002980  2FFA               	decfsz	??_main& (0+255),f,b
  1532   002982  D7FC               	bra	u9107
  1533   002984  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1534   002986  D7FA               	bra	u9107
  1535   002988  D000               	nop2	
  1536   00298A                     
  1537                           ;application.c: 67:         convert_str_to_int(str_first_number, &first_num);
  1538   00298A  0E66               	movlw	low _str_first_number
  1539   00298C  6E1B               	movwf	convert_str_to_int@str^0,c
  1540   00298E  0E01               	movlw	high _str_first_number
  1541   002990  6E1C               	movwf	(convert_str_to_int@str+1)^0,c
  1542   002992  0EAF               	movlw	low _first_num
  1543   002994  6E1D               	movwf	convert_str_to_int@num^0,c
  1544   002996  EC01  F026         	call	_convert_str_to_int	;wreg free
  1545   00299A                     
  1546                           ;application.c: 68:         convert_str_to_int(str_sec_number, &sec_num);
  1547   00299A  0E5B               	movlw	low _str_sec_number
  1548   00299C  6E1B               	movwf	convert_str_to_int@str^0,c
  1549   00299E  0E01               	movlw	high _str_sec_number
  1550   0029A0  6E1C               	movwf	(convert_str_to_int@str+1)^0,c
  1551   0029A2  0EAB               	movlw	low _sec_num
  1552   0029A4  6E1D               	movwf	convert_str_to_int@num^0,c
  1553   0029A6  EC01  F026         	call	_convert_str_to_int	;wreg free
  1554                           
  1555                           ;application.c: 69:         switch (op) {
  1556   0029AA  EFA3  F015         	goto	l7791
  1557   0029AE                     l7757:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;application.c: 71:                 int_res = first_num + sec_num;
  1561   0029AE  51AB               	movf	_sec_num& (0+255),w,b
  1562   0029B0  25AF               	addwf	_first_num& (0+255),w,b
  1563   0029B2  6F8C               	movwf	_int_res& (0+255),b
  1564   0029B4  51AC               	movf	(_sec_num+1)& (0+255),w,b
  1565   0029B6  21B0               	addwfc	(_first_num+1)& (0+255),w,b
  1566   0029B8  6F8D               	movwf	(_int_res+1)& (0+255),b
  1567   0029BA  51AD               	movf	(_sec_num+2)& (0+255),w,b
  1568   0029BC  21B1               	addwfc	(_first_num+2)& (0+255),w,b
  1569   0029BE  6F8E               	movwf	(_int_res+2)& (0+255),b
  1570   0029C0  51AE               	movf	(_sec_num+3)& (0+255),w,b
  1571   0029C2  21B2               	addwfc	(_first_num+3)& (0+255),w,b
  1572   0029C4  6F8F               	movwf	(_int_res+3)& (0+255),b
  1573   0029C6                     l7759:
  1574                           
  1575                           ;application.c: 72:                 convert_sint32_to_string(int_res, str_int_res);
  1576   0029C6  C08C  F0F4         	movff	_int_res,convert_sint32_to_string@value
  1577   0029CA  C08D  F0F5         	movff	_int_res+1,convert_sint32_to_string@value+1
  1578   0029CE  C08E  F0F6         	movff	_int_res+2,convert_sint32_to_string@value+2
  1579   0029D2  C08F  F0F7         	movff	_int_res+3,convert_sint32_to_string@value+3
  1580   0029D6  0EA0               	movlw	low _str_int_res
  1581   0029D8  0100               	movlb	0	; () banked
  1582   0029DA  6FF8               	movwf	convert_sint32_to_string@str& (0+255),b
  1583   0029DC  EC19  F024         	call	_convert_sint32_to_string	;wreg free
  1584   0029E0                     
  1585                           ;application.c: 73:                 lcd_4bit_send_string_pos(&lcd_4, 1, 1, str_int_res);
  1586   0029E0  0ED9               	movlw	low _lcd_4
  1587   0029E2  6E15               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1588   0029E4  0E01               	movlw	1
  1589   0029E6  6E16               	movwf	lcd_4bit_send_string_pos@row^0,c
  1590   0029E8  0E01               	movlw	1
  1591   0029EA  6E17               	movwf	lcd_4bit_send_string_pos@column^0,c
  1592   0029EC  0EA0               	movlw	low _str_int_res
  1593   0029EE  6E18               	movwf	lcd_4bit_send_string_pos@str^0,c
  1594   0029F0  6A19               	clrf	(lcd_4bit_send_string_pos@str+1)^0,c
  1595   0029F2  ECA3  F025         	call	_lcd_4bit_send_string_pos	;wreg free
  1596                           
  1597                           ;application.c: 74:                 break;
  1598   0029F6  EFC0  F013         	goto	l7687
  1599   0029FA                     l7763:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;application.c: 76:                 int_res = first_num - sec_num;
  1603   0029FA  51AB               	movf	_sec_num& (0+255),w,b
  1604   0029FC  5DAF               	subwf	_first_num& (0+255),w,b
  1605   0029FE  6F8C               	movwf	_int_res& (0+255),b
  1606   002A00  51AC               	movf	(_sec_num+1)& (0+255),w,b
  1607   002A02  59B0               	subwfb	(_first_num+1)& (0+255),w,b
  1608   002A04  6F8D               	movwf	(_int_res+1)& (0+255),b
  1609   002A06  51AD               	movf	(_sec_num+2)& (0+255),w,b
  1610   002A08  59B1               	subwfb	(_first_num+2)& (0+255),w,b
  1611   002A0A  6F8E               	movwf	(_int_res+2)& (0+255),b
  1612   002A0C  51AE               	movf	(_sec_num+3)& (0+255),w,b
  1613   002A0E  59B2               	subwfb	(_first_num+3)& (0+255),w,b
  1614   002A10  6F8F               	movwf	(_int_res+3)& (0+255),b
  1615   002A12  EFE3  F014         	goto	l7759
  1616   002A16                     l7769:
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;application.c: 81:                 int_res = first_num * sec_num;
  1620   002A16  C0AF  F001         	movff	_first_num,___lmul@multiplier
  1621   002A1A  C0B0  F002         	movff	_first_num+1,___lmul@multiplier+1
  1622   002A1E  C0B1  F003         	movff	_first_num+2,___lmul@multiplier+2
  1623   002A22  C0B2  F004         	movff	_first_num+3,___lmul@multiplier+3
  1624   002A26  C0AB  F005         	movff	_sec_num,___lmul@multiplicand
  1625   002A2A  C0AC  F006         	movff	_sec_num+1,___lmul@multiplicand+1
  1626   002A2E  C0AD  F007         	movff	_sec_num+2,___lmul@multiplicand+2
  1627   002A32  C0AE  F008         	movff	_sec_num+3,___lmul@multiplicand+3
  1628   002A36  EC9B  F022         	call	___lmul	;wreg free
  1629   002A3A  C001  F08C         	movff	?___lmul,_int_res
  1630   002A3E  C002  F08D         	movff	?___lmul+1,_int_res+1
  1631   002A42  C003  F08E         	movff	?___lmul+2,_int_res+2
  1632   002A46  C004  F08F         	movff	?___lmul+3,_int_res+3
  1633   002A4A  EFE3  F014         	goto	l7759
  1634   002A4E                     l7775:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;application.c: 86:                 if (0 == sec_num) {
  1638   002A4E  51AB               	movf	_sec_num& (0+255),w,b
  1639   002A50  11AC               	iorwf	(_sec_num+1)& (0+255),w,b
  1640   002A52  11AD               	iorwf	(_sec_num+2)& (0+255),w,b
  1641   002A54  11AE               	iorwf	(_sec_num+3)& (0+255),w,b
  1642   002A56  A4D8               	btfss	status,2,c
  1643   002A58  EF30  F015         	goto	u9071
  1644   002A5C  EF32  F015         	goto	u9070
  1645   002A60                     u9071:
  1646   002A60  EF56  F015         	goto	l7785
  1647   002A64                     u9070:
  1648   002A64                     
  1649                           ; BSR set to: 0
  1650                           ;application.c: 87:                     lcd_4bit_send_command(&lcd_4, 0x01);
  1651   002A64  0ED9               	movlw	low _lcd_4
  1652   002A66  6E0E               	movwf	lcd_4bit_send_command@lcd^0,c
  1653   002A68  0E01               	movlw	1
  1654   002A6A  6E0F               	movwf	lcd_4bit_send_command@command^0,c
  1655   002A6C  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
  1656   002A70                     
  1657                           ;application.c: 88:                     lcd_4bit_send_string_pos(&lcd_4, 1, 1, "Division
      +                           by zero is ");
  1658   002A70  0ED9               	movlw	low _lcd_4
  1659   002A72  6E15               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1660   002A74  0E01               	movlw	1
  1661   002A76  6E16               	movwf	lcd_4bit_send_string_pos@row^0,c
  1662   002A78  0E01               	movlw	1
  1663   002A7A  6E17               	movwf	lcd_4bit_send_string_pos@column^0,c
  1664   002A7C  0E26               	movlw	low STR_9
  1665   002A7E  6E18               	movwf	lcd_4bit_send_string_pos@str^0,c
  1666   002A80  5018               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1667   002A82  A4D8               	btfss	status,2,c
  1668   002A84  0E10               	movlw	high __smallconst
  1669   002A86  6E19               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1670   002A88  ECA3  F025         	call	_lcd_4bit_send_string_pos	;wreg free
  1671   002A8C                     
  1672                           ;application.c: 89:                     lcd_4bit_send_string_pos(&lcd_4, 2, 1, "Not allo
      +                          wed ");
  1673   002A8C  0ED9               	movlw	low _lcd_4
  1674   002A8E  6E15               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1675   002A90  0E02               	movlw	2
  1676   002A92  6E16               	movwf	lcd_4bit_send_string_pos@row^0,c
  1677   002A94  0E01               	movlw	1
  1678   002A96  6E17               	movwf	lcd_4bit_send_string_pos@column^0,c
  1679   002A98  0E3B               	movlw	low STR_10
  1680   002A9A  6E18               	movwf	lcd_4bit_send_string_pos@str^0,c
  1681   002A9C  5018               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1682   002A9E  A4D8               	btfss	status,2,c
  1683   002AA0  0E10               	movlw	high __smallconst
  1684   002AA2  6E19               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1685   002AA4  ECA3  F025         	call	_lcd_4bit_send_string_pos	;wreg free
  1686                           
  1687                           ;application.c: 90:                     break;
  1688   002AA8  EFC0  F013         	goto	l7687
  1689   002AAC                     l7785:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;application.c: 92:                     res = (float32) ((float32) first_num / (float32)
      +                           sec_num);
  1693   002AAC  C0AF  F001         	movff	_first_num,___xxtofl@val
  1694   002AB0  C0B0  F002         	movff	_first_num+1,___xxtofl@val+1
  1695   002AB4  C0B1  F003         	movff	_first_num+2,___xxtofl@val+2
  1696   002AB8  C0B2  F004         	movff	_first_num+3,___xxtofl@val+3
  1697   002ABC  0E01               	movlw	1
  1698   002ABE  EC7F  F019         	call	___xxtofl
  1699   002AC2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1700   002AC6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1701   002ACA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1702   002ACE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1703   002AD2  C0AB  F001         	movff	_sec_num,___xxtofl@val
  1704   002AD6  C0AC  F002         	movff	_sec_num+1,___xxtofl@val+1
  1705   002ADA  C0AD  F003         	movff	_sec_num+2,___xxtofl@val+2
  1706   002ADE  C0AE  F004         	movff	_sec_num+3,___xxtofl@val+3
  1707   002AE2  0E01               	movlw	1
  1708   002AE4  EC7F  F019         	call	___xxtofl
  1709   002AE8  C001  F013         	movff	?___xxtofl,___fldiv@a
  1710   002AEC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1711   002AF0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1712   002AF4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1713   002AF8  ECB9  F015         	call	___fldiv	;wreg free
  1714   002AFC  C00F  F088         	movff	?___fldiv,_res
  1715   002B00  C010  F089         	movff	?___fldiv+1,_res+1
  1716   002B04  C011  F08A         	movff	?___fldiv+2,_res+2
  1717   002B08  C012  F08B         	movff	?___fldiv+3,_res+3
  1718   002B0C                     
  1719                           ;application.c: 93:                     convert_float32_to_string(res, str_res);
  1720   002B0C  C088  F0F4         	movff	_res,convert_float32_to_string@value
  1721   002B10  C089  F0F5         	movff	_res+1,convert_float32_to_string@value+1
  1722   002B14  C08A  F0F6         	movff	_res+2,convert_float32_to_string@value+2
  1723   002B18  C08B  F0F7         	movff	_res+3,convert_float32_to_string@value+3
  1724   002B1C  0E50               	movlw	low _str_res
  1725   002B1E  0100               	movlb	0	; () banked
  1726   002B20  6FF8               	movwf	convert_float32_to_string@str& (0+255),b
  1727   002B22  0E01               	movlw	high _str_res
  1728   002B24  6FF9               	movwf	(convert_float32_to_string@str+1)& (0+255),b
  1729   002B26  ECC2  F023         	call	_convert_float32_to_string	;wreg free
  1730   002B2A                     
  1731                           ;application.c: 94:                     lcd_4bit_send_string_pos(&lcd_4, 1, 1, str_res);
  1732   002B2A  0ED9               	movlw	low _lcd_4
  1733   002B2C  6E15               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1734   002B2E  0E01               	movlw	1
  1735   002B30  6E16               	movwf	lcd_4bit_send_string_pos@row^0,c
  1736   002B32  0E01               	movlw	1
  1737   002B34  6E17               	movwf	lcd_4bit_send_string_pos@column^0,c
  1738   002B36  0E50               	movlw	low _str_res
  1739   002B38  6E18               	movwf	lcd_4bit_send_string_pos@str^0,c
  1740   002B3A  0E01               	movlw	high _str_res
  1741   002B3C  6E19               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1742   002B3E  ECA3  F025         	call	_lcd_4bit_send_string_pos	;wreg free
  1743                           
  1744                           ;application.c: 95:                     break;
  1745   002B42  EFC0  F013         	goto	l7687
  1746   002B46                     l7791:
  1747   002B46  0100               	movlb	0	; () banked
  1748   002B48  5195               	movf	_op& (0+255),w,b
  1749                           
  1750                           ; Switch size 1, requested type "simple"
  1751                           ; Number of cases is 4, Range of values is 42 to 47
  1752                           ; switch strategies available:
  1753                           ; Name         Instructions Cycles
  1754                           ; simple_byte           13     7 (average)
  1755                           ;	Chosen strategy is simple_byte
  1756   002B4A  0A2A               	xorlw	42	; case 42
  1757   002B4C  B4D8               	btfsc	status,2,c
  1758   002B4E  EF0B  F015         	goto	l7769
  1759   002B52  0A01               	xorlw	1	; case 43
  1760   002B54  B4D8               	btfsc	status,2,c
  1761   002B56  EFD7  F014         	goto	l7757
  1762   002B5A  0A06               	xorlw	6	; case 45
  1763   002B5C  B4D8               	btfsc	status,2,c
  1764   002B5E  EFFD  F014         	goto	l7763
  1765   002B62  0A02               	xorlw	2	; case 47
  1766   002B64  B4D8               	btfsc	status,2,c
  1767   002B66  EF27  F015         	goto	l7775
  1768   002B6A  EFC0  F013         	goto	l521
  1769   002B6E                     l529:
  1770   002B6E  EF00  F000         	goto	start
  1771   002B72                     __end_of_main:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _lcd_4bit_send_string_pos *****************
  1775 ;; Defined at:
  1776 ;;		line 95 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  lcd             1   20[COMRAM] PTR const struct .
  1779 ;;		 -> lcd_4(6), 
  1780 ;;  row             1   21[COMRAM] unsigned char 
  1781 ;;  column          1   22[COMRAM] unsigned char 
  1782 ;;  str             2   23[COMRAM] PTR unsigned char 
  1783 ;;		 -> str_res(11), STR_10(13), STR_9(21), str_int_res(11), 
  1784 ;;		 -> STR_8(21), str_first_number(11), 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  ret             1    0        unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      unsigned char 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1796 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;Total ram usage:        5 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 4
  1803 ;; This function calls:
  1804 ;;		_lcd_4bit_send_string
  1805 ;;		_lcd_4bit_set_cursor
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text1
  1812   004B46                     __ptext1:
  1813                           	callstack 0
  1814   004B46                     _lcd_4bit_send_string_pos:
  1815                           	callstack 26
  1816   004B46                     
  1817                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 97:     if (((void*)0) == lcd) {
  1818   004B46  5015               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1819   004B48  A4D8               	btfss	status,2,c
  1820   004B4A  EFA9  F025         	goto	u5861
  1821   004B4E  EFAB  F025         	goto	u5860
  1822   004B52                     u5861:
  1823   004B52  EFAD  F025         	goto	l5495
  1824   004B56                     u5860:
  1825   004B56                     
  1826                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 99:     } else {
  1827   004B56  EFBD  F025         	goto	l98
  1828   004B5A                     l5495:
  1829   004B5A  C015  F011         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1830   004B5E  C016  F012         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1831   004B62  C017  F013         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1832   004B66  EC60  F022         	call	_lcd_4bit_set_cursor	;wreg free
  1833   004B6A  C015  F011         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_string@lcd
  1834   004B6E  C018  F012         	movff	lcd_4bit_send_string_pos@str,lcd_4bit_send_string@str
  1835   004B72  C019  F013         	movff	lcd_4bit_send_string_pos@str+1,lcd_4bit_send_string@str+1
  1836   004B76  EC1E  F022         	call	_lcd_4bit_send_string	;wreg free
  1837   004B7A                     l98:
  1838   004B7A  0012               	return		;funcret
  1839   004B7C                     __end_of_lcd_4bit_send_string_pos:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _lcd_4bit_send_string *****************
  1843 ;; Defined at:
  1844 ;;		line 83 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  lcd             1   16[COMRAM] PTR const struct .
  1847 ;;		 -> lcd_4(6), 
  1848 ;;  str             2   17[COMRAM] PTR unsigned char 
  1849 ;;		 -> str_res(11), STR_10(13), STR_9(21), str_int_res(11), 
  1850 ;;		 -> STR_8(21), str_first_number(11), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  ret             1   19[COMRAM] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      unsigned char 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1862 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;Total ram usage:        4 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 3
  1869 ;; This function calls:
  1870 ;;		_lcd_4bit_send_char_data
  1871 ;; This function is called by:
  1872 ;;		_lcd_4bit_send_string_pos
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text2
  1877   00443C                     __ptext2:
  1878                           	callstack 0
  1879   00443C                     _lcd_4bit_send_string:
  1880                           	callstack 26
  1881   00443C                     
  1882                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 84:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1883   00443C  0E01               	movlw	1
  1884   00443E  6E14               	movwf	lcd_4bit_send_string@ret^0,c
  1885                           
  1886                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 85:     if (((void*)0) == lcd) {
  1887   004440  5011               	movf	lcd_4bit_send_string@lcd^0,w,c
  1888   004442  A4D8               	btfss	status,2,c
  1889   004444  EF26  F022         	goto	u5711
  1890   004448  EF28  F022         	goto	u5710
  1891   00444C                     u5711:
  1892   00444C  EF45  F022         	goto	l5387
  1893   004450                     u5710:
  1894   004450                     
  1895                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 86:         ret = (Std_ReturnType)0x00;
  1896   004450  0E00               	movlw	0
  1897   004452  6E14               	movwf	lcd_4bit_send_string@ret^0,c
  1898                           
  1899                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 87:     } else {
  1900   004454  EF5E  F022         	goto	l5389
  1901   004458                     l5383:
  1902                           
  1903                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 89:             ret = lcd_4bit_send_char_data(lcd, *
      +                          str++);
  1904   004458  C011  F00E         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  1905   00445C  C012  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1906   004460  C013  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1907   004464  0E00               	movlw	low (__smallconst shr (0+16))
  1908   004466  6EF8               	movwf	tblptru,c
  1909   004468  0E0F               	movlw	(high __ramtop+-1)
  1910   00446A  64F7               	cpfsgt	tblptrh,c
  1911   00446C  D003               	bra	u5727
  1912   00446E  0008               	tblrd		*
  1913   004470  50F5               	movf	tablat,w,c
  1914   004472  D005               	bra	u5720
  1915   004474                     u5727:
  1916   004474  CFF6 FFE9          	movff	tblptrl,fsr0l
  1917   004478  CFF7 FFEA          	movff	tblptrh,fsr0h
  1918   00447C  50EF               	movf	indf0,w,c
  1919   00447E                     u5720:
  1920   00447E  6E0F               	movwf	lcd_4bit_send_char_data@data^0,c
  1921   004480  EC66  F023         	call	_lcd_4bit_send_char_data	;wreg free
  1922   004484  6E14               	movwf	lcd_4bit_send_string@ret^0,c
  1923   004486  4A12               	infsnz	lcd_4bit_send_string@str^0,f,c
  1924   004488  2A13               	incf	(lcd_4bit_send_string@str+1)^0,f,c
  1925   00448A                     l5387:
  1926                           
  1927                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 88:         while (*str) {
  1928   00448A  C012  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1929   00448E  C013  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1930   004492  0E00               	movlw	low (__smallconst shr (0+16))
  1931   004494  6EF8               	movwf	tblptru,c
  1932   004496  0E0F               	movlw	(high __ramtop+-1)
  1933   004498  64F7               	cpfsgt	tblptrh,c
  1934   00449A  D003               	bra	u5737
  1935   00449C  0008               	tblrd		*
  1936   00449E  50F5               	movf	tablat,w,c
  1937   0044A0  D005               	bra	u5730
  1938   0044A2                     u5737:
  1939   0044A2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1940   0044A6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1941   0044AA  50EF               	movf	indf0,w,c
  1942   0044AC                     u5730:
  1943   0044AC  0900               	iorlw	0
  1944   0044AE  A4D8               	btfss	status,2,c
  1945   0044B0  EF5C  F022         	goto	u5741
  1946   0044B4  EF5E  F022         	goto	u5740
  1947   0044B8                     u5741:
  1948   0044B8  EF2C  F022         	goto	l5383
  1949   0044BC                     u5740:
  1950   0044BC                     l5389:
  1951                           
  1952                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 92:     return ret;
  1953   0044BC  5014               	movf	lcd_4bit_send_string@ret^0,w,c
  1954   0044BE  0012               	return		;funcret
  1955   0044C0                     __end_of_lcd_4bit_send_string:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1959 ;; Defined at:
  1960 ;;		line 72 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  lcd             1   19[COMRAM] PTR const struct .
  1963 ;;		 -> lcd_4(6), 
  1964 ;;  row             1   20[COMRAM] unsigned char 
  1965 ;;  column          1   21[COMRAM] unsigned char 
  1966 ;;  data            1   22[COMRAM] unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  ret             1   23[COMRAM] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      unsigned char 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;Total ram usage:        5 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 4
  1985 ;; This function calls:
  1986 ;;		_lcd_4bit_send_char_data
  1987 ;;		_lcd_4bit_set_cursor
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;;		_lcd_4bit_send_custom_char
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text3
  1995   004A60                     __ptext3:
  1996                           	callstack 0
  1997   004A60                     _lcd_4bit_send_char_data_pos:
  1998                           	callstack 26
  1999   004A60                     
  2000                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 74:     if (((void*)0) == lcd) {
  2001   004A60  5014               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  2002   004A62  A4D8               	btfss	status,2,c
  2003   004A64  EF36  F025         	goto	u5851
  2004   004A68  EF38  F025         	goto	u5850
  2005   004A6C                     u5851:
  2006   004A6C  EF3C  F025         	goto	l5485
  2007   004A70                     u5850:
  2008   004A70                     
  2009                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 75:         ret = (Std_ReturnType)0x00;
  2010   004A70  0E00               	movlw	0
  2011   004A72  6E18               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  2012                           
  2013                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 76:     } else {
  2014   004A74  EF4C  F025         	goto	l5487
  2015   004A78                     l5485:
  2016                           
  2017                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 77:         ret = lcd_4bit_set_cursor(lcd, row, colu
      +                          mn);
  2018   004A78  C014  F011         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  2019   004A7C  C015  F012         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  2020   004A80  C016  F013         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
  2021   004A84  EC60  F022         	call	_lcd_4bit_set_cursor	;wreg free
  2022   004A88  6E18               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  2023                           
  2024                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 78:         ret = lcd_4bit_send_char_data(lcd, data)
      +                          ;
  2025   004A8A  C014  F00E         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  2026   004A8E  C017  F00F         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  2027   004A92  EC66  F023         	call	_lcd_4bit_send_char_data	;wreg free
  2028   004A96  6E18               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  2029   004A98                     l5487:
  2030                           
  2031                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 80:     return ret;
  2032   004A98  5018               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  2033   004A9A  0012               	return		;funcret
  2034   004A9C                     __end_of_lcd_4bit_send_char_data_pos:
  2035                           	callstack 0
  2036                           
  2037 ;; *************** function _lcd_4bit_set_cursor *****************
  2038 ;; Defined at:
  2039 ;;		line 349 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  lcd             1   16[COMRAM] PTR const struct .
  2042 ;;		 -> lcd_4(6), 
  2043 ;;  row             1   17[COMRAM] unsigned char 
  2044 ;;  column          1   18[COMRAM] unsigned char 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  ret             1    0        unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      unsigned char 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2056 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;Total ram usage:        3 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 3
  2063 ;; This function calls:
  2064 ;;		_lcd_4bit_send_command
  2065 ;; This function is called by:
  2066 ;;		_lcd_4bit_send_char_data_pos
  2067 ;;		_lcd_4bit_send_string_pos
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text4
  2072   0044C0                     __ptext4:
  2073                           	callstack 0
  2074   0044C0                     _lcd_4bit_set_cursor:
  2075                           	callstack 26
  2076   0044C0                     
  2077                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 351:     column--;
  2078   0044C0  0613               	decf	lcd_4bit_set_cursor@column^0,f,c
  2079                           
  2080                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 352:     switch (row) {
  2081   0044C2  EF87  F022         	goto	l5377
  2082   0044C6                     l5369:
  2083   0044C6  C011  F00E         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2084   0044CA  5013               	movf	lcd_4bit_set_cursor@column^0,w,c
  2085   0044CC  0F80               	addlw	128
  2086   0044CE  6E0F               	movwf	lcd_4bit_send_command@command^0,c
  2087   0044D0  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
  2088                           
  2089                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 355:             break;
  2090   0044D4  EF9A  F022         	goto	l217
  2091   0044D8                     l5371:
  2092   0044D8  C011  F00E         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2093   0044DC  5013               	movf	lcd_4bit_set_cursor@column^0,w,c
  2094   0044DE  0FC0               	addlw	192
  2095   0044E0  6E0F               	movwf	lcd_4bit_send_command@command^0,c
  2096   0044E2  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
  2097                           
  2098                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 358:             break;
  2099   0044E6  EF9A  F022         	goto	l217
  2100   0044EA                     l5373:
  2101   0044EA  C011  F00E         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2102   0044EE  5013               	movf	lcd_4bit_set_cursor@column^0,w,c
  2103   0044F0  0F94               	addlw	148
  2104   0044F2  6E0F               	movwf	lcd_4bit_send_command@command^0,c
  2105   0044F4  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
  2106                           
  2107                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 361:             break;
  2108   0044F8  EF9A  F022         	goto	l217
  2109   0044FC                     l5375:
  2110   0044FC  C011  F00E         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2111   004500  5013               	movf	lcd_4bit_set_cursor@column^0,w,c
  2112   004502  0FD4               	addlw	212
  2113   004504  6E0F               	movwf	lcd_4bit_send_command@command^0,c
  2114   004506  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
  2115                           
  2116                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 364:             break;
  2117   00450A  EF9A  F022         	goto	l217
  2118   00450E                     l5377:
  2119   00450E  5012               	movf	lcd_4bit_set_cursor@row^0,w,c
  2120                           
  2121                           ; Switch size 1, requested type "simple"
  2122                           ; Number of cases is 4, Range of values is 1 to 4
  2123                           ; switch strategies available:
  2124                           ; Name         Instructions Cycles
  2125                           ; simple_byte           13     7 (average)
  2126                           ;	Chosen strategy is simple_byte
  2127   004510  0A01               	xorlw	1	; case 1
  2128   004512  B4D8               	btfsc	status,2,c
  2129   004514  EF63  F022         	goto	l5369
  2130   004518  0A03               	xorlw	3	; case 2
  2131   00451A  B4D8               	btfsc	status,2,c
  2132   00451C  EF6C  F022         	goto	l5371
  2133   004520  0A01               	xorlw	1	; case 3
  2134   004522  B4D8               	btfsc	status,2,c
  2135   004524  EF75  F022         	goto	l5373
  2136   004528  0A07               	xorlw	7	; case 4
  2137   00452A  B4D8               	btfsc	status,2,c
  2138   00452C  EF7E  F022         	goto	l5375
  2139   004530  EF9A  F022         	goto	l217
  2140   004534                     l217:
  2141   004534  0012               	return		;funcret
  2142   004536                     __end_of_lcd_4bit_set_cursor:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _lcd_4bit_send_char_data *****************
  2146 ;; Defined at:
  2147 ;;		line 58 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  lcd             1   13[COMRAM] PTR const struct .
  2150 ;;		 -> lcd_4(6), 
  2151 ;;  data            1   14[COMRAM] unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  ret             1   15[COMRAM] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      unsigned char 
  2156 ;; Registers used:
  2157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;Total ram usage:        3 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 2
  2170 ;; This function calls:
  2171 ;;		_gpio_pin_write_logic
  2172 ;;		_lcd_4bit_send_enable_signal
  2173 ;;		_lcd_send_4bits
  2174 ;; This function is called by:
  2175 ;;		_lcd_4bit_send_char_data_pos
  2176 ;;		_lcd_4bit_send_string
  2177 ;;		_lcd_4bit_send_custom_char
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text5
  2182   0046CC                     __ptext5:
  2183                           	callstack 0
  2184   0046CC                     _lcd_4bit_send_char_data:
  2185                           	callstack 26
  2186   0046CC                     
  2187                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 60:     if (((void*)0) == lcd) {
  2188   0046CC  500E               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  2189   0046CE  A4D8               	btfss	status,2,c
  2190   0046D0  EF6C  F023         	goto	u5601
  2191   0046D4  EF6E  F023         	goto	u5600
  2192   0046D8                     u5601:
  2193   0046D8  EF72  F023         	goto	l5293
  2194   0046DC                     u5600:
  2195   0046DC                     
  2196                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 61:         ret = (Std_ReturnType)0x00;
  2197   0046DC  0E00               	movlw	0
  2198   0046DE  6E10               	movwf	lcd_4bit_send_char_data@ret^0,c
  2199                           
  2200                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 62:     } else {
  2201   0046E0  EF92  F023         	goto	l5295
  2202   0046E4                     l5293:
  2203                           
  2204                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 63:         ret = gpio_pin_write_logic(&(lcd->lcd_rs
      +                          ), GPIO_HIGH);
  2205   0046E4  C00E  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  2206   0046E8  0E01               	movlw	1
  2207   0046EA  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2208   0046EC  EC46  F01C         	call	_gpio_pin_write_logic	;wreg free
  2209   0046F0  6E10               	movwf	lcd_4bit_send_char_data@ret^0,c
  2210                           
  2211                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 64:         ret = lcd_send_4bits(lcd, data >> 4);
  2212   0046F2  C00E  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2213   0046F6  380F               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2214   0046F8  0B0F               	andlw	15
  2215   0046FA  6E0A               	movwf	lcd_send_4bits@_data_command^0,c
  2216   0046FC  EC8D  F024         	call	_lcd_send_4bits	;wreg free
  2217   004700  6E10               	movwf	lcd_4bit_send_char_data@ret^0,c
  2218                           
  2219                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 65:         ret = lcd_4bit_send_enable_signal(lcd);
  2220   004702  C00E  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2221   004706  EC13  F026         	call	_lcd_4bit_send_enable_signal	;wreg free
  2222   00470A  6E10               	movwf	lcd_4bit_send_char_data@ret^0,c
  2223                           
  2224                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 66:         ret = lcd_send_4bits(lcd, data);
  2225   00470C  C00E  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2226   004710  C00F  F00A         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  2227   004714  EC8D  F024         	call	_lcd_send_4bits	;wreg free
  2228   004718  6E10               	movwf	lcd_4bit_send_char_data@ret^0,c
  2229                           
  2230                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 67:         ret = lcd_4bit_send_enable_signal(lcd);
  2231   00471A  C00E  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2232   00471E  EC13  F026         	call	_lcd_4bit_send_enable_signal	;wreg free
  2233   004722  6E10               	movwf	lcd_4bit_send_char_data@ret^0,c
  2234   004724                     l5295:
  2235                           
  2236                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 69:     return ret;
  2237   004724  5010               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2238   004726  0012               	return		;funcret
  2239   004728                     __end_of_lcd_4bit_send_char_data:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _keypad_get_value *****************
  2243 ;; Defined at:
  2244 ;;		line 33 in file "ECU_layer/KeyPad/ecu_keypad.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  _keypad_obj     1    8[COMRAM] PTR const struct .
  2247 ;;		 -> keypad(8), 
  2248 ;;  value           1    9[COMRAM] PTR unsigned char 
  2249 ;;		 -> val(1), 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  columns_coun    1   14[COMRAM] unsigned char 
  2252 ;;  rows_counter    1   13[COMRAM] unsigned char 
  2253 ;;  counter         1   12[COMRAM] unsigned char 
  2254 ;;  logic           1   11[COMRAM] unsigned char 
  2255 ;;  ret             1    0        unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      unsigned char 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:        7 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 1
  2272 ;; This function calls:
  2273 ;;		_gpio_pin_read_logic
  2274 ;;		_gpio_pin_write_logic
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text6
  2281   003E9C                     __ptext6:
  2282                           	callstack 0
  2283   003E9C                     _keypad_get_value:
  2284                           	callstack 29
  2285   003E9C                     
  2286                           ;ECU_layer/KeyPad/ecu_keypad.c: 35:     uint8 rows_counter = 0, columns_counter = 0, cou
      +                          nter = 0, logic = 0;
  2287   003E9C  0E00               	movlw	0
  2288   003E9E  6E0E               	movwf	keypad_get_value@rows_counter^0,c
  2289   003EA0  0E00               	movlw	0
  2290   003EA2  6E0F               	movwf	keypad_get_value@columns_counter^0,c
  2291   003EA4  0E00               	movlw	0
  2292   003EA6  6E0D               	movwf	keypad_get_value@counter^0,c
  2293   003EA8  0E00               	movlw	0
  2294   003EAA  6E0C               	movwf	keypad_get_value@logic^0,c
  2295                           
  2296                           ;ECU_layer/KeyPad/ecu_keypad.c: 36:     if ((((void*)0) == _keypad_obj) || (((void*)0) =
      +                          = value)) {
  2297   003EAC  5009               	movf	keypad_get_value@_keypad_obj^0,w,c
  2298   003EAE  B4D8               	btfsc	status,2,c
  2299   003EB0  EF5C  F01F         	goto	u5951
  2300   003EB4  EF5E  F01F         	goto	u5950
  2301   003EB8                     u5951:
  2302   003EB8  EF66  F01F         	goto	l5581
  2303   003EBC                     u5950:
  2304   003EBC  500A               	movf	keypad_get_value@value^0,w,c
  2305   003EBE  A4D8               	btfss	status,2,c
  2306   003EC0  EF64  F01F         	goto	u5961
  2307   003EC4  EF66  F01F         	goto	u5960
  2308   003EC8                     u5961:
  2309   003EC8  EF68  F01F         	goto	l5583
  2310   003ECC                     u5960:
  2311   003ECC                     l5581:
  2312                           
  2313                           ;ECU_layer/KeyPad/ecu_keypad.c: 38:     } else {
  2314   003ECC  EFBF  F01F         	goto	l276
  2315   003ED0                     l5583:
  2316                           
  2317                           ;ECU_layer/KeyPad/ecu_keypad.c: 39:         for (rows_counter = 0; rows_counter < 4; row
      +                          s_counter++) {
  2318   003ED0  0E00               	movlw	0
  2319   003ED2  6E0E               	movwf	keypad_get_value@rows_counter^0,c
  2320   003ED4                     l5589:
  2321                           
  2322                           ;ECU_layer/KeyPad/ecu_keypad.c: 40:             for (counter = 0; counter < 4; counter++
      +                          ) {
  2323   003ED4  0E00               	movlw	0
  2324   003ED6  6E0D               	movwf	keypad_get_value@counter^0,c
  2325   003ED8                     l5595:
  2326   003ED8  5009               	movf	keypad_get_value@_keypad_obj^0,w,c
  2327   003EDA  240D               	addwf	keypad_get_value@counter^0,w,c
  2328   003EDC  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2329   003EDE  0E00               	movlw	0
  2330   003EE0  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2331   003EE2  EC46  F01C         	call	_gpio_pin_write_logic	;wreg free
  2332   003EE6                     
  2333                           ;ECU_layer/KeyPad/ecu_keypad.c: 42:             }
  2334   003EE6  2A0D               	incf	keypad_get_value@counter^0,f,c
  2335   003EE8  0E03               	movlw	3
  2336   003EEA  640D               	cpfsgt	keypad_get_value@counter^0,c
  2337   003EEC  EF7A  F01F         	goto	u5971
  2338   003EF0  EF7C  F01F         	goto	u5970
  2339   003EF4                     u5971:
  2340   003EF4  EF6C  F01F         	goto	l5595
  2341   003EF8                     u5970:
  2342   003EF8                     
  2343                           ;ECU_layer/KeyPad/ecu_keypad.c: 43:             gpio_pin_write_logic(&(_keypad_obj->keyp
      +                          ad_row_pins[rows_counter]), GPIO_HIGH);
  2344   003EF8  5009               	movf	keypad_get_value@_keypad_obj^0,w,c
  2345   003EFA  240E               	addwf	keypad_get_value@rows_counter^0,w,c
  2346   003EFC  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2347   003EFE  0E01               	movlw	1
  2348   003F00  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2349   003F02  EC46  F01C         	call	_gpio_pin_write_logic	;wreg free
  2350   003F06                     
  2351                           ;ECU_layer/KeyPad/ecu_keypad.c: 44:             _delay((unsigned long)((10)*(8000000UL/4
      +                          000.0)));
  2352   003F06  0E1A               	movlw	26
  2353   003F08  6E0B               	movwf	??_keypad_get_value^0,c
  2354   003F0A  0EF8               	movlw	248
  2355   003F0C                     u9117:
  2356   003F0C  2EE8               	decfsz	wreg,f,c
  2357   003F0E  D7FE               	bra	u9117
  2358   003F10  2E0B               	decfsz	??_keypad_get_value^0,f,c
  2359   003F12  D7FC               	bra	u9117
  2360   003F14  D000               	nop2	
  2361   003F16                     
  2362                           ;ECU_layer/KeyPad/ecu_keypad.c: 45:             for (columns_counter = 0; columns_counte
      +                          r < 4; columns_counter++) {
  2363   003F16  0E00               	movlw	0
  2364   003F18  6E0F               	movwf	keypad_get_value@columns_counter^0,c
  2365   003F1A                     l5611:
  2366   003F1A  5009               	movf	keypad_get_value@_keypad_obj^0,w,c
  2367   003F1C  240F               	addwf	keypad_get_value@columns_counter^0,w,c
  2368   003F1E  0F04               	addlw	4
  2369   003F20  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
  2370   003F22  0E0C               	movlw	low keypad_get_value@logic
  2371   003F24  6E02               	movwf	gpio_pin_read_logic@logic^0,c
  2372   003F26  EC36  F021         	call	_gpio_pin_read_logic	;wreg free
  2373   003F2A                     
  2374                           ;ECU_layer/KeyPad/ecu_keypad.c: 47:                 if (GPIO_HIGH == logic) {
  2375   003F2A  040C               	decf	keypad_get_value@logic^0,w,c
  2376   003F2C  A4D8               	btfss	status,2,c
  2377   003F2E  EF9B  F01F         	goto	u5981
  2378   003F32  EF9D  F01F         	goto	u5980
  2379   003F36                     u5981:
  2380   003F36  EFAD  F01F         	goto	l5617
  2381   003F3A                     u5980:
  2382   003F3A                     
  2383                           ;ECU_layer/KeyPad/ecu_keypad.c: 48:                     *value = btn_values[rows_counter
      +                          ][columns_counter];
  2384   003F3A  500E               	movf	keypad_get_value@rows_counter^0,w,c
  2385   003F3C  0D04               	mullw	4
  2386   003F3E  50F3               	movf	243,w,c
  2387   003F40  0F01               	addlw	low _btn_values
  2388   003F42  240F               	addwf	keypad_get_value@columns_counter^0,w,c
  2389   003F44  6E0B               	movwf	??_keypad_get_value^0,c
  2390   003F46  C00B  FFF6         	movff	??_keypad_get_value,tblptrl
  2391   003F4A                     	if	1	;There is more than 1 active tblptr byte
  2392   003F4A  0E10               	movlw	high __smallconst
  2393   003F4C  6EF7               	movwf	tblptrh,c
  2394   003F4E                     	endif
  2395   003F4E                     	if	0	;tblptru may be non-zero
  2396   003F4E                     	endif
  2397   003F4E                     	if	0	;tblptru may be non-zero
  2398   003F4E                     	endif
  2399   003F4E  500A               	movf	keypad_get_value@value^0,w,c
  2400   003F50  6ED9               	movwf	fsr2l,c
  2401   003F52  6ADA               	clrf	fsr2h,c
  2402   003F54  0008               	tblrd		*
  2403   003F56  CFF5 FFDF          	movff	tablat,indf2
  2404   003F5A                     l5617:
  2405                           
  2406                           ;ECU_layer/KeyPad/ecu_keypad.c: 50:             }
  2407   003F5A  2A0F               	incf	keypad_get_value@columns_counter^0,f,c
  2408   003F5C  0E03               	movlw	3
  2409   003F5E  640F               	cpfsgt	keypad_get_value@columns_counter^0,c
  2410   003F60  EFB4  F01F         	goto	u5991
  2411   003F64  EFB6  F01F         	goto	u5990
  2412   003F68                     u5991:
  2413   003F68  EF8D  F01F         	goto	l5611
  2414   003F6C                     u5990:
  2415   003F6C                     
  2416                           ;ECU_layer/KeyPad/ecu_keypad.c: 51:         }
  2417   003F6C  2A0E               	incf	keypad_get_value@rows_counter^0,f,c
  2418   003F6E  0E03               	movlw	3
  2419   003F70  640E               	cpfsgt	keypad_get_value@rows_counter^0,c
  2420   003F72  EFBD  F01F         	goto	u6001
  2421   003F76  EFBF  F01F         	goto	u6000
  2422   003F7A                     u6001:
  2423   003F7A  EF6A  F01F         	goto	l5589
  2424   003F7E                     u6000:
  2425   003F7E                     l276:
  2426   003F7E  0012               	return		;funcret
  2427   003F80                     __end_of_keypad_get_value:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function _gpio_pin_read_logic *****************
  2431 ;; Defined at:
  2432 ;;		line 107 in file "MCAL_layer/GPIO/hal_gpio.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2435 ;;		 -> keypad$keypad_columns_pins(4), keypad(8), 
  2436 ;;  logic           1    1[COMRAM] PTR enum E2948
  2437 ;;		 -> keypad_get_value@logic(1), button_read_state@Pin_Logic_Status(1), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  ret             1    6[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      unsigned char 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;Total ram usage:        7 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_keypad_get_value
  2459 ;;		_button_read_state
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text7
  2464   00426C                     __ptext7:
  2465                           	callstack 0
  2466   00426C                     _gpio_pin_read_logic:
  2467                           	callstack 29
  2468   00426C                     
  2469                           ;MCAL_layer/GPIO/hal_gpio.c: 108:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2470   00426C  0E01               	movlw	1
  2471   00426E  6E07               	movwf	gpio_pin_read_logic@ret^0,c
  2472                           
  2473                           ;MCAL_layer/GPIO/hal_gpio.c: 110:     if (((void*)0) == _pin_config || ((void*)0) == log
      +                          ic || _pin_config->pin > 8 - 1) {
  2474   004270  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2475   004272  B4D8               	btfsc	status,2,c
  2476   004274  EF3E  F021         	goto	u5671
  2477   004278  EF40  F021         	goto	u5670
  2478   00427C                     u5671:
  2479   00427C  EF58  F021         	goto	l5357
  2480   004280                     u5670:
  2481   004280  5002               	movf	gpio_pin_read_logic@logic^0,w,c
  2482   004282  B4D8               	btfsc	status,2,c
  2483   004284  EF46  F021         	goto	u5681
  2484   004288  EF48  F021         	goto	u5680
  2485   00428C                     u5681:
  2486   00428C  EF58  F021         	goto	l5357
  2487   004290                     u5680:
  2488   004290  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2489   004292  6ED9               	movwf	fsr2l,c
  2490   004294  6ADA               	clrf	fsr2h,c
  2491   004296  30DF               	rrcf	223,w,c
  2492   004298  32E8               	rrcf	wreg,f,c
  2493   00429A  32E8               	rrcf	wreg,f,c
  2494   00429C  0B07               	andlw	7
  2495   00429E  6E03               	movwf	??_gpio_pin_read_logic^0,c
  2496   0042A0  0E07               	movlw	7
  2497   0042A2  6403               	cpfsgt	??_gpio_pin_read_logic^0,c
  2498   0042A4  EF56  F021         	goto	u5691
  2499   0042A8  EF58  F021         	goto	u5690
  2500   0042AC                     u5691:
  2501   0042AC  EF5C  F021         	goto	l5359
  2502   0042B0                     u5690:
  2503   0042B0                     l5357:
  2504                           
  2505                           ;MCAL_layer/GPIO/hal_gpio.c: 111:         ret = (Std_ReturnType)0x00;
  2506   0042B0  0E00               	movlw	0
  2507   0042B2  6E07               	movwf	gpio_pin_read_logic@ret^0,c
  2508                           
  2509                           ;MCAL_layer/GPIO/hal_gpio.c: 112:     } else {
  2510   0042B4  EF86  F021         	goto	l5361
  2511   0042B8                     l5359:
  2512                           
  2513                           ;MCAL_layer/GPIO/hal_gpio.c: 113:         *logic = ((*(port_registers[_pin_config->port]
      +                          ) >> _pin_config->pin) & (uint8)1);
  2514   0042B8  5002               	movf	gpio_pin_read_logic@logic^0,w,c
  2515   0042BA  6ED9               	movwf	fsr2l,c
  2516   0042BC  6ADA               	clrf	fsr2h,c
  2517   0042BE  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2518   0042C0  6EE1               	movwf	fsr1l,c
  2519   0042C2  6AE2               	clrf	fsr1h,c
  2520   0042C4  30E7               	rrcf	231,w,c
  2521   0042C6  32E8               	rrcf	wreg,f,c
  2522   0042C8  32E8               	rrcf	wreg,f,c
  2523   0042CA  0B07               	andlw	7
  2524   0042CC  6E03               	movwf	??_gpio_pin_read_logic^0,c
  2525   0042CE  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2526   0042D0  6EE1               	movwf	fsr1l,c
  2527   0042D2  6AE2               	clrf	fsr1h,c
  2528   0042D4  50E7               	movf	231,w,c
  2529   0042D6  0B07               	andlw	7
  2530   0042D8  0D02               	mullw	2
  2531   0042DA  50F3               	movf	243,w,c
  2532   0042DC  0FB3               	addlw	low _port_registers
  2533   0042DE  6EE1               	movwf	fsr1l,c
  2534   0042E0  6AE2               	clrf	fsr1h,c
  2535   0042E2  CFE6 F004          	movff	postinc1,??_gpio_pin_read_logic+1
  2536   0042E6  CFE5 F005          	movff	postdec1,??_gpio_pin_read_logic+2
  2537   0042EA  C004  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
  2538   0042EE  C005  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
  2539   0042F2  50E7               	movf	indf1,w,c
  2540   0042F4  6E06               	movwf	(??_gpio_pin_read_logic+3)^0,c
  2541   0042F6  2A03               	incf	??_gpio_pin_read_logic^0,f,c
  2542   0042F8  EF80  F021         	goto	u5704
  2543   0042FC                     u5705:
  2544   0042FC  90D8               	bcf	status,0,c
  2545   0042FE  3206               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
  2546   004300                     u5704:
  2547   004300  2E03               	decfsz	??_gpio_pin_read_logic^0,f,c
  2548   004302  EF7E  F021         	goto	u5705
  2549   004306  5006               	movf	(??_gpio_pin_read_logic+3)^0,w,c
  2550   004308  0B01               	andlw	1
  2551   00430A  6EDF               	movwf	indf2,c
  2552   00430C                     l5361:
  2553                           
  2554                           ;MCAL_layer/GPIO/hal_gpio.c: 116:     return ret;
  2555   00430C  5007               	movf	gpio_pin_read_logic@ret^0,w,c
  2556   00430E  0012               	return		;funcret
  2557   004310                     __end_of_gpio_pin_read_logic:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _convert_str_to_int *****************
  2561 ;; Defined at:
  2562 ;;		line 107 in file "application.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  str             2   26[COMRAM] PTR const unsigned char 
  2565 ;;		 -> str_sec_number(11), str_first_number(11), 
  2566 ;;  num             1   28[COMRAM] PTR long 
  2567 ;;		 -> sec_num(4), first_num(4), 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  ret             1    0        unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      unsigned char 
  2572 ;; Registers used:
  2573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2579 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;Total ram usage:        3 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 2
  2586 ;; This function calls:
  2587 ;;		_atol
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text8
  2594   004C02                     __ptext8:
  2595                           	callstack 0
  2596   004C02                     _convert_str_to_int:
  2597                           	callstack 28
  2598   004C02                     
  2599                           ;application.c: 109:     *num = atol(str);
  2600   004C02  C01B  F00D         	movff	convert_str_to_int@str,atol@s
  2601   004C06  C01C  F00E         	movff	convert_str_to_int@str+1,atol@s+1
  2602   004C0A  EC59  F01A         	call	_atol	;wreg free
  2603   004C0E  501D               	movf	convert_str_to_int@num^0,w,c
  2604   004C10  6ED9               	movwf	fsr2l,c
  2605   004C12  6ADA               	clrf	fsr2h,c
  2606   004C14  C00D  FFDE         	movff	?_atol,postinc2
  2607   004C18  C00E  FFDE         	movff	?_atol+1,postinc2
  2608   004C1C  C00F  FFDE         	movff	?_atol+2,postinc2
  2609   004C20  C010  FFDE         	movff	?_atol+3,postinc2
  2610   004C24  0012               	return		;funcret
  2611   004C26                     __end_of_convert_str_to_int:
  2612                           	callstack 0
  2613                           
  2614 ;; *************** function _atol *****************
  2615 ;; Defined at:
  2616 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atol.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  s               2   12[COMRAM] PTR const unsigned char 
  2619 ;;		 -> str_sec_number(11), str_first_number(11), 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  n               4   22[COMRAM] long 
  2622 ;;  neg             1   21[COMRAM] _Bool 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  4   12[COMRAM] long 
  2625 ;; Registers used:
  2626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;Total ram usage:       14 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; Hardware stack levels required when called: 1
  2639 ;; This function calls:
  2640 ;;		___lmul
  2641 ;; This function is called by:
  2642 ;;		_convert_str_to_int
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text9
  2647   0034B2                     __ptext9:
  2648                           	callstack 0
  2649   0034B2                     _atol:
  2650                           	callstack 28
  2651   0034B2  0E00               	movlw	0
  2652   0034B4  6E17               	movwf	atol@n^0,c
  2653   0034B6  0E00               	movlw	0
  2654   0034B8  6E18               	movwf	(atol@n+1)^0,c
  2655   0034BA  0E00               	movlw	0
  2656   0034BC  6E19               	movwf	(atol@n+2)^0,c
  2657   0034BE  0E00               	movlw	0
  2658   0034C0  6E1A               	movwf	(atol@n+3)^0,c
  2659   0034C2  0E00               	movlw	0
  2660   0034C4  6E16               	movwf	atol@neg^0,c
  2661   0034C6  EF67  F01A         	goto	l7573
  2662   0034CA                     l7571:
  2663   0034CA  4A0D               	infsnz	atol@s^0,f,c
  2664   0034CC  2A0E               	incf	(atol@s+1)^0,f,c
  2665   0034CE                     l7573:
  2666   0034CE  C00D  FFD9         	movff	atol@s,fsr2l
  2667   0034D2  C00E  FFDA         	movff	atol@s+1,fsr2h
  2668   0034D6  0E20               	movlw	32
  2669   0034D8  18DE               	xorwf	postinc2,w,c
  2670   0034DA  B4D8               	btfsc	status,2,c
  2671   0034DC  EF72  F01A         	goto	u8831
  2672   0034E0  EF74  F01A         	goto	u8830
  2673   0034E4                     u8831:
  2674   0034E4  EF65  F01A         	goto	l7571
  2675   0034E8                     u8830:
  2676   0034E8  C00D  FFD9         	movff	atol@s,fsr2l
  2677   0034EC  C00E  FFDA         	movff	atol@s+1,fsr2h
  2678   0034F0  50DF               	movf	indf2,w,c
  2679   0034F2  6E11               	movwf	??_atol^0,c
  2680   0034F4  0EF7               	movlw	247
  2681   0034F6  2611               	addwf	??_atol^0,f,c
  2682   0034F8  0E04               	movlw	4
  2683   0034FA  6411               	cpfsgt	??_atol^0,c
  2684   0034FC  EF82  F01A         	goto	u8841
  2685   003500  EF84  F01A         	goto	u8840
  2686   003504                     u8841:
  2687   003504  EF65  F01A         	goto	l7571
  2688   003508                     u8840:
  2689   003508  C00D  FFD9         	movff	atol@s,fsr2l
  2690   00350C  C00E  FFDA         	movff	atol@s+1,fsr2h
  2691   003510  0E2D               	movlw	45
  2692   003512  18DE               	xorwf	postinc2,w,c
  2693   003514  A4D8               	btfss	status,2,c
  2694   003516  EF8F  F01A         	goto	u8851
  2695   00351A  EF91  F01A         	goto	u8850
  2696   00351E                     u8851:
  2697   00351E  EF97  F01A         	goto	l7583
  2698   003522                     u8850:
  2699   003522  0E01               	movlw	1
  2700   003524  6E16               	movwf	atol@neg^0,c
  2701   003526                     l7581:
  2702   003526  4A0D               	infsnz	atol@s^0,f,c
  2703   003528  2A0E               	incf	(atol@s+1)^0,f,c
  2704   00352A  EFD7  F01A         	goto	l7591
  2705   00352E                     l7583:
  2706   00352E  C00D  FFD9         	movff	atol@s,fsr2l
  2707   003532  C00E  FFDA         	movff	atol@s+1,fsr2h
  2708   003536  0E2B               	movlw	43
  2709   003538  18DE               	xorwf	postinc2,w,c
  2710   00353A  A4D8               	btfss	status,2,c
  2711   00353C  EFA2  F01A         	goto	u8861
  2712   003540  EFA4  F01A         	goto	u8860
  2713   003544                     u8861:
  2714   003544  EFD7  F01A         	goto	l7591
  2715   003548                     u8860:
  2716   003548  EF93  F01A         	goto	l7581
  2717   00354C                     l7587:
  2718   00354C  C00D  FFD9         	movff	atol@s,fsr2l
  2719   003550  C00E  FFDA         	movff	atol@s+1,fsr2h
  2720   003554  50DF               	movf	indf2,w,c
  2721   003556  6E11               	movwf	??_atol^0,c
  2722   003558  0ED0               	movlw	208
  2723   00355A  2411               	addwf	??_atol^0,w,c
  2724   00355C  6E12               	movwf	(??_atol+1)^0,c
  2725   00355E  6A13               	clrf	(??_atol+2)^0,c
  2726   003560  0EFF               	movlw	255
  2727   003562  2213               	addwfc	(??_atol+2)^0,f,c
  2728   003564  6A14               	clrf	(??_atol+3)^0,c
  2729   003566  BE13               	btfsc	(??_atol+2)^0,7,c
  2730   003568  0614               	decf	(??_atol+3)^0,f,c
  2731   00356A  5014               	movf	(??_atol+3)^0,w,c
  2732   00356C  6E15               	movwf	(??_atol+4)^0,c
  2733   00356E  C017  F001         	movff	atol@n,___lmul@multiplier
  2734   003572  C018  F002         	movff	atol@n+1,___lmul@multiplier+1
  2735   003576  C019  F003         	movff	atol@n+2,___lmul@multiplier+2
  2736   00357A  C01A  F004         	movff	atol@n+3,___lmul@multiplier+3
  2737   00357E  0E0A               	movlw	10
  2738   003580  6E05               	movwf	___lmul@multiplicand^0,c
  2739   003582  0E00               	movlw	0
  2740   003584  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2741   003586  0E00               	movlw	0
  2742   003588  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2743   00358A  0E00               	movlw	0
  2744   00358C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2745   00358E  EC9B  F022         	call	___lmul	;wreg free
  2746   003592  5012               	movf	(??_atol+1)^0,w,c
  2747   003594  5C01               	subwf	?___lmul^0,w,c
  2748   003596  6E17               	movwf	atol@n^0,c
  2749   003598  5013               	movf	(??_atol+2)^0,w,c
  2750   00359A  5802               	subwfb	(?___lmul+1)^0,w,c
  2751   00359C  6E18               	movwf	(atol@n+1)^0,c
  2752   00359E  5014               	movf	(??_atol+3)^0,w,c
  2753   0035A0  5803               	subwfb	(?___lmul+2)^0,w,c
  2754   0035A2  6E19               	movwf	(atol@n+2)^0,c
  2755   0035A4  5015               	movf	(??_atol+4)^0,w,c
  2756   0035A6  5804               	subwfb	(?___lmul+3)^0,w,c
  2757   0035A8  6E1A               	movwf	(atol@n+3)^0,c
  2758   0035AA  EF93  F01A         	goto	l7581
  2759   0035AE                     l7591:
  2760   0035AE  C00D  FFD9         	movff	atol@s,fsr2l
  2761   0035B2  C00E  FFDA         	movff	atol@s+1,fsr2h
  2762   0035B6  50DF               	movf	indf2,w,c
  2763   0035B8  6E11               	movwf	??_atol^0,c
  2764   0035BA  0ED0               	movlw	208
  2765   0035BC  2611               	addwf	??_atol^0,f,c
  2766   0035BE  0E09               	movlw	9
  2767   0035C0  6411               	cpfsgt	??_atol^0,c
  2768   0035C2  EFE5  F01A         	goto	u8871
  2769   0035C6  EFE7  F01A         	goto	u8870
  2770   0035CA                     u8871:
  2771   0035CA  EFA6  F01A         	goto	l7587
  2772   0035CE                     u8870:
  2773   0035CE  5016               	movf	atol@neg^0,w,c
  2774   0035D0  A4D8               	btfss	status,2,c
  2775   0035D2  EFED  F01A         	goto	u8881
  2776   0035D6  EFEF  F01A         	goto	u8880
  2777   0035DA                     u8881:
  2778   0035DA  EF0A  F01B         	goto	l1243
  2779   0035DE                     u8880:
  2780   0035DE  C017  F011         	movff	atol@n,??_atol
  2781   0035E2  C018  F012         	movff	atol@n+1,??_atol+1
  2782   0035E6  C019  F013         	movff	atol@n+2,??_atol+2
  2783   0035EA  C01A  F014         	movff	atol@n+3,??_atol+3
  2784   0035EE  1E11               	comf	??_atol^0,f,c
  2785   0035F0  1E12               	comf	(??_atol+1)^0,f,c
  2786   0035F2  1E13               	comf	(??_atol+2)^0,f,c
  2787   0035F4  1E14               	comf	(??_atol+3)^0,f,c
  2788   0035F6  2A11               	incf	??_atol^0,f,c
  2789   0035F8  0E00               	movlw	0
  2790   0035FA  2212               	addwfc	(??_atol+1)^0,f,c
  2791   0035FC  2213               	addwfc	(??_atol+2)^0,f,c
  2792   0035FE  2214               	addwfc	(??_atol+3)^0,f,c
  2793   003600  C011  F00D         	movff	??_atol,?_atol
  2794   003604  C012  F00E         	movff	??_atol+1,?_atol+1
  2795   003608  C013  F00F         	movff	??_atol+2,?_atol+2
  2796   00360C  C014  F010         	movff	??_atol+3,?_atol+3
  2797   003610  EF12  F01B         	goto	l1246
  2798   003614                     l1243:
  2799   003614  C017  F00D         	movff	atol@n,?_atol
  2800   003618  C018  F00E         	movff	atol@n+1,?_atol+1
  2801   00361C  C019  F00F         	movff	atol@n+2,?_atol+2
  2802   003620  C01A  F010         	movff	atol@n+3,?_atol+3
  2803   003624                     l1246:
  2804   003624  0012               	return		;funcret
  2805   003626                     __end_of_atol:
  2806                           	callstack 0
  2807                           
  2808 ;; *************** function ___lmul *****************
  2809 ;; Defined at:
  2810 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  multiplier      4    0[COMRAM] unsigned long 
  2813 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  product         4    8[COMRAM] unsigned long 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  4    0[COMRAM] unsigned long 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2825 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;Total ram usage:       12 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;;		_atol
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text10
  2840   004536                     __ptext10:
  2841                           	callstack 0
  2842   004536                     ___lmul:
  2843                           	callstack 28
  2844   004536  0E00               	movlw	0
  2845   004538  6E09               	movwf	___lmul@product^0,c
  2846   00453A  0E00               	movlw	0
  2847   00453C  6E0A               	movwf	(___lmul@product+1)^0,c
  2848   00453E  0E00               	movlw	0
  2849   004540  6E0B               	movwf	(___lmul@product+2)^0,c
  2850   004542  0E00               	movlw	0
  2851   004544  6E0C               	movwf	(___lmul@product+3)^0,c
  2852   004546                     l5333:
  2853   004546  A001               	btfss	___lmul@multiplier^0,0,c
  2854   004548  EFA8  F022         	goto	u5641
  2855   00454C  EFAA  F022         	goto	u5640
  2856   004550                     u5641:
  2857   004550  EFB2  F022         	goto	l5337
  2858   004554                     u5640:
  2859   004554  5005               	movf	___lmul@multiplicand^0,w,c
  2860   004556  2609               	addwf	___lmul@product^0,f,c
  2861   004558  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  2862   00455A  220A               	addwfc	(___lmul@product+1)^0,f,c
  2863   00455C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  2864   00455E  220B               	addwfc	(___lmul@product+2)^0,f,c
  2865   004560  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  2866   004562  220C               	addwfc	(___lmul@product+3)^0,f,c
  2867   004564                     l5337:
  2868   004564  90D8               	bcf	status,0,c
  2869   004566  3605               	rlcf	___lmul@multiplicand^0,f,c
  2870   004568  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2871   00456A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2872   00456C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2873   00456E  90D8               	bcf	status,0,c
  2874   004570  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  2875   004572  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  2876   004574  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  2877   004576  3201               	rrcf	___lmul@multiplier^0,f,c
  2878   004578  5001               	movf	___lmul@multiplier^0,w,c
  2879   00457A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  2880   00457C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  2881   00457E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  2882   004580  A4D8               	btfss	status,2,c
  2883   004582  EFC5  F022         	goto	u5651
  2884   004586  EFC7  F022         	goto	u5650
  2885   00458A                     u5651:
  2886   00458A  EFA3  F022         	goto	l5333
  2887   00458E                     u5650:
  2888   00458E  C009  F001         	movff	___lmul@product,?___lmul
  2889   004592  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2890   004596  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2891   00459A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2892   00459E  0012               	return		;funcret
  2893   0045A0                     __end_of___lmul:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _convert_sint32_to_string *****************
  2897 ;; Defined at:
  2898 ;;		line 285 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  value           4   21[BANK0 ] long 
  2901 ;;  str             1   25[BANK0 ] PTR unsigned char 
  2902 ;;		 -> str_int_res(11), 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  ret             1    0        unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      unsigned char 
  2907 ;; Registers used:
  2908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2914 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;Total ram usage:        5 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 8
  2921 ;; This function calls:
  2922 ;;		_memset
  2923 ;;		_sprintf
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text11
  2930   004832                     __ptext11:
  2931                           	callstack 0
  2932   004832                     _convert_sint32_to_string:
  2933                           	callstack 22
  2934   004832                     
  2935                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 287:     if (((void*)0) == str) {
  2936   004832  0100               	movlb	0	; () banked
  2937   004834  51F8               	movf	convert_sint32_to_string@str& (0+255),w,b
  2938   004836  A4D8               	btfss	status,2,c
  2939   004838  EF20  F024         	goto	u8891
  2940   00483C  EF22  F024         	goto	u8890
  2941   004840                     u8891:
  2942   004840  EF24  F024         	goto	l7601
  2943   004844                     u8890:
  2944   004844                     
  2945                           ; BSR set to: 0
  2946                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 289:     } else {
  2947   004844  EF41  F024         	goto	l181
  2948   004848                     l7601:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 290:         memset(str, '\0', 11);
  2952   004848  C0F8  F001         	movff	convert_sint32_to_string@str,memset@dest
  2953   00484C  6A02               	clrf	(memset@dest+1)^0,c
  2954   00484E  0E00               	movlw	0
  2955   004850  6E04               	movwf	(memset@c+1)^0,c
  2956   004852  0E00               	movlw	0
  2957   004854  6E03               	movwf	memset@c^0,c
  2958   004856  0E00               	movlw	0
  2959   004858  6E06               	movwf	(memset@n+1)^0,c
  2960   00485A  0E0B               	movlw	11
  2961   00485C  6E05               	movwf	memset@n^0,c
  2962   00485E  EC87  F025         	call	_memset	;wreg free
  2963   004862                     
  2964                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 291:         sprintf(str, "%ld", value);
  2965   004862  C0F8  F0E0         	movff	convert_sint32_to_string@str,sprintf@s
  2966   004866  0100               	movlb	0	; () banked
  2967   004868  6BE1               	clrf	(sprintf@s+1)& (0+255),b
  2968   00486A  0E56               	movlw	low STR_6
  2969   00486C  6FE2               	movwf	sprintf@fmt& (0+255),b
  2970   00486E  C0F4  F0E3         	movff	convert_sint32_to_string@value,?_sprintf+3
  2971   004872  C0F5  F0E4         	movff	convert_sint32_to_string@value+1,?_sprintf+4
  2972   004876  C0F6  F0E5         	movff	convert_sint32_to_string@value+2,?_sprintf+5
  2973   00487A  C0F7  F0E6         	movff	convert_sint32_to_string@value+3,?_sprintf+6
  2974   00487E  ECD1  F024         	call	_sprintf	;wreg free
  2975   004882                     l181:
  2976   004882  0012               	return		;funcret
  2977   004884                     __end_of_convert_sint32_to_string:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _convert_float32_to_string *****************
  2981 ;; Defined at:
  2982 ;;		line 296 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  value           4   21[BANK0 ] float 
  2985 ;;  str             2   25[BANK0 ] PTR unsigned char 
  2986 ;;		 -> str_res(11), 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  ret             1    0        unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      unsigned char 
  2991 ;; Registers used:
  2992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2998 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;Total ram usage:        6 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 8
  3005 ;; This function calls:
  3006 ;;		_memset
  3007 ;;		_sprintf
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text12
  3014   004784                     __ptext12:
  3015                           	callstack 0
  3016   004784                     _convert_float32_to_string:
  3017                           	callstack 22
  3018   004784                     
  3019                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 298:     if (((void*)0) == str) {
  3020   004784  0100               	movlb	0	; () banked
  3021   004786  51F8               	movf	convert_float32_to_string@str& (0+255),w,b
  3022   004788  11F9               	iorwf	(convert_float32_to_string@str+1)& (0+255),w,b
  3023   00478A  A4D8               	btfss	status,2,c
  3024   00478C  EFCA  F023         	goto	u8901
  3025   004790  EFCC  F023         	goto	u8900
  3026   004794                     u8901:
  3027   004794  EFCE  F023         	goto	l7613
  3028   004798                     u8900:
  3029   004798                     
  3030                           ; BSR set to: 0
  3031                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 300:     } else {
  3032   004798  EFED  F023         	goto	l186
  3033   00479C                     l7613:
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 301:         memset(str, '\0', 11);
  3037   00479C  C0F8  F001         	movff	convert_float32_to_string@str,memset@dest
  3038   0047A0  C0F9  F002         	movff	convert_float32_to_string@str+1,memset@dest+1
  3039   0047A4  0E00               	movlw	0
  3040   0047A6  6E04               	movwf	(memset@c+1)^0,c
  3041   0047A8  0E00               	movlw	0
  3042   0047AA  6E03               	movwf	memset@c^0,c
  3043   0047AC  0E00               	movlw	0
  3044   0047AE  6E06               	movwf	(memset@n+1)^0,c
  3045   0047B0  0E0B               	movlw	11
  3046   0047B2  6E05               	movwf	memset@n^0,c
  3047   0047B4  EC87  F025         	call	_memset	;wreg free
  3048   0047B8                     
  3049                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 302:         sprintf(str, "%0.2f", value);
  3050   0047B8  C0F8  F0E0         	movff	convert_float32_to_string@str,sprintf@s
  3051   0047BC  C0F9  F0E1         	movff	convert_float32_to_string@str+1,sprintf@s+1
  3052   0047C0  0E48               	movlw	low STR_7
  3053   0047C2  0100               	movlb	0	; () banked
  3054   0047C4  6FE2               	movwf	sprintf@fmt& (0+255),b
  3055   0047C6  C0F4  F0E3         	movff	convert_float32_to_string@value,?_sprintf+3
  3056   0047CA  C0F5  F0E4         	movff	convert_float32_to_string@value+1,?_sprintf+4
  3057   0047CE  C0F6  F0E5         	movff	convert_float32_to_string@value+2,?_sprintf+5
  3058   0047D2  C0F7  F0E6         	movff	convert_float32_to_string@value+3,?_sprintf+6
  3059   0047D6  ECD1  F024         	call	_sprintf	;wreg free
  3060   0047DA                     l186:
  3061   0047DA  0012               	return		;funcret
  3062   0047DC                     __end_of_convert_float32_to_string:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _sprintf *****************
  3066 ;; Defined at:
  3067 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  s               2    1[BANK0 ] PTR unsigned char 
  3070 ;;		 -> str_res(11), str_int_res(11), 
  3071 ;;  fmt             1    3[BANK0 ] PTR const unsigned char 
  3072 ;;		 -> STR_7(6), STR_6(4), STR_5(3), STR_4(3), 
  3073 ;;		 -> STR_3(4), STR_2(3), STR_1(3), 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  f              12    9[BANK0 ] struct _IO_FILE
  3076 ;;  ret             2    0        int 
  3077 ;;  ap              1    8[BANK0 ] PTR void [1]
  3078 ;;		 -> ?_sprintf(2), 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  2    1[BANK0 ] int 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3088 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;Total ram usage:       20 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 7
  3095 ;; This function calls:
  3096 ;;		_vfprintf
  3097 ;; This function is called by:
  3098 ;;		_convert_sint32_to_string
  3099 ;;		_convert_float32_to_string
  3100 ;;		_convert_uint8_to_string
  3101 ;;		_convert_uint16_to_string
  3102 ;;		_convert_uint32_to_string
  3103 ;;		_convert_sint8_to_string
  3104 ;;		_convert_sint16_to_string
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text13
  3109   0049A2                     __ptext13:
  3110                           	callstack 0
  3111   0049A2                     _sprintf:
  3112                           	callstack 22
  3113   0049A2  0EE3               	movlw	low (?_sprintf+3)
  3114   0049A4  0100               	movlb	0	; () banked
  3115   0049A6  6FE7               	movwf	sprintf@ap& (0+255),b
  3116   0049A8  C0E0  F0E8         	movff	sprintf@s,sprintf@f
  3117   0049AC  C0E1  F0E9         	movff	sprintf@s+1,sprintf@f+1
  3118   0049B0                     
  3119                           ; BSR set to: 0
  3120   0049B0  0E00               	movlw	0
  3121   0049B2  6FEC               	movwf	(sprintf@f+4)& (0+255),b
  3122   0049B4  0E00               	movlw	0
  3123   0049B6  6FEB               	movwf	(sprintf@f+3)& (0+255),b
  3124   0049B8                     
  3125                           ; BSR set to: 0
  3126   0049B8  0E00               	movlw	0
  3127   0049BA  6FF3               	movwf	(sprintf@f+11)& (0+255),b
  3128   0049BC  0E00               	movlw	0
  3129   0049BE  6FF2               	movwf	(sprintf@f+10)& (0+255),b
  3130   0049C0                     
  3131                           ; BSR set to: 0
  3132   0049C0  0EE8               	movlw	low sprintf@f
  3133   0049C2  6E7C               	movwf	vfprintf@fp^0,c
  3134   0049C4  C0E2  F07D         	movff	sprintf@fmt,vfprintf@fmt
  3135   0049C8  0EE7               	movlw	low sprintf@ap
  3136   0049CA  6E7E               	movwf	vfprintf@ap^0,c
  3137   0049CC  EC11  F025         	call	_vfprintf	;wreg free
  3138   0049D0  0100               	movlb	0	; () banked
  3139   0049D2  51EB               	movf	(sprintf@f+3)& (0+255),w,b
  3140   0049D4  25E0               	addwf	sprintf@s& (0+255),w,b
  3141   0049D6  6ED9               	movwf	fsr2l,c
  3142   0049D8  51EC               	movf	(sprintf@f+4)& (0+255),w,b
  3143   0049DA  21E1               	addwfc	(sprintf@s+1)& (0+255),w,b
  3144   0049DC  6EDA               	movwf	fsr2h,c
  3145   0049DE  6ADF               	clrf	indf2,c
  3146   0049E0                     
  3147                           ; BSR set to: 0
  3148   0049E0  0012               	return		;funcret
  3149   0049E2                     __end_of_sprintf:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _vfprintf *****************
  3153 ;; Defined at:
  3154 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  fp              1  123[COMRAM] PTR struct _IO_FILE
  3157 ;;		 -> sprintf@f(12), 
  3158 ;;  fmt             1  124[COMRAM] PTR const unsigned char 
  3159 ;;		 -> STR_7(6), STR_6(4), STR_5(3), STR_4(3), 
  3160 ;;		 -> STR_3(4), STR_2(3), STR_1(3), 
  3161 ;;  ap              1  125[COMRAM] PTR PTR void 
  3162 ;;		 -> sprintf@ap(1), 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  cfmt            1    0[BANK0 ] PTR unsigned char 
  3165 ;;		 -> STR_7(6), STR_6(4), STR_5(3), STR_4(3), 
  3166 ;;		 -> STR_3(4), STR_2(3), STR_1(3), 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  2  123[COMRAM] int 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3176 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;Total ram usage:        4 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 6
  3183 ;; This function calls:
  3184 ;;		_vfpfcnvrt
  3185 ;; This function is called by:
  3186 ;;		_sprintf
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text14
  3191   004A22                     __ptext14:
  3192                           	callstack 0
  3193   004A22                     _vfprintf:
  3194                           	callstack 22
  3195   004A22                     
  3196                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3197   004A22  C07D  F0DF         	movff	vfprintf@fmt,vfprintf@cfmt
  3198                           
  3199                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3200   004A26  EF1D  F025         	goto	l7543
  3201   004A2A                     l7541:
  3202                           
  3203                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3204   004A2A  C07C  F070         	movff	vfprintf@fp,vfpfcnvrt@fp
  3205   004A2E  0EDF               	movlw	low vfprintf@cfmt
  3206   004A30  6E71               	movwf	vfpfcnvrt@fmt^0,c
  3207   004A32  C07E  F072         	movff	vfprintf@ap,vfpfcnvrt@ap
  3208   004A36  ECBE  F011         	call	_vfpfcnvrt	;wreg free
  3209   004A3A                     l7543:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3212   004A3A  C0DF  FFF6         	movff	vfprintf@cfmt,tblptrl
  3213   004A3E                     	if	1	;There is more than 1 active tblptr byte
  3214   004A3E  0E10               	movlw	high __smallconst
  3215   004A40  6EF7               	movwf	tblptrh,c
  3216   004A42                     	endif
  3217   004A42                     	if	0	;tblptru may be non-zero
  3218   004A42                     	endif
  3219   004A42                     	if	0	;tblptru may be non-zero
  3220   004A42                     	endif
  3221   004A42  0008               	tblrd		*
  3222   004A44  50F5               	movf	tablat,w,c
  3223   004A46  0900               	iorlw	0
  3224   004A48  A4D8               	btfss	status,2,c
  3225   004A4A  EF29  F025         	goto	u8811
  3226   004A4E  EF2B  F025         	goto	u8810
  3227   004A52                     u8811:
  3228   004A52  EF15  F025         	goto	l7541
  3229   004A56                     u8810:
  3230   004A56                     
  3231                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3232   004A56  0E00               	movlw	0
  3233   004A58  6E7D               	movwf	(?_vfprintf+1)^0,c
  3234   004A5A  0E00               	movlw	0
  3235   004A5C  6E7C               	movwf	?_vfprintf^0,c
  3236   004A5E  0012               	return		;funcret
  3237   004A60                     __end_of_vfprintf:
  3238                           	callstack 0
  3239                           
  3240 ;; *************** function _vfpfcnvrt *****************
  3241 ;; Defined at:
  3242 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  fp              1  111[COMRAM] PTR struct _IO_FILE
  3245 ;;		 -> sprintf@f(12), 
  3246 ;;  fmt             1  112[COMRAM] PTR PTR unsigned char 
  3247 ;;		 -> vfprintf@cfmt(1), 
  3248 ;;  ap              1  113[COMRAM] PTR PTR void 
  3249 ;;		 -> sprintf@ap(1), 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  convarg         4  117[COMRAM] struct .
  3252 ;;  cp              1  122[COMRAM] PTR unsigned char 
  3253 ;;		 -> STR_7(6), STR_6(4), STR_5(3), STR_4(3), 
  3254 ;;		 -> STR_3(4), STR_2(3), STR_1(3), 
  3255 ;;  c               1  121[COMRAM] unsigned char 
  3256 ;;  done            1  116[COMRAM] _Bool 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3266 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;Total ram usage:       12 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 5
  3273 ;; This function calls:
  3274 ;;		_dtoa
  3275 ;;		_efgtoa
  3276 ;;		_fputc
  3277 ;;		_read_prec_or_width
  3278 ;;		_utoa
  3279 ;; This function is called by:
  3280 ;;		_vfprintf
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text15
  3285   00237C                     __ptext15:
  3286                           	callstack 0
  3287   00237C                     _vfpfcnvrt:
  3288                           	callstack 22
  3289   00237C                     
  3290                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3291   00237C  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3292   00237E  6ED9               	movwf	fsr2l,c
  3293   002380  6ADA               	clrf	fsr2h,c
  3294   002382  CFDF FFF6          	movff	indf2,tblptrl
  3295   002386                     	if	1	;There is more than 1 active tblptr byte
  3296   002386  0E10               	movlw	high __smallconst
  3297   002388  6EF7               	movwf	tblptrh,c
  3298   00238A                     	endif
  3299   00238A                     	if	0	;tblptru may be non-zero
  3300   00238A                     	endif
  3301   00238A                     	if	0	;tblptru may be non-zero
  3302   00238A                     	endif
  3303   00238A  0008               	tblrd		*
  3304   00238C  50F5               	movf	tablat,w,c
  3305   00238E  0A25               	xorlw	37
  3306   002390  A4D8               	btfss	status,2,c
  3307   002392  EFCD  F011         	goto	u8741
  3308   002396  EFCF  F011         	goto	u8740
  3309   00239A                     u8741:
  3310   00239A  EFAA  F013         	goto	l7533
  3311   00239E                     u8740:
  3312   00239E                     
  3313                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3314   00239E  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3315   0023A0  6ED9               	movwf	fsr2l,c
  3316   0023A2  6ADA               	clrf	fsr2h,c
  3317   0023A4  2ADF               	incf	indf2,f,c
  3318   0023A6                     
  3319                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3320   0023A6  0E00               	movlw	0
  3321   0023A8  0100               	movlb	0	; () banked
  3322   0023AA  6F91               	movwf	(_width+1)& (0+255),b
  3323   0023AC  0E00               	movlw	0
  3324   0023AE  6F90               	movwf	_width& (0+255),b
  3325   0023B0  C090  F094         	movff	_width,_flags
  3326   0023B4                     
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3329   0023B4  6992               	setf	_prec& (0+255),b
  3330   0023B6  6993               	setf	(_prec+1)& (0+255),b
  3331   0023B8                     
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  3334   0023B8  0E00               	movlw	0
  3335   0023BA  6E75               	movwf	vfpfcnvrt@done^0,c
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3338   0023BC  EFFB  F011         	goto	l7435
  3339   0023C0                     l7425:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  3342   0023C0  0100               	movlb	0	; () banked
  3343   0023C2  8394               	bsf	_flags& (0+255),1,b
  3344   0023C4                     
  3345                           ; BSR set to: 0
  3346                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  3347   0023C4  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3348   0023C6  6ED9               	movwf	fsr2l,c
  3349   0023C8  6ADA               	clrf	fsr2h,c
  3350   0023CA  2ADF               	incf	indf2,f,c
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  3353   0023CC  EFFB  F011         	goto	l7435
  3354   0023D0                     l7429:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  3357   0023D0  0E01               	movlw	1
  3358   0023D2  6E75               	movwf	vfpfcnvrt@done^0,c
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  3361   0023D4  EFFB  F011         	goto	l7435
  3362   0023D8                     l7433:
  3363   0023D8  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3364   0023DA  6ED9               	movwf	fsr2l,c
  3365   0023DC  6ADA               	clrf	fsr2h,c
  3366   0023DE  CFDF FFF6          	movff	indf2,tblptrl
  3367   0023E2                     	if	1	;There is more than 1 active tblptr byte
  3368   0023E2  0E10               	movlw	high __smallconst
  3369   0023E4  6EF7               	movwf	tblptrh,c
  3370   0023E6                     	endif
  3371   0023E6                     	if	0	;tblptru may be non-zero
  3372   0023E6                     	endif
  3373   0023E6                     	if	0	;tblptru may be non-zero
  3374   0023E6                     	endif
  3375   0023E6  0008               	tblrd		*
  3376   0023E8  50F5               	movf	tablat,w,c
  3377                           
  3378                           ; Switch size 1, requested type "simple"
  3379                           ; Number of cases is 1, Range of values is 48 to 48
  3380                           ; switch strategies available:
  3381                           ; Name         Instructions Cycles
  3382                           ; simple_byte            4     3 (average)
  3383                           ;	Chosen strategy is simple_byte
  3384   0023EA  0A30               	xorlw	48	; case 48
  3385   0023EC  B4D8               	btfsc	status,2,c
  3386   0023EE  EFE0  F011         	goto	l7425
  3387   0023F2  EFE8  F011         	goto	l7429
  3388   0023F6                     l7435:
  3389                           
  3390                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3391   0023F6  5075               	movf	vfpfcnvrt@done^0,w,c
  3392   0023F8  B4D8               	btfsc	status,2,c
  3393   0023FA  EF01  F012         	goto	u8751
  3394   0023FE  EF03  F012         	goto	u8750
  3395   002402                     u8751:
  3396   002402  EFEC  F011         	goto	l7433
  3397   002406                     u8750:
  3398   002406                     
  3399                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3400   002406  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3401   002408  6ED9               	movwf	fsr2l,c
  3402   00240A  6ADA               	clrf	fsr2h,c
  3403   00240C  CFDF FFF6          	movff	indf2,tblptrl
  3404   002410                     	if	1	;There is more than 1 active tblptr byte
  3405   002410  0E10               	movlw	high __smallconst
  3406   002412  6EF7               	movwf	tblptrh,c
  3407   002414                     	endif
  3408   002414                     	if	0	;tblptru may be non-zero
  3409   002414                     	endif
  3410   002414                     	if	0	;tblptru may be non-zero
  3411   002414                     	endif
  3412   002414  0008               	tblrd		*
  3413   002416  50F5               	movf	tablat,w,c
  3414   002418  0A2E               	xorlw	46
  3415   00241A  A4D8               	btfss	status,2,c
  3416   00241C  EF12  F012         	goto	u8761
  3417   002420  EF14  F012         	goto	u8760
  3418   002424                     u8761:
  3419   002424  EF22  F012         	goto	l7443
  3420   002428                     u8760:
  3421   002428                     
  3422                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3423   002428  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3424   00242A  6ED9               	movwf	fsr2l,c
  3425   00242C  6ADA               	clrf	fsr2h,c
  3426   00242E  2ADF               	incf	indf2,f,c
  3427   002430                     
  3428                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3429   002430  C071  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3430   002434  C072  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3431   002438  ECE3  F020         	call	_read_prec_or_width	;wreg free
  3432   00243C  C007  F092         	movff	?_read_prec_or_width,_prec
  3433   002440  C008  F093         	movff	?_read_prec_or_width+1,_prec+1
  3434   002444                     l7443:
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3437   002444  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3438   002446  6ED9               	movwf	fsr2l,c
  3439   002448  6ADA               	clrf	fsr2h,c
  3440   00244A  50DF               	movf	indf2,w,c
  3441   00244C  6E7B               	movwf	vfpfcnvrt@cp^0,c
  3442   00244E                     
  3443                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  3444   00244E  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3445   002452                     	if	1	;There is more than 1 active tblptr byte
  3446   002452  0E10               	movlw	high __smallconst
  3447   002454  6EF7               	movwf	tblptrh,c
  3448   002456                     	endif
  3449   002456                     	if	0	;tblptru may be non-zero
  3450   002456                     	endif
  3451   002456                     	if	0	;tblptru may be non-zero
  3452   002456                     	endif
  3453   002456  0008               	tblrd		*
  3454   002458  CFF5 F07A          	movff	tablat,vfpfcnvrt@c
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  3457   00245C  EF3B  F012         	goto	l7455
  3458   002460                     l7447:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  3461   002460  2A7B               	incf	vfpfcnvrt@cp^0,f,c
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
  3464   002462  EF4E  F012         	goto	l7457
  3465   002466                     l7449:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  3468   002466  0E69               	movlw	105
  3469   002468  6E7A               	movwf	vfpfcnvrt@c^0,c
  3470                           
  3471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
  3472   00246A  EF4E  F012         	goto	l7457
  3473   00246E                     l7451:
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  3476   00246E  0E00               	movlw	0
  3477   002470  6E7A               	movwf	vfpfcnvrt@c^0,c
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
  3480   002472  EF4E  F012         	goto	l7457
  3481   002476                     l7455:
  3482   002476  507A               	movf	vfpfcnvrt@c^0,w,c
  3483                           
  3484                           ; Switch size 1, requested type "simple"
  3485                           ; Number of cases is 4, Range of values is 100 to 117
  3486                           ; switch strategies available:
  3487                           ; Name         Instructions Cycles
  3488                           ; simple_byte           13     7 (average)
  3489                           ;	Chosen strategy is simple_byte
  3490   002478  0A64               	xorlw	100	; case 100
  3491   00247A  B4D8               	btfsc	status,2,c
  3492   00247C  EF33  F012         	goto	l7449
  3493   002480  0A0D               	xorlw	13	; case 105
  3494   002482  B4D8               	btfsc	status,2,c
  3495   002484  EF33  F012         	goto	l7449
  3496   002488  0A05               	xorlw	5	; case 108
  3497   00248A  B4D8               	btfsc	status,2,c
  3498   00248C  EF30  F012         	goto	l7447
  3499   002490  0A19               	xorlw	25	; case 117
  3500   002492  B4D8               	btfsc	status,2,c
  3501   002494  EF33  F012         	goto	l7449
  3502   002498  EF37  F012         	goto	l7451
  3503   00249C                     l7457:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3506   00249C  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3507   0024A0                     	if	1	;There is more than 1 active tblptr byte
  3508   0024A0  0E10               	movlw	high __smallconst
  3509   0024A2  6EF7               	movwf	tblptrh,c
  3510   0024A4                     	endif
  3511   0024A4                     	if	0	;tblptru may be non-zero
  3512   0024A4                     	endif
  3513   0024A4                     	if	0	;tblptru may be non-zero
  3514   0024A4                     	endif
  3515   0024A4  0008               	tblrd		*
  3516   0024A6  50F5               	movf	tablat,w,c
  3517   0024A8  0A64               	xorlw	100
  3518   0024AA  B4D8               	btfsc	status,2,c
  3519   0024AC  EF5A  F012         	goto	u8771
  3520   0024B0  EF5C  F012         	goto	u8770
  3521   0024B4                     u8771:
  3522   0024B4  EF91  F012         	goto	l7467
  3523   0024B8                     u8770:
  3524   0024B8  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3525   0024BC                     	if	1	;There is more than 1 active tblptr byte
  3526   0024BC  0E10               	movlw	high __smallconst
  3527   0024BE  6EF7               	movwf	tblptrh,c
  3528   0024C0                     	endif
  3529   0024C0                     	if	0	;tblptru may be non-zero
  3530   0024C0                     	endif
  3531   0024C0                     	if	0	;tblptru may be non-zero
  3532   0024C0                     	endif
  3533   0024C0  0008               	tblrd		*
  3534   0024C2  50F5               	movf	tablat,w,c
  3535   0024C4  0A69               	xorlw	105
  3536   0024C6  A4D8               	btfss	status,2,c
  3537   0024C8  EF68  F012         	goto	u8781
  3538   0024CC  EF6A  F012         	goto	u8780
  3539   0024D0                     u8781:
  3540   0024D0  EFAF  F012         	goto	l7475
  3541   0024D4                     u8780:
  3542   0024D4  EF91  F012         	goto	l7467
  3543   0024D8                     l7461:
  3544                           
  3545                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3546   0024D8  5072               	movf	vfpfcnvrt@ap^0,w,c
  3547   0024DA  6ED9               	movwf	fsr2l,c
  3548   0024DC  6ADA               	clrf	fsr2h,c
  3549   0024DE  50DF               	movf	indf2,w,c
  3550   0024E0  2ADF               	incf	indf2,f,c
  3551   0024E2  2ADF               	incf	indf2,f,c
  3552   0024E4  6ED9               	movwf	fsr2l,c
  3553   0024E6  6ADA               	clrf	fsr2h,c
  3554   0024E8  CFDE F076          	movff	postinc2,vfpfcnvrt@convarg
  3555   0024EC  CFDD F077          	movff	postdec2,vfpfcnvrt@convarg+1
  3556   0024F0  0E00               	movlw	0
  3557   0024F2  BE77               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3558   0024F4  0EFF               	movlw	-1
  3559   0024F6  6E78               	movwf	(vfpfcnvrt@convarg+2)^0,c
  3560   0024F8  6E79               	movwf	(vfpfcnvrt@convarg+3)^0,c
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1366:      break;
  3563   0024FA  EF9C  F012         	goto	l7469
  3564   0024FE                     l7463:
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  3567   0024FE  5072               	movf	vfpfcnvrt@ap^0,w,c
  3568   002500  6ED9               	movwf	fsr2l,c
  3569   002502  6ADA               	clrf	fsr2h,c
  3570   002504  0E04               	movlw	4
  3571   002506  26DF               	addwf	indf2,f,c
  3572   002508  5CDF               	subwf	indf2,w,c
  3573   00250A  6ED9               	movwf	fsr2l,c
  3574   00250C  6ADA               	clrf	fsr2h,c
  3575   00250E  CFDE F076          	movff	postinc2,vfpfcnvrt@convarg
  3576   002512  CFDE F077          	movff	postinc2,vfpfcnvrt@convarg+1
  3577   002516  CFDE F078          	movff	postinc2,vfpfcnvrt@convarg+2
  3578   00251A  CFDE F079          	movff	postinc2,vfpfcnvrt@convarg+3
  3579                           
  3580                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1380:      break;
  3581   00251E  EF9C  F012         	goto	l7469
  3582   002522                     l7467:
  3583   002522  507A               	movf	vfpfcnvrt@c^0,w,c
  3584                           
  3585                           ; Switch size 1, requested type "simple"
  3586                           ; Number of cases is 2, Range of values is 105 to 108
  3587                           ; switch strategies available:
  3588                           ; Name         Instructions Cycles
  3589                           ; simple_byte            7     4 (average)
  3590                           ;	Chosen strategy is simple_byte
  3591   002524  0A69               	xorlw	105	; case 105
  3592   002526  B4D8               	btfsc	status,2,c
  3593   002528  EF6C  F012         	goto	l7461
  3594   00252C  0A05               	xorlw	5	; case 108
  3595   00252E  B4D8               	btfsc	status,2,c
  3596   002530  EF7F  F012         	goto	l7463
  3597   002534  EF9C  F012         	goto	l7469
  3598   002538                     l7469:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3601   002538  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3602   00253A  6ED9               	movwf	fsr2l,c
  3603   00253C  6ADA               	clrf	fsr2h,c
  3604   00253E  287B               	incf	vfpfcnvrt@cp^0,w,c
  3605   002540  6EDF               	movwf	indf2,c
  3606   002542                     
  3607                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3608   002542  C070  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  3609   002546  C076  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  3610   00254A  C077  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3611   00254E  C078  F01A         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3612   002552  C079  F01B         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3613   002556  EC8F  F018         	call	_dtoa	;wreg free
  3614   00255A  EFBB  F013         	goto	l1420
  3615   00255E                     l7475:
  3616   00255E  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3617   002562                     	if	1	;There is more than 1 active tblptr byte
  3618   002562  0E10               	movlw	high __smallconst
  3619   002564  6EF7               	movwf	tblptrh,c
  3620   002566                     	endif
  3621   002566                     	if	0	;tblptru may be non-zero
  3622   002566                     	endif
  3623   002566                     	if	0	;tblptru may be non-zero
  3624   002566                     	endif
  3625   002566  0008               	tblrd		*
  3626   002568  50F5               	movf	tablat,w,c
  3627   00256A  0A75               	xorlw	117
  3628   00256C  A4D8               	btfss	status,2,c
  3629   00256E  EFBB  F012         	goto	u8791
  3630   002572  EFBD  F012         	goto	u8790
  3631   002576                     u8791:
  3632   002576  EF11  F013         	goto	l7495
  3633   00257A                     u8790:
  3634   00257A  EFE5  F012         	goto	l7483
  3635   00257E                     l7477:
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  3638   00257E  5072               	movf	vfpfcnvrt@ap^0,w,c
  3639   002580  6ED9               	movwf	fsr2l,c
  3640   002582  6ADA               	clrf	fsr2h,c
  3641   002584  50DF               	movf	indf2,w,c
  3642   002586  2ADF               	incf	indf2,f,c
  3643   002588  2ADF               	incf	indf2,f,c
  3644   00258A  6ED9               	movwf	fsr2l,c
  3645   00258C  6ADA               	clrf	fsr2h,c
  3646   00258E  CFDE F073          	movff	postinc2,??_vfpfcnvrt
  3647   002592  CFDD F074          	movff	postdec2,??_vfpfcnvrt+1
  3648   002596  C073  F076         	movff	??_vfpfcnvrt,vfpfcnvrt@convarg
  3649   00259A  C074  F077         	movff	??_vfpfcnvrt+1,vfpfcnvrt@convarg+1
  3650   00259E  6A78               	clrf	(vfpfcnvrt@convarg+2)^0,c
  3651   0025A0  6A79               	clrf	(vfpfcnvrt@convarg+3)^0,c
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
  3654   0025A2  EFF0  F012         	goto	l7485
  3655   0025A6                     l7479:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  3658   0025A6  5072               	movf	vfpfcnvrt@ap^0,w,c
  3659   0025A8  6ED9               	movwf	fsr2l,c
  3660   0025AA  6ADA               	clrf	fsr2h,c
  3661   0025AC  0E04               	movlw	4
  3662   0025AE  26DF               	addwf	indf2,f,c
  3663   0025B0  5CDF               	subwf	indf2,w,c
  3664   0025B2  6ED9               	movwf	fsr2l,c
  3665   0025B4  6ADA               	clrf	fsr2h,c
  3666   0025B6  CFDE F076          	movff	postinc2,vfpfcnvrt@convarg
  3667   0025BA  CFDE F077          	movff	postinc2,vfpfcnvrt@convarg+1
  3668   0025BE  CFDE F078          	movff	postinc2,vfpfcnvrt@convarg+2
  3669   0025C2  CFDE F079          	movff	postinc2,vfpfcnvrt@convarg+3
  3670                           
  3671                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1471:      break;
  3672   0025C6  EFF0  F012         	goto	l7485
  3673   0025CA                     l7483:
  3674   0025CA  507A               	movf	vfpfcnvrt@c^0,w,c
  3675                           
  3676                           ; Switch size 1, requested type "simple"
  3677                           ; Number of cases is 2, Range of values is 105 to 108
  3678                           ; switch strategies available:
  3679                           ; Name         Instructions Cycles
  3680                           ; simple_byte            7     4 (average)
  3681                           ;	Chosen strategy is simple_byte
  3682   0025CC  0A69               	xorlw	105	; case 105
  3683   0025CE  B4D8               	btfsc	status,2,c
  3684   0025D0  EFBF  F012         	goto	l7477
  3685   0025D4  0A05               	xorlw	5	; case 108
  3686   0025D6  B4D8               	btfsc	status,2,c
  3687   0025D8  EFD3  F012         	goto	l7479
  3688   0025DC  EFF0  F012         	goto	l7485
  3689   0025E0                     l7485:
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  3692   0025E0  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3693   0025E2  6ED9               	movwf	fsr2l,c
  3694   0025E4  6ADA               	clrf	fsr2h,c
  3695   0025E6  287B               	incf	vfpfcnvrt@cp^0,w,c
  3696   0025E8  6EDF               	movwf	indf2,c
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  3699   0025EA  EF05  F013         	goto	l7493
  3700   0025EE                     l7487:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  3703   0025EE  C070  F017         	movff	vfpfcnvrt@fp,utoa@fp
  3704   0025F2  C076  F018         	movff	vfpfcnvrt@convarg,utoa@d
  3705   0025F6  C077  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  3706   0025FA  C078  F01A         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  3707   0025FE  C079  F01B         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  3708   002602  EC13  F01B         	call	_utoa	;wreg free
  3709   002606  EFBB  F013         	goto	l1420
  3710   00260A                     l7493:
  3711   00260A  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3712   00260E                     	if	1	;There is more than 1 active tblptr byte
  3713   00260E  0E10               	movlw	high __smallconst
  3714   002610  6EF7               	movwf	tblptrh,c
  3715   002612                     	endif
  3716   002612                     	if	0	;tblptru may be non-zero
  3717   002612                     	endif
  3718   002612                     	if	0	;tblptru may be non-zero
  3719   002612                     	endif
  3720   002612  0008               	tblrd		*
  3721   002614  50F5               	movf	tablat,w,c
  3722                           
  3723                           ; Switch size 1, requested type "simple"
  3724                           ; Number of cases is 1, Range of values is 117 to 117
  3725                           ; switch strategies available:
  3726                           ; Name         Instructions Cycles
  3727                           ; simple_byte            4     3 (average)
  3728                           ;	Chosen strategy is simple_byte
  3729   002616  0A75               	xorlw	117	; case 117
  3730   002618  B4D8               	btfsc	status,2,c
  3731   00261A  EFF7  F012         	goto	l7487
  3732   00261E  EF11  F013         	goto	l7495
  3733   002622                     l7495:
  3734                           
  3735                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3736   002622  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3737   002624  6ED9               	movwf	fsr2l,c
  3738   002626  6ADA               	clrf	fsr2h,c
  3739   002628  50DF               	movf	indf2,w,c
  3740   00262A  6E7B               	movwf	vfpfcnvrt@cp^0,c
  3741   00262C                     
  3742                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3743   00262C  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3744   002630                     	if	1	;There is more than 1 active tblptr byte
  3745   002630  0E10               	movlw	high __smallconst
  3746   002632  6EF7               	movwf	tblptrh,c
  3747   002634                     	endif
  3748   002634                     	if	0	;tblptru may be non-zero
  3749   002634                     	endif
  3750   002634                     	if	0	;tblptru may be non-zero
  3751   002634                     	endif
  3752   002634  0008               	tblrd		*
  3753   002636  CFF5 F07A          	movff	tablat,vfpfcnvrt@c
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3756   00263A  EF2A  F013         	goto	l7507
  3757   00263E                     l7499:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3760   00263E  2A7B               	incf	vfpfcnvrt@cp^0,f,c
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  3763   002640  EF39  F013         	goto	l7509
  3764   002644                     l7501:
  3765                           
  3766                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3767   002644  0E6C               	movlw	108
  3768   002646  6E7A               	movwf	vfpfcnvrt@c^0,c
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  3771   002648  EF39  F013         	goto	l7509
  3772   00264C                     l7503:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3775   00264C  0E00               	movlw	0
  3776   00264E  6E7A               	movwf	vfpfcnvrt@c^0,c
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  3779   002650  EF39  F013         	goto	l7509
  3780   002654                     l7507:
  3781   002654  507A               	movf	vfpfcnvrt@c^0,w,c
  3782                           
  3783                           ; Switch size 1, requested type "simple"
  3784                           ; Number of cases is 3, Range of values is 76 to 108
  3785                           ; switch strategies available:
  3786                           ; Name         Instructions Cycles
  3787                           ; simple_byte           10     6 (average)
  3788                           ;	Chosen strategy is simple_byte
  3789   002656  0A4C               	xorlw	76	; case 76
  3790   002658  B4D8               	btfsc	status,2,c
  3791   00265A  EF1F  F013         	goto	l7499
  3792   00265E  0A2A               	xorlw	42	; case 102
  3793   002660  B4D8               	btfsc	status,2,c
  3794   002662  EF22  F013         	goto	l7501
  3795   002666  0A0A               	xorlw	10	; case 108
  3796   002668  B4D8               	btfsc	status,2,c
  3797   00266A  EF1F  F013         	goto	l7499
  3798   00266E  EF26  F013         	goto	l7503
  3799   002672                     l7509:
  3800   002672  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3801   002676                     	if	1	;There is more than 1 active tblptr byte
  3802   002676  0E10               	movlw	high __smallconst
  3803   002678  6EF7               	movwf	tblptrh,c
  3804   00267A                     	endif
  3805   00267A                     	if	0	;tblptru may be non-zero
  3806   00267A                     	endif
  3807   00267A                     	if	0	;tblptru may be non-zero
  3808   00267A                     	endif
  3809   00267A  0008               	tblrd		*
  3810   00267C  50F5               	movf	tablat,w,c
  3811   00267E  0A66               	xorlw	102
  3812   002680  A4D8               	btfss	status,2,c
  3813   002682  EF45  F013         	goto	u8801
  3814   002686  EF47  F013         	goto	u8800
  3815   00268A                     u8801:
  3816   00268A  EFA4  F013         	goto	l7529
  3817   00268E                     u8800:
  3818   00268E  EF71  F013         	goto	l7517
  3819   002692                     l7511:
  3820                           
  3821                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3822   002692  5072               	movf	vfpfcnvrt@ap^0,w,c
  3823   002694  6ED9               	movwf	fsr2l,c
  3824   002696  6ADA               	clrf	fsr2h,c
  3825   002698  CFDF F073          	movff	indf2,??_vfpfcnvrt
  3826   00269C  0E04               	movlw	4
  3827   00269E  26DF               	addwf	indf2,f,c
  3828   0026A0  5073               	movf	??_vfpfcnvrt^0,w,c
  3829   0026A2  6ED9               	movwf	fsr2l,c
  3830   0026A4  6ADA               	clrf	fsr2h,c
  3831   0026A6  CFDE F076          	movff	postinc2,vfpfcnvrt@convarg
  3832   0026AA  CFDE F077          	movff	postinc2,vfpfcnvrt@convarg+1
  3833   0026AE  CFDE F078          	movff	postinc2,vfpfcnvrt@convarg+2
  3834   0026B2  CFDE F079          	movff	postinc2,vfpfcnvrt@convarg+3
  3835                           
  3836                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  3837   0026B6  EF7C  F013         	goto	l7519
  3838   0026BA                     l7513:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3841   0026BA  5072               	movf	vfpfcnvrt@ap^0,w,c
  3842   0026BC  6ED9               	movwf	fsr2l,c
  3843   0026BE  6ADA               	clrf	fsr2h,c
  3844   0026C0  CFDF F073          	movff	indf2,??_vfpfcnvrt
  3845   0026C4  0E04               	movlw	4
  3846   0026C6  26DF               	addwf	indf2,f,c
  3847   0026C8  5073               	movf	??_vfpfcnvrt^0,w,c
  3848   0026CA  6ED9               	movwf	fsr2l,c
  3849   0026CC  6ADA               	clrf	fsr2h,c
  3850   0026CE  CFDE F076          	movff	postinc2,vfpfcnvrt@convarg
  3851   0026D2  CFDE F077          	movff	postinc2,vfpfcnvrt@convarg+1
  3852   0026D6  CFDE F078          	movff	postinc2,vfpfcnvrt@convarg+2
  3853   0026DA  CFDE F079          	movff	postinc2,vfpfcnvrt@convarg+3
  3854                           
  3855                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  3856   0026DE  EF7C  F013         	goto	l7519
  3857   0026E2                     l7517:
  3858   0026E2  507A               	movf	vfpfcnvrt@c^0,w,c
  3859                           
  3860                           ; Switch size 1, requested type "simple"
  3861                           ; Number of cases is 2, Range of values is 76 to 108
  3862                           ; switch strategies available:
  3863                           ; Name         Instructions Cycles
  3864                           ; simple_byte            7     4 (average)
  3865                           ;	Chosen strategy is simple_byte
  3866   0026E4  0A4C               	xorlw	76	; case 76
  3867   0026E6  B4D8               	btfsc	status,2,c
  3868   0026E8  EF5D  F013         	goto	l7513
  3869   0026EC  0A20               	xorlw	32	; case 108
  3870   0026EE  B4D8               	btfsc	status,2,c
  3871   0026F0  EF49  F013         	goto	l7511
  3872   0026F4  EF7C  F013         	goto	l7519
  3873   0026F8                     l7519:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3876   0026F8  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3877   0026FA  6ED9               	movwf	fsr2l,c
  3878   0026FC  6ADA               	clrf	fsr2h,c
  3879   0026FE  287B               	incf	vfpfcnvrt@cp^0,w,c
  3880   002700  6EDF               	movwf	indf2,c
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3883   002702  EF98  F013         	goto	l7527
  3884   002706                     l7521:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3887   002706  C070  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  3888   00270A  C076  F03D         	movff	vfpfcnvrt@convarg,efgtoa@f
  3889   00270E  C077  F03E         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3890   002712  C078  F03F         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3891   002716  C079  F040         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3892   00271A  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3893   00271E                     	if	1	;There is more than 1 active tblptr byte
  3894   00271E  0E10               	movlw	high __smallconst
  3895   002720  6EF7               	movwf	tblptrh,c
  3896   002722                     	endif
  3897   002722                     	if	0	;tblptru may be non-zero
  3898   002722                     	endif
  3899   002722                     	if	0	;tblptru may be non-zero
  3900   002722                     	endif
  3901   002722  0008               	tblrd		*
  3902   002724  CFF5 F041          	movff	tablat,efgtoa@c
  3903   002728  EC33  F008         	call	_efgtoa	;wreg free
  3904   00272C  EFBB  F013         	goto	l1420
  3905   002730                     l7527:
  3906   002730  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3907   002734                     	if	1	;There is more than 1 active tblptr byte
  3908   002734  0E10               	movlw	high __smallconst
  3909   002736  6EF7               	movwf	tblptrh,c
  3910   002738                     	endif
  3911   002738                     	if	0	;tblptru may be non-zero
  3912   002738                     	endif
  3913   002738                     	if	0	;tblptru may be non-zero
  3914   002738                     	endif
  3915   002738  0008               	tblrd		*
  3916   00273A  50F5               	movf	tablat,w,c
  3917                           
  3918                           ; Switch size 1, requested type "simple"
  3919                           ; Number of cases is 1, Range of values is 102 to 102
  3920                           ; switch strategies available:
  3921                           ; Name         Instructions Cycles
  3922                           ; simple_byte            4     3 (average)
  3923                           ;	Chosen strategy is simple_byte
  3924   00273C  0A66               	xorlw	102	; case 102
  3925   00273E  B4D8               	btfsc	status,2,c
  3926   002740  EF83  F013         	goto	l7521
  3927   002744  EFA4  F013         	goto	l7529
  3928   002748                     l7529:
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3931   002748  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3932   00274A  6ED9               	movwf	fsr2l,c
  3933   00274C  6ADA               	clrf	fsr2h,c
  3934   00274E  2ADF               	incf	indf2,f,c
  3935   002750  EFBB  F013         	goto	l1420
  3936   002754                     l7533:
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3939   002754  5071               	movf	vfpfcnvrt@fmt^0,w,c
  3940   002756  6ED9               	movwf	fsr2l,c
  3941   002758  6ADA               	clrf	fsr2h,c
  3942   00275A  CFDF FFF6          	movff	indf2,tblptrl
  3943   00275E                     	if	1	;There is more than 1 active tblptr byte
  3944   00275E  0E10               	movlw	high __smallconst
  3945   002760  6EF7               	movwf	tblptrh,c
  3946   002762                     	endif
  3947   002762                     	if	0	;tblptru may be non-zero
  3948   002762                     	endif
  3949   002762                     	if	0	;tblptru may be non-zero
  3950   002762                     	endif
  3951   002762  0008               	tblrd		*
  3952   002764  50F5               	movf	tablat,w,c
  3953   002766  6E01               	movwf	fputc@c^0,c
  3954   002768  6A02               	clrf	(fputc@c+1)^0,c
  3955   00276A  C070  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3956   00276E  EC31  F020         	call	_fputc	;wreg free
  3957   002772  EFA4  F013         	goto	l7529
  3958   002776                     l1420:
  3959   002776  0012               	return		;funcret
  3960   002778                     __end_of_vfpfcnvrt:
  3961                           	callstack 0
  3962                           
  3963 ;; *************** function _utoa *****************
  3964 ;; Defined at:
  3965 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3968 ;;		 -> sprintf@f(12), 
  3969 ;;  d               4   23[COMRAM] unsigned long 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  i               2   31[COMRAM] int 
  3972 ;;  w               2   29[COMRAM] int 
  3973 ;;  p               2   27[COMRAM] int 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3983 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;Total ram usage:       11 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; Hardware stack levels required when called: 4
  3990 ;; This function calls:
  3991 ;;		___lldiv
  3992 ;;		___llmod
  3993 ;;		_pad
  3994 ;; This function is called by:
  3995 ;;		_vfpfcnvrt
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text16
  4000   003626                     __ptext16:
  4001                           	callstack 0
  4002   003626                     _utoa:
  4003                           	callstack 22
  4004   003626                     
  4005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           1013:     if (!(prec < 0)) {
  4006   003626  0100               	movlb	0	; () banked
  4007   003628  BF93               	btfsc	(_prec+1)& (0+255),7,b
  4008   00362A  EF19  F01B         	goto	u8651
  4009   00362E  EF1B  F01B         	goto	u8650
  4010   003632                     u8651:
  4011   003632  EF1C  F01B         	goto	l7369
  4012   003636                     u8650:
  4013   003636                     
  4014                           ; BSR set to: 0
  4015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
  4016   003636  9394               	bcf	_flags& (0+255),1,b
  4017   003638                     l7369:
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
  4021   003638  BF93               	btfsc	(_prec+1)& (0+255),7,b
  4022   00363A  EF23  F01B         	goto	u8660
  4023   00363E  EF21  F01B         	goto	u8661
  4024   003642                     u8661:
  4025   003642  EF29  F01B         	goto	l1376
  4026   003646                     u8660:
  4027   003646                     
  4028                           ; BSR set to: 0
  4029   003646  0E00               	movlw	0
  4030   003648  6E1D               	movwf	(utoa@p+1)^0,c
  4031   00364A  0E01               	movlw	1
  4032   00364C  6E1C               	movwf	utoa@p^0,c
  4033   00364E  EF2D  F01B         	goto	l1378
  4034   003652                     l1376:
  4035                           
  4036                           ; BSR set to: 0
  4037   003652  C092  F01C         	movff	_prec,utoa@p
  4038   003656  C093  F01D         	movff	_prec+1,utoa@p+1
  4039   00365A                     l1378:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  4043   00365A  C090  F01E         	movff	_width,utoa@w
  4044   00365E  C091  F01F         	movff	_width+1,utoa@w+1
  4045   003662                     
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  4048   003662  0E00               	movlw	0
  4049   003664  6E21               	movwf	(utoa@i+1)^0,c
  4050   003666  0E4F               	movlw	79
  4051   003668  6E20               	movwf	utoa@i^0,c
  4052   00366A                     
  4053                           ; BSR set to: 0
  4054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  4055   00366A  0E00               	movlw	0
  4056   00366C  0101               	movlb	1	; () banked
  4057   00366E  6F4F               	movwf	(_dbuf+79)& (0+255),b
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  4060   003670  EF78  F01B         	goto	l7387
  4061   003674                     l7377:
  4062                           
  4063                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1034:         --i;
  4064   003674  0620               	decf	utoa@i^0,f,c
  4065   003676  A0D8               	btfss	status,0,c
  4066   003678  0621               	decf	(utoa@i+1)^0,f,c
  4067   00367A                     
  4068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  4069   00367A  0E00               	movlw	low _dbuf
  4070   00367C  2420               	addwf	utoa@i^0,w,c
  4071   00367E  6ED9               	movwf	fsr2l,c
  4072   003680  0E01               	movlw	high _dbuf
  4073   003682  2021               	addwfc	(utoa@i+1)^0,w,c
  4074   003684  6EDA               	movwf	fsr2h,c
  4075   003686  C018  F001         	movff	utoa@d,___llmod@dividend
  4076   00368A  C019  F002         	movff	utoa@d+1,___llmod@dividend+1
  4077   00368E  C01A  F003         	movff	utoa@d+2,___llmod@dividend+2
  4078   003692  C01B  F004         	movff	utoa@d+3,___llmod@dividend+3
  4079   003696  0E0A               	movlw	10
  4080   003698  6E05               	movwf	___llmod@divisor^0,c
  4081   00369A  0E00               	movlw	0
  4082   00369C  6E06               	movwf	(___llmod@divisor+1)^0,c
  4083   00369E  0E00               	movlw	0
  4084   0036A0  6E07               	movwf	(___llmod@divisor+2)^0,c
  4085   0036A2  0E00               	movlw	0
  4086   0036A4  6E08               	movwf	(___llmod@divisor+3)^0,c
  4087   0036A6  ECDA  F021         	call	___llmod	;wreg free
  4088   0036AA  5001               	movf	?___llmod^0,w,c
  4089   0036AC  0F30               	addlw	48
  4090   0036AE  6EDF               	movwf	indf2,c
  4091   0036B0                     
  4092                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  4093   0036B0  061C               	decf	utoa@p^0,f,c
  4094   0036B2  A0D8               	btfss	status,0,c
  4095   0036B4  061D               	decf	(utoa@p+1)^0,f,c
  4096   0036B6                     
  4097                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  4098   0036B6  061E               	decf	utoa@w^0,f,c
  4099   0036B8  A0D8               	btfss	status,0,c
  4100   0036BA  061F               	decf	(utoa@w+1)^0,f,c
  4101   0036BC                     
  4102                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  4103   0036BC  C018  F001         	movff	utoa@d,___lldiv@dividend
  4104   0036C0  C019  F002         	movff	utoa@d+1,___lldiv@dividend+1
  4105   0036C4  C01A  F003         	movff	utoa@d+2,___lldiv@dividend+2
  4106   0036C8  C01B  F004         	movff	utoa@d+3,___lldiv@dividend+3
  4107   0036CC  0E0A               	movlw	10
  4108   0036CE  6E05               	movwf	___lldiv@divisor^0,c
  4109   0036D0  0E00               	movlw	0
  4110   0036D2  6E06               	movwf	(___lldiv@divisor+1)^0,c
  4111   0036D4  0E00               	movlw	0
  4112   0036D6  6E07               	movwf	(___lldiv@divisor+2)^0,c
  4113   0036D8  0E00               	movlw	0
  4114   0036DA  6E08               	movwf	(___lldiv@divisor+3)^0,c
  4115   0036DC  EC88  F021         	call	___lldiv	;wreg free
  4116   0036E0  C001  F018         	movff	?___lldiv,utoa@d
  4117   0036E4  C002  F019         	movff	?___lldiv+1,utoa@d+1
  4118   0036E8  C003  F01A         	movff	?___lldiv+2,utoa@d+2
  4119   0036EC  C004  F01B         	movff	?___lldiv+3,utoa@d+3
  4120   0036F0                     l7387:
  4121                           
  4122                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  4123   0036F0  5020               	movf	utoa@i^0,w,c
  4124   0036F2  1021               	iorwf	(utoa@i+1)^0,w,c
  4125   0036F4  B4D8               	btfsc	status,2,c
  4126   0036F6  EF7F  F01B         	goto	u8671
  4127   0036FA  EF81  F01B         	goto	u8670
  4128   0036FE                     u8671:
  4129   0036FE  EFAE  F01B         	goto	l7397
  4130   003702                     u8670:
  4131   003702  5018               	movf	utoa@d^0,w,c
  4132   003704  1019               	iorwf	(utoa@d+1)^0,w,c
  4133   003706  101A               	iorwf	(utoa@d+2)^0,w,c
  4134   003708  101B               	iorwf	(utoa@d+3)^0,w,c
  4135   00370A  A4D8               	btfss	status,2,c
  4136   00370C  EF8A  F01B         	goto	u8681
  4137   003710  EF8C  F01B         	goto	u8680
  4138   003714                     u8681:
  4139   003714  EF3A  F01B         	goto	l7377
  4140   003718                     u8680:
  4141   003718  BE1D               	btfsc	(utoa@p+1)^0,7,c
  4142   00371A  EF99  F01B         	goto	u8690
  4143   00371E  501D               	movf	(utoa@p+1)^0,w,c
  4144   003720  E106               	bnz	u8691
  4145   003722  041C               	decf	utoa@p^0,w,c
  4146   003724  B0D8               	btfsc	status,0,c
  4147   003726  EF97  F01B         	goto	u8691
  4148   00372A  EF99  F01B         	goto	u8690
  4149   00372E                     u8691:
  4150   00372E  EF3A  F01B         	goto	l7377
  4151   003732                     u8690:
  4152   003732  BE1F               	btfsc	(utoa@w+1)^0,7,c
  4153   003734  EFA4  F01B         	goto	u8701
  4154   003738  501F               	movf	(utoa@w+1)^0,w,c
  4155   00373A  E108               	bnz	u8700
  4156   00373C  041E               	decf	utoa@w^0,w,c
  4157   00373E  A0D8               	btfss	status,0,c
  4158   003740  EFA4  F01B         	goto	u8701
  4159   003744  EFA6  F01B         	goto	u8700
  4160   003748                     u8701:
  4161   003748  EFAE  F01B         	goto	l7397
  4162   00374C                     u8700:
  4163   00374C  0100               	movlb	0	; () banked
  4164   00374E  B394               	btfsc	_flags& (0+255),1,b
  4165   003750  EFAC  F01B         	goto	u8711
  4166   003754  EFAE  F01B         	goto	u8710
  4167   003758                     u8711:
  4168   003758  EF3A  F01B         	goto	l7377
  4169   00375C                     u8710:
  4170   00375C                     l7397:
  4171                           
  4172                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  4173   00375C  C017  F00F         	movff	utoa@fp,pad@fp
  4174   003760  0E00               	movlw	low _dbuf
  4175   003762  2420               	addwf	utoa@i^0,w,c
  4176   003764  6E10               	movwf	pad@buf^0,c
  4177   003766  0E01               	movlw	high _dbuf
  4178   003768  2021               	addwfc	(utoa@i+1)^0,w,c
  4179   00376A  6E11               	movwf	(pad@buf+1)^0,c
  4180   00376C  C01E  F012         	movff	utoa@w,pad@p
  4181   003770  C01F  F013         	movff	utoa@w+1,pad@p+1
  4182   003774  EC04  F023         	call	_pad	;wreg free
  4183   003778  0012               	return		;funcret
  4184   00377A                     __end_of_utoa:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function ___llmod *****************
  4188 ;; Defined at:
  4189 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\llmod.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  dividend        4    0[COMRAM] unsigned long 
  4192 ;;  divisor         4    4[COMRAM] unsigned long 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  counter         1    8[COMRAM] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  4    0[COMRAM] unsigned long 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4204 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;Total ram usage:        9 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_utoa
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text17
  4218   0043B4                     __ptext17:
  4219                           	callstack 0
  4220   0043B4                     ___llmod:
  4221                           	callstack 25
  4222   0043B4  5005               	movf	___llmod@divisor^0,w,c
  4223   0043B6  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  4224   0043B8  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  4225   0043BA  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  4226   0043BC  B4D8               	btfsc	status,2,c
  4227   0043BE  EFE3  F021         	goto	u7921
  4228   0043C2  EFE5  F021         	goto	u7920
  4229   0043C6                     u7921:
  4230   0043C6  EF15  F022         	goto	l979
  4231   0043CA                     u7920:
  4232   0043CA  0E01               	movlw	1
  4233   0043CC  6E09               	movwf	___llmod@counter^0,c
  4234   0043CE  EFEF  F021         	goto	l6979
  4235   0043D2                     l6977:
  4236   0043D2  90D8               	bcf	status,0,c
  4237   0043D4  3605               	rlcf	___llmod@divisor^0,f,c
  4238   0043D6  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  4239   0043D8  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  4240   0043DA  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  4241   0043DC  2A09               	incf	___llmod@counter^0,f,c
  4242   0043DE                     l6979:
  4243   0043DE  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  4244   0043E0  EFF4  F021         	goto	u7931
  4245   0043E4  EFF6  F021         	goto	u7930
  4246   0043E8                     u7931:
  4247   0043E8  EFE9  F021         	goto	l6977
  4248   0043EC                     u7930:
  4249   0043EC                     l6981:
  4250   0043EC  5005               	movf	___llmod@divisor^0,w,c
  4251   0043EE  5C01               	subwf	___llmod@dividend^0,w,c
  4252   0043F0  5006               	movf	(___llmod@divisor+1)^0,w,c
  4253   0043F2  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  4254   0043F4  5007               	movf	(___llmod@divisor+2)^0,w,c
  4255   0043F6  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  4256   0043F8  5008               	movf	(___llmod@divisor+3)^0,w,c
  4257   0043FA  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  4258   0043FC  A0D8               	btfss	status,0,c
  4259   0043FE  EF03  F022         	goto	u7941
  4260   004402  EF05  F022         	goto	u7940
  4261   004406                     u7941:
  4262   004406  EF0D  F022         	goto	l6985
  4263   00440A                     u7940:
  4264   00440A  5005               	movf	___llmod@divisor^0,w,c
  4265   00440C  5E01               	subwf	___llmod@dividend^0,f,c
  4266   00440E  5006               	movf	(___llmod@divisor+1)^0,w,c
  4267   004410  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  4268   004412  5007               	movf	(___llmod@divisor+2)^0,w,c
  4269   004414  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  4270   004416  5008               	movf	(___llmod@divisor+3)^0,w,c
  4271   004418  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  4272   00441A                     l6985:
  4273   00441A  90D8               	bcf	status,0,c
  4274   00441C  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  4275   00441E  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  4276   004420  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  4277   004422  3205               	rrcf	___llmod@divisor^0,f,c
  4278   004424  2E09               	decfsz	___llmod@counter^0,f,c
  4279   004426  EFF6  F021         	goto	l6981
  4280   00442A                     l979:
  4281   00442A  C001  F001         	movff	___llmod@dividend,?___llmod
  4282   00442E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4283   004432  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4284   004436  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4285   00443A  0012               	return		;funcret
  4286   00443C                     __end_of___llmod:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function ___lldiv *****************
  4290 ;; Defined at:
  4291 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  dividend        4    0[COMRAM] unsigned long 
  4294 ;;  divisor         4    4[COMRAM] unsigned long 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  quotient        4    8[COMRAM] unsigned long 
  4297 ;;  counter         1   12[COMRAM] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  4    0[COMRAM] unsigned long 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4307 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;Total ram usage:       13 bytes
  4312 ;; Hardware stack levels used: 1
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_utoa
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text18
  4321   004310                     __ptext18:
  4322                           	callstack 0
  4323   004310                     ___lldiv:
  4324                           	callstack 25
  4325   004310  0E00               	movlw	0
  4326   004312  6E09               	movwf	___lldiv@quotient^0,c
  4327   004314  0E00               	movlw	0
  4328   004316  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4329   004318  0E00               	movlw	0
  4330   00431A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4331   00431C  0E00               	movlw	0
  4332   00431E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4333   004320  5005               	movf	___lldiv@divisor^0,w,c
  4334   004322  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4335   004324  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4336   004326  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4337   004328  B4D8               	btfsc	status,2,c
  4338   00432A  EF99  F021         	goto	u7191
  4339   00432E  EF9B  F021         	goto	u7190
  4340   004332                     u7191:
  4341   004332  EFD1  F021         	goto	l586
  4342   004336                     u7190:
  4343   004336  0E01               	movlw	1
  4344   004338  6E0D               	movwf	___lldiv@counter^0,c
  4345   00433A  EFA5  F021         	goto	l6515
  4346   00433E                     l6513:
  4347   00433E  90D8               	bcf	status,0,c
  4348   004340  3605               	rlcf	___lldiv@divisor^0,f,c
  4349   004342  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4350   004344  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4351   004346  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4352   004348  2A0D               	incf	___lldiv@counter^0,f,c
  4353   00434A                     l6515:
  4354   00434A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4355   00434C  EFAA  F021         	goto	u7201
  4356   004350  EFAC  F021         	goto	u7200
  4357   004354                     u7201:
  4358   004354  EF9F  F021         	goto	l6513
  4359   004358                     u7200:
  4360   004358                     l6517:
  4361   004358  90D8               	bcf	status,0,c
  4362   00435A  3609               	rlcf	___lldiv@quotient^0,f,c
  4363   00435C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4364   00435E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4365   004360  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4366   004362  5005               	movf	___lldiv@divisor^0,w,c
  4367   004364  5C01               	subwf	___lldiv@dividend^0,w,c
  4368   004366  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4369   004368  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4370   00436A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4371   00436C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4372   00436E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4373   004370  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4374   004372  A0D8               	btfss	status,0,c
  4375   004374  EFBE  F021         	goto	u7211
  4376   004378  EFC0  F021         	goto	u7210
  4377   00437C                     u7211:
  4378   00437C  EFC9  F021         	goto	l6525
  4379   004380                     u7210:
  4380   004380  5005               	movf	___lldiv@divisor^0,w,c
  4381   004382  5E01               	subwf	___lldiv@dividend^0,f,c
  4382   004384  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4383   004386  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4384   004388  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4385   00438A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4386   00438C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4387   00438E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4388   004390  8009               	bsf	___lldiv@quotient^0,0,c
  4389   004392                     l6525:
  4390   004392  90D8               	bcf	status,0,c
  4391   004394  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4392   004396  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4393   004398  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4394   00439A  3205               	rrcf	___lldiv@divisor^0,f,c
  4395   00439C  2E0D               	decfsz	___lldiv@counter^0,f,c
  4396   00439E  EFAC  F021         	goto	l6517
  4397   0043A2                     l586:
  4398   0043A2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4399   0043A6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4400   0043AA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4401   0043AE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4402   0043B2  0012               	return		;funcret
  4403   0043B4                     __end_of___lldiv:
  4404                           	callstack 0
  4405                           
  4406 ;; *************** function _read_prec_or_width *****************
  4407 ;; Defined at:
  4408 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  4411 ;;		 -> vfprintf@cfmt(1), 
  4412 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  4413 ;;		 -> sprintf@ap(1), 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  c               1    8[COMRAM] unsigned char 
  4416 ;;  n               2    9[COMRAM] int 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  2    6[COMRAM] int 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;Total ram usage:        5 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 1
  4433 ;; This function calls:
  4434 ;;		___wmul
  4435 ;; This function is called by:
  4436 ;;		_vfpfcnvrt
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text19
  4441   0041C6                     __ptext19:
  4442                           	callstack 0
  4443   0041C6                     _read_prec_or_width:
  4444                           	callstack 25
  4445   0041C6                     
  4446                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4447   0041C6  0E00               	movlw	0
  4448   0041C8  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  4449   0041CA  0E00               	movlw	0
  4450   0041CC  6E0A               	movwf	read_prec_or_width@n^0,c
  4451   0041CE                     
  4452                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4453   0041CE  5007               	movf	read_prec_or_width@fmt^0,w,c
  4454   0041D0  6ED9               	movwf	fsr2l,c
  4455   0041D2  6ADA               	clrf	fsr2h,c
  4456   0041D4  CFDF FFF6          	movff	indf2,tblptrl
  4457   0041D8                     	if	1	;There is more than 1 active tblptr byte
  4458   0041D8  0E10               	movlw	high __smallconst
  4459   0041DA  6EF7               	movwf	tblptrh,c
  4460   0041DC                     	endif
  4461   0041DC                     	if	0	;tblptru may be non-zero
  4462   0041DC                     	endif
  4463   0041DC                     	if	0	;tblptru may be non-zero
  4464   0041DC                     	endif
  4465   0041DC  0008               	tblrd		*
  4466   0041DE  50F5               	movf	tablat,w,c
  4467   0041E0  0A2A               	xorlw	42
  4468   0041E2  A4D8               	btfss	status,2,c
  4469   0041E4  EFF6  F020         	goto	u8721
  4470   0041E8  EFF8  F020         	goto	u8720
  4471   0041EC                     u8721:
  4472   0041EC  EF1E  F021         	goto	l7413
  4473   0041F0                     u8720:
  4474   0041F0                     
  4475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4476   0041F0  5007               	movf	read_prec_or_width@fmt^0,w,c
  4477   0041F2  6ED9               	movwf	fsr2l,c
  4478   0041F4  6ADA               	clrf	fsr2h,c
  4479   0041F6  2ADF               	incf	indf2,f,c
  4480   0041F8                     
  4481                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4482   0041F8  5008               	movf	read_prec_or_width@ap^0,w,c
  4483   0041FA  6ED9               	movwf	fsr2l,c
  4484   0041FC  6ADA               	clrf	fsr2h,c
  4485   0041FE  0E02               	movlw	2
  4486   004200  26DF               	addwf	indf2,f,c
  4487   004202  5CDF               	subwf	indf2,w,c
  4488   004204  6ED9               	movwf	fsr2l,c
  4489   004206  6ADA               	clrf	fsr2h,c
  4490   004208  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  4491   00420C  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  4492                           
  4493                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4494   004210  EF31  F021         	goto	l1390
  4495   004214                     l7409:
  4496                           
  4497                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4498   004214  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  4499   004218  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  4500   00421C  0E00               	movlw	0
  4501   00421E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4502   004220  0E0A               	movlw	10
  4503   004222  6E03               	movwf	___wmul@multiplicand^0,c
  4504   004224  ECEE  F025         	call	___wmul	;wreg free
  4505   004228  5009               	movf	read_prec_or_width@c^0,w,c
  4506   00422A  2401               	addwf	?___wmul^0,w,c
  4507   00422C  6E0A               	movwf	read_prec_or_width@n^0,c
  4508   00422E  0E00               	movlw	0
  4509   004230  2002               	addwfc	(?___wmul+1)^0,w,c
  4510   004232  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  4511   004234                     
  4512                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4513   004234  5007               	movf	read_prec_or_width@fmt^0,w,c
  4514   004236  6ED9               	movwf	fsr2l,c
  4515   004238  6ADA               	clrf	fsr2h,c
  4516   00423A  2ADF               	incf	indf2,f,c
  4517   00423C                     l7413:
  4518                           
  4519                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4520   00423C  5007               	movf	read_prec_or_width@fmt^0,w,c
  4521   00423E  6ED9               	movwf	fsr2l,c
  4522   004240  6ADA               	clrf	fsr2h,c
  4523   004242  CFDF FFF6          	movff	indf2,tblptrl
  4524   004246                     	if	1	;There is more than 1 active tblptr byte
  4525   004246  0E10               	movlw	high __smallconst
  4526   004248  6EF7               	movwf	tblptrh,c
  4527   00424A                     	endif
  4528   00424A                     	if	0	;tblptru may be non-zero
  4529   00424A                     	endif
  4530   00424A                     	if	0	;tblptru may be non-zero
  4531   00424A                     	endif
  4532   00424A  0008               	tblrd		*
  4533   00424C  50F5               	movf	tablat,w,c
  4534   00424E  0FD0               	addlw	208
  4535   004250  6E09               	movwf	read_prec_or_width@c^0,c
  4536   004252  0E09               	movlw	9
  4537   004254  6409               	cpfsgt	read_prec_or_width@c^0,c
  4538   004256  EF2F  F021         	goto	u8731
  4539   00425A  EF31  F021         	goto	u8730
  4540   00425E                     u8731:
  4541   00425E  EF0A  F021         	goto	l7409
  4542   004262                     u8730:
  4543   004262                     l1390:
  4544                           
  4545                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4546   004262  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  4547   004266  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  4548   00426A  0012               	return		;funcret
  4549   00426C                     __end_of_read_prec_or_width:
  4550                           	callstack 0
  4551                           
  4552 ;; *************** function ___wmul *****************
  4553 ;; Defined at:
  4554 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  multiplier      2    0[COMRAM] unsigned int 
  4557 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  product         2    4[COMRAM] unsigned int 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  2    0[COMRAM] unsigned int 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, prodl, prodh
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;Total ram usage:        6 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_read_prec_or_width
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text20
  4583   004BDC                     __ptext20:
  4584                           	callstack 0
  4585   004BDC                     ___wmul:
  4586                           	callstack 25
  4587   004BDC  5001               	movf	___wmul@multiplier^0,w,c
  4588   004BDE  0203               	mulwf	___wmul@multiplicand^0,c
  4589   004BE0  CFF3 F005          	movff	prodl,___wmul@product
  4590   004BE4  CFF4 F006          	movff	prodh,___wmul@product+1
  4591   004BE8  5001               	movf	___wmul@multiplier^0,w,c
  4592   004BEA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4593   004BEC  50F3               	movf	243,w,c
  4594   004BEE  2606               	addwf	(___wmul@product+1)^0,f,c
  4595   004BF0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4596   004BF2  0203               	mulwf	___wmul@multiplicand^0,c
  4597   004BF4  50F3               	movf	243,w,c
  4598   004BF6  2606               	addwf	(___wmul@product+1)^0,f,c
  4599   004BF8  C005  F001         	movff	___wmul@product,?___wmul
  4600   004BFC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4601   004C00  0012               	return		;funcret
  4602   004C02                     __end_of___wmul:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function _efgtoa *****************
  4606 ;; Defined at:
  4607 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  fp              1   59[COMRAM] PTR struct _IO_FILE
  4610 ;;		 -> sprintf@f(12), 
  4611 ;;  f               4   60[COMRAM] PTR struct _IO_FILE
  4612 ;;  c               1   64[COMRAM] unsigned char 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  u               4  107[COMRAM] struct flui
  4615 ;;  g               4  101[COMRAM] struct flui
  4616 ;;  l               4   94[COMRAM] struct flui
  4617 ;;  h               4   90[COMRAM] struct flui
  4618 ;;  ou              4   84[COMRAM] struct flui
  4619 ;;  n               2  105[COMRAM] int 
  4620 ;;  i               2   98[COMRAM] int 
  4621 ;;  w               2   88[COMRAM] int 
  4622 ;;  e               2   82[COMRAM] int 
  4623 ;;  m               2   80[COMRAM] int 
  4624 ;;  d               2   78[COMRAM] int 
  4625 ;;  t               2   71[COMRAM] int 
  4626 ;;  p               2   69[COMRAM] int 
  4627 ;;  ne              2   67[COMRAM] int 
  4628 ;;  sign            1  100[COMRAM] unsigned char 
  4629 ;;  nmode           1   77[COMRAM] unsigned char 
  4630 ;;  mode            1   76[COMRAM] unsigned char 
  4631 ;;  pp              1   75[COMRAM] unsigned char 
  4632 ;;  esign           1    0        unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4642 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Locals:        44       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;Total ram usage:       52 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 4
  4649 ;; This function calls:
  4650 ;;		___fladd
  4651 ;;		___fldiv
  4652 ;;		___fleq
  4653 ;;		___flge
  4654 ;;		___flmul
  4655 ;;		___flneg
  4656 ;;		___flsub
  4657 ;;		___fltol
  4658 ;;		___fpclassifyf
  4659 ;;		_floorf
  4660 ;;		_labs
  4661 ;;		_memcpy
  4662 ;;		_pad
  4663 ;;		_strcpy
  4664 ;; This function is called by:
  4665 ;;		_vfpfcnvrt
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text21
  4670   001066                     __ptext21:
  4671                           	callstack 0
  4672   001066                     _efgtoa:
  4673                           	callstack 22
  4674   001066                     
  4675                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  4676   001066  0E00               	movlw	0
  4677   001068  6E65               	movwf	efgtoa@sign^0,c
  4678   00106A                     
  4679                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  4680   00106A  C03D  F066         	movff	efgtoa@f,efgtoa@g
  4681   00106E  C03E  F067         	movff	efgtoa@f+1,efgtoa@g+1
  4682   001072  C03F  F068         	movff	efgtoa@f+2,efgtoa@g+2
  4683   001076  C040  F069         	movff	efgtoa@f+3,efgtoa@g+3
  4684   00107A                     
  4685                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  4686   00107A  BE69               	btfsc	(efgtoa@g+3)^0,7,c
  4687   00107C  EF44  F008         	goto	u8300
  4688   001080  EF42  F008         	goto	u8301
  4689   001084                     u8301:
  4690   001084  EF58  F008         	goto	l7141
  4691   001088                     u8300:
  4692   001088                     
  4693                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  4694   001088  0E01               	movlw	1
  4695   00108A  6E65               	movwf	efgtoa@sign^0,c
  4696   00108C                     
  4697                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  4698   00108C  C066  F001         	movff	efgtoa@g,___flneg@f1
  4699   001090  C067  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4700   001094  C068  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4701   001098  C069  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4702   00109C  EC6B  F025         	call	___flneg	;wreg free
  4703   0010A0  C001  F066         	movff	?___flneg,efgtoa@g
  4704   0010A4  C002  F067         	movff	?___flneg+1,efgtoa@g+1
  4705   0010A8  C003  F068         	movff	?___flneg+2,efgtoa@g+2
  4706   0010AC  C004  F069         	movff	?___flneg+3,efgtoa@g+3
  4707   0010B0                     l7141:
  4708                           
  4709                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  4710   0010B0  0E00               	movlw	0
  4711   0010B2  6E6B               	movwf	(efgtoa@n+1)^0,c
  4712   0010B4  0E00               	movlw	0
  4713   0010B6  6E6A               	movwf	efgtoa@n^0,c
  4714   0010B8                     
  4715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  4716   0010B8  C090  F059         	movff	_width,efgtoa@w
  4717   0010BC  C091  F05A         	movff	_width+1,efgtoa@w+1
  4718   0010C0                     
  4719                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  4720   0010C0  5065               	movf	efgtoa@sign^0,w,c
  4721   0010C2  B4D8               	btfsc	status,2,c
  4722   0010C4  EF66  F008         	goto	u8311
  4723   0010C8  EF68  F008         	goto	u8310
  4724   0010CC                     u8311:
  4725   0010CC  EF7C  F008         	goto	l7155
  4726   0010D0                     u8310:
  4727   0010D0                     
  4728                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  4729   0010D0  5065               	movf	efgtoa@sign^0,w,c
  4730   0010D2  A4D8               	btfss	status,2,c
  4731   0010D4  EF6E  F008         	goto	u8321
  4732   0010D8  EF70  F008         	goto	u8320
  4733   0010DC                     u8321:
  4734   0010DC  EF76  F008         	goto	l7151
  4735   0010E0                     u8320:
  4736   0010E0  0E00               	movlw	0
  4737   0010E2  6E4B               	movwf	(_efgtoa$1450+1)^0,c
  4738   0010E4  0E2B               	movlw	43
  4739   0010E6  6E4A               	movwf	_efgtoa$1450^0,c
  4740   0010E8  EF7A  F008         	goto	l7153
  4741   0010EC                     l7151:
  4742   0010EC  0E00               	movlw	0
  4743   0010EE  6E4B               	movwf	(_efgtoa$1450+1)^0,c
  4744   0010F0  0E2D               	movlw	45
  4745   0010F2  6E4A               	movwf	_efgtoa$1450^0,c
  4746   0010F4                     l7153:
  4747   0010F4  C04A  F065         	movff	_efgtoa$1450,efgtoa@sign
  4748   0010F8                     l7155:
  4749                           
  4750                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4751   0010F8  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4752   0010FC  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4753   001100  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4754   001104  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4755   001108  EC59  F01E         	call	___fpclassifyf	;wreg free
  4756   00110C  0401               	decf	?___fpclassifyf^0,w,c
  4757   00110E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4758   001110  A4D8               	btfss	status,2,c
  4759   001112  EF8D  F008         	goto	u8331
  4760   001116  EF8F  F008         	goto	u8330
  4761   00111A                     u8331:
  4762   00111A  EFBC  F008         	goto	l7173
  4763   00111E                     u8330:
  4764   00111E                     
  4765                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  4766   00111E  5065               	movf	efgtoa@sign^0,w,c
  4767   001120  B4D8               	btfsc	status,2,c
  4768   001122  EF95  F008         	goto	u8341
  4769   001126  EF97  F008         	goto	u8340
  4770   00112A                     u8341:
  4771   00112A  EFA0  F008         	goto	l7165
  4772   00112E                     u8340:
  4773   00112E                     
  4774                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  4775   00112E  C065  F100         	movff	efgtoa@sign,_dbuf
  4776   001132                     
  4777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  4778   001132  0659               	decf	efgtoa@w^0,f,c
  4779   001134  A0D8               	btfss	status,0,c
  4780   001136  065A               	decf	(efgtoa@w+1)^0,f,c
  4781   001138                     
  4782                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4783   001138  0E00               	movlw	0
  4784   00113A  6E6B               	movwf	(efgtoa@n+1)^0,c
  4785   00113C  0E01               	movlw	1
  4786   00113E  6E6A               	movwf	efgtoa@n^0,c
  4787   001140                     l7165:
  4788                           
  4789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  4790   001140  0E00               	movlw	low _dbuf
  4791   001142  246A               	addwf	efgtoa@n^0,w,c
  4792   001144  6E01               	movwf	strcpy@dest^0,c
  4793   001146  0E01               	movlw	high _dbuf
  4794   001148  206B               	addwfc	(efgtoa@n+1)^0,w,c
  4795   00114A  6E02               	movwf	(strcpy@dest+1)^0,c
  4796   00114C  0E4E               	movlw	low STR_11
  4797   00114E  6E03               	movwf	strcpy@src^0,c
  4798   001150  EC4E  F025         	call	_strcpy	;wreg free
  4799   001154                     l7167:
  4800                           
  4801                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4802   001154  0EFD               	movlw	253
  4803   001156  2659               	addwf	efgtoa@w^0,f,c
  4804   001158  0EFF               	movlw	255
  4805   00115A  225A               	addwfc	(efgtoa@w+1)^0,f,c
  4806   00115C                     
  4807                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4808   00115C  C03C  F00F         	movff	efgtoa@fp,pad@fp
  4809   001160  0E00               	movlw	low _dbuf
  4810   001162  6E10               	movwf	pad@buf^0,c
  4811   001164  0E01               	movlw	high _dbuf
  4812   001166  6E11               	movwf	(pad@buf+1)^0,c
  4813   001168  C059  F012         	movff	efgtoa@w,pad@p
  4814   00116C  C05A  F013         	movff	efgtoa@w+1,pad@p+1
  4815   001170  EC04  F023         	call	_pad	;wreg free
  4816   001174  EF48  F00D         	goto	l1324
  4817   001178                     l7173:
  4818                           
  4819                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4820   001178  C066  F001         	movff	efgtoa@g,___fpclassifyf@x
  4821   00117C  C067  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4822   001180  C068  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4823   001184  C069  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4824   001188  EC59  F01E         	call	___fpclassifyf	;wreg free
  4825   00118C  5001               	movf	?___fpclassifyf^0,w,c
  4826   00118E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4827   001190  A4D8               	btfss	status,2,c
  4828   001192  EFCD  F008         	goto	u8351
  4829   001196  EFCF  F008         	goto	u8350
  4830   00119A                     u8351:
  4831   00119A  EFEC  F008         	goto	l7191
  4832   00119E                     u8350:
  4833   00119E                     
  4834                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  4835   00119E  5065               	movf	efgtoa@sign^0,w,c
  4836   0011A0  B4D8               	btfsc	status,2,c
  4837   0011A2  EFD5  F008         	goto	u8361
  4838   0011A6  EFD7  F008         	goto	u8360
  4839   0011AA                     u8361:
  4840   0011AA  EFE0  F008         	goto	l7183
  4841   0011AE                     u8360:
  4842   0011AE                     
  4843                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  4844   0011AE  C065  F100         	movff	efgtoa@sign,_dbuf
  4845   0011B2                     
  4846                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  4847   0011B2  0659               	decf	efgtoa@w^0,f,c
  4848   0011B4  A0D8               	btfss	status,0,c
  4849   0011B6  065A               	decf	(efgtoa@w+1)^0,f,c
  4850   0011B8                     
  4851                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  4852   0011B8  0E00               	movlw	0
  4853   0011BA  6E6B               	movwf	(efgtoa@n+1)^0,c
  4854   0011BC  0E01               	movlw	1
  4855   0011BE  6E6A               	movwf	efgtoa@n^0,c
  4856   0011C0                     l7183:
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  4859   0011C0  0E00               	movlw	low _dbuf
  4860   0011C2  246A               	addwf	efgtoa@n^0,w,c
  4861   0011C4  6E01               	movwf	strcpy@dest^0,c
  4862   0011C6  0E01               	movlw	high _dbuf
  4863   0011C8  206B               	addwfc	(efgtoa@n+1)^0,w,c
  4864   0011CA  6E02               	movwf	(strcpy@dest+1)^0,c
  4865   0011CC  0E52               	movlw	low STR_14
  4866   0011CE  6E03               	movwf	strcpy@src^0,c
  4867   0011D0  EC4E  F025         	call	_strcpy	;wreg free
  4868   0011D4  EFAA  F008         	goto	l7167
  4869   0011D8                     l7191:
  4870                           
  4871                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  4872   0011D8  0E00               	movlw	0
  4873   0011DA  6E6C               	movwf	efgtoa@u^0,c
  4874   0011DC  0E00               	movlw	0
  4875   0011DE  6E6D               	movwf	(efgtoa@u+1)^0,c
  4876   0011E0  0E80               	movlw	128
  4877   0011E2  6E6E               	movwf	(efgtoa@u+2)^0,c
  4878   0011E4  0E3F               	movlw	63
  4879   0011E6  6E6F               	movwf	(efgtoa@u+3)^0,c
  4880                           
  4881                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  4882   0011E8  0E00               	movlw	0
  4883   0011EA  6E54               	movwf	(efgtoa@e+1)^0,c
  4884   0011EC  0E00               	movlw	0
  4885   0011EE  6E53               	movwf	efgtoa@e^0,c
  4886   0011F0                     
  4887                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  4888   0011F0  C066  F001         	movff	efgtoa@g,___fleq@ff1
  4889   0011F4  C067  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4890   0011F8  C068  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4891   0011FC  C069  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4892   001200  0E00               	movlw	0
  4893   001202  6E05               	movwf	___fleq@ff2^0,c
  4894   001204  0E00               	movlw	0
  4895   001206  6E06               	movwf	(___fleq@ff2+1)^0,c
  4896   001208  0E00               	movlw	0
  4897   00120A  6E07               	movwf	(___fleq@ff2+2)^0,c
  4898   00120C  0E00               	movlw	0
  4899   00120E  6E08               	movwf	(___fleq@ff2+3)^0,c
  4900   001210  EC8E  F020         	call	___fleq	;wreg free
  4901   001214  B0D8               	btfsc	status,0,c
  4902   001216  EF0F  F009         	goto	u8371
  4903   00121A  EF11  F009         	goto	u8370
  4904   00121E                     u8371:
  4905   00121E  EFEC  F009         	goto	l1327
  4906   001222                     u8370:
  4907   001222  EF1D  F009         	goto	l7199
  4908   001226                     l1329:
  4909                           
  4910                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  4911   001226  C055  F06C         	movff	efgtoa@ou,efgtoa@u
  4912   00122A  C056  F06D         	movff	efgtoa@ou+1,efgtoa@u+1
  4913   00122E  C057  F06E         	movff	efgtoa@ou+2,efgtoa@u+2
  4914   001232  C058  F06F         	movff	efgtoa@ou+3,efgtoa@u+3
  4915   001236                     
  4916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  4917   001236  4A53               	infsnz	efgtoa@e^0,f,c
  4918   001238  2A54               	incf	(efgtoa@e+1)^0,f,c
  4919   00123A                     l7199:
  4920                           
  4921                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4922   00123A  C06C  F001         	movff	efgtoa@u,___flmul@b
  4923   00123E  C06D  F002         	movff	efgtoa@u+1,___flmul@b+1
  4924   001242  C06E  F003         	movff	efgtoa@u+2,___flmul@b+2
  4925   001246  C06F  F004         	movff	efgtoa@u+3,___flmul@b+3
  4926   00124A  0E00               	movlw	0
  4927   00124C  6E05               	movwf	___flmul@a^0,c
  4928   00124E  0E00               	movlw	0
  4929   001250  6E06               	movwf	(___flmul@a+1)^0,c
  4930   001252  0E20               	movlw	32
  4931   001254  6E07               	movwf	(___flmul@a+2)^0,c
  4932   001256  0E41               	movlw	65
  4933   001258  6E08               	movwf	(___flmul@a+3)^0,c
  4934   00125A  ECA9  F00F         	call	___flmul	;wreg free
  4935   00125E  C001  F055         	movff	?___flmul,efgtoa@ou
  4936   001262  C002  F056         	movff	?___flmul+1,efgtoa@ou+1
  4937   001266  C003  F057         	movff	?___flmul+2,efgtoa@ou+2
  4938   00126A  C004  F058         	movff	?___flmul+3,efgtoa@ou+3
  4939   00126E  5055               	movf	efgtoa@ou^0,w,c
  4940   001270  5C66               	subwf	efgtoa@g^0,w,c
  4941   001272  6E01               	movwf	labs@a^0,c
  4942   001274  5056               	movf	(efgtoa@ou+1)^0,w,c
  4943   001276  5867               	subwfb	(efgtoa@g+1)^0,w,c
  4944   001278  6E02               	movwf	(labs@a+1)^0,c
  4945   00127A  5057               	movf	(efgtoa@ou+2)^0,w,c
  4946   00127C  5868               	subwfb	(efgtoa@g+2)^0,w,c
  4947   00127E  6E03               	movwf	(labs@a+2)^0,c
  4948   001280  5058               	movf	(efgtoa@ou+3)^0,w,c
  4949   001282  5869               	subwfb	(efgtoa@g+3)^0,w,c
  4950   001284  6E04               	movwf	(labs@a+3)^0,c
  4951   001286  ECEE  F023         	call	_labs	;wreg free
  4952   00128A  BE04               	btfsc	(?_labs+3)^0,7,c
  4953   00128C  EF53  F009         	goto	u8381
  4954   001290  5004               	movf	(?_labs+3)^0,w,c
  4955   001292  1003               	iorwf	(?_labs+2)^0,w,c
  4956   001294  1002               	iorwf	(?_labs+1)^0,w,c
  4957   001296  E109               	bnz	u8380
  4958   001298  0E02               	movlw	2
  4959   00129A  5C01               	subwf	?_labs^0,w,c
  4960   00129C  A0D8               	btfss	status,0,c
  4961   00129E  EF53  F009         	goto	u8381
  4962   0012A2  EF55  F009         	goto	u8380
  4963   0012A6                     u8381:
  4964   0012A6  EF13  F009         	goto	l1329
  4965   0012AA                     u8380:
  4966   0012AA  C055  F01A         	movff	efgtoa@ou,___flge@ff1
  4967   0012AE  C056  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  4968   0012B2  C057  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  4969   0012B6  C058  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  4970   0012BA  C066  F01E         	movff	efgtoa@g,___flge@ff2
  4971   0012BE  C067  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  4972   0012C2  C068  F020         	movff	efgtoa@g+2,___flge@ff2+2
  4973   0012C6  C069  F021         	movff	efgtoa@g+3,___flge@ff2+3
  4974   0012CA  ECD7  F01D         	call	___flge	;wreg free
  4975   0012CE  A0D8               	btfss	status,0,c
  4976   0012D0  EF6C  F009         	goto	u8391
  4977   0012D4  EF6E  F009         	goto	u8390
  4978   0012D8                     u8391:
  4979   0012D8  EF13  F009         	goto	l1329
  4980   0012DC                     u8390:
  4981   0012DC                     
  4982                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4983   0012DC  506C               	movf	efgtoa@u^0,w,c
  4984   0012DE  5C66               	subwf	efgtoa@g^0,w,c
  4985   0012E0  6E01               	movwf	labs@a^0,c
  4986   0012E2  506D               	movf	(efgtoa@u+1)^0,w,c
  4987   0012E4  5867               	subwfb	(efgtoa@g+1)^0,w,c
  4988   0012E6  6E02               	movwf	(labs@a+1)^0,c
  4989   0012E8  506E               	movf	(efgtoa@u+2)^0,w,c
  4990   0012EA  5868               	subwfb	(efgtoa@g+2)^0,w,c
  4991   0012EC  6E03               	movwf	(labs@a+2)^0,c
  4992   0012EE  506F               	movf	(efgtoa@u+3)^0,w,c
  4993   0012F0  5869               	subwfb	(efgtoa@g+3)^0,w,c
  4994   0012F2  6E04               	movwf	(labs@a+3)^0,c
  4995   0012F4  ECEE  F023         	call	_labs	;wreg free
  4996   0012F8  BE04               	btfsc	(?_labs+3)^0,7,c
  4997   0012FA  EF8C  F009         	goto	u8400
  4998   0012FE  5004               	movf	(?_labs+3)^0,w,c
  4999   001300  1003               	iorwf	(?_labs+2)^0,w,c
  5000   001302  1002               	iorwf	(?_labs+1)^0,w,c
  5001   001304  E107               	bnz	u8401
  5002   001306  0E02               	movlw	2
  5003   001308  5C01               	subwf	?_labs^0,w,c
  5004   00130A  B0D8               	btfsc	status,0,c
  5005   00130C  EF8A  F009         	goto	u8401
  5006   001310  EF8C  F009         	goto	u8400
  5007   001314                     u8401:
  5008   001314  EFD3  F009         	goto	l7217
  5009   001318                     u8400:
  5010   001318                     l7207:
  5011                           
  5012                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  5013   001318  C06C  F066         	movff	efgtoa@u,efgtoa@g
  5014   00131C  C06D  F067         	movff	efgtoa@u+1,efgtoa@g+1
  5015   001320  C06E  F068         	movff	efgtoa@u+2,efgtoa@g+2
  5016   001324  C06F  F069         	movff	efgtoa@u+3,efgtoa@g+3
  5017                           
  5018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  5019   001328  EFEC  F009         	goto	l1327
  5020   00132C                     l7209:
  5021                           
  5022                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  5023   00132C  C06C  F00F         	movff	efgtoa@u,___fldiv@b
  5024   001330  C06D  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5025   001334  C06E  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5026   001338  C06F  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5027   00133C  0E00               	movlw	0
  5028   00133E  6E13               	movwf	___fldiv@a^0,c
  5029   001340  0E00               	movlw	0
  5030   001342  6E14               	movwf	(___fldiv@a+1)^0,c
  5031   001344  0E20               	movlw	32
  5032   001346  6E15               	movwf	(___fldiv@a+2)^0,c
  5033   001348  0E41               	movlw	65
  5034   00134A  6E16               	movwf	(___fldiv@a+3)^0,c
  5035   00134C  ECB9  F015         	call	___fldiv	;wreg free
  5036   001350  C00F  F06C         	movff	?___fldiv,efgtoa@u
  5037   001354  C010  F06D         	movff	?___fldiv+1,efgtoa@u+1
  5038   001358  C011  F06E         	movff	?___fldiv+2,efgtoa@u+2
  5039   00135C  C012  F06F         	movff	?___fldiv+3,efgtoa@u+3
  5040   001360                     
  5041                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  5042   001360  0653               	decf	efgtoa@e^0,f,c
  5043   001362  A0D8               	btfss	status,0,c
  5044   001364  0654               	decf	(efgtoa@e+1)^0,f,c
  5045   001366                     
  5046                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5047   001366  506C               	movf	efgtoa@u^0,w,c
  5048   001368  5C66               	subwf	efgtoa@g^0,w,c
  5049   00136A  6E01               	movwf	labs@a^0,c
  5050   00136C  506D               	movf	(efgtoa@u+1)^0,w,c
  5051   00136E  5867               	subwfb	(efgtoa@g+1)^0,w,c
  5052   001370  6E02               	movwf	(labs@a+1)^0,c
  5053   001372  506E               	movf	(efgtoa@u+2)^0,w,c
  5054   001374  5868               	subwfb	(efgtoa@g+2)^0,w,c
  5055   001376  6E03               	movwf	(labs@a+2)^0,c
  5056   001378  506F               	movf	(efgtoa@u+3)^0,w,c
  5057   00137A  5869               	subwfb	(efgtoa@g+3)^0,w,c
  5058   00137C  6E04               	movwf	(labs@a+3)^0,c
  5059   00137E  ECEE  F023         	call	_labs	;wreg free
  5060   001382  BE04               	btfsc	(?_labs+3)^0,7,c
  5061   001384  EFD1  F009         	goto	u8410
  5062   001388  5004               	movf	(?_labs+3)^0,w,c
  5063   00138A  1003               	iorwf	(?_labs+2)^0,w,c
  5064   00138C  1002               	iorwf	(?_labs+1)^0,w,c
  5065   00138E  E107               	bnz	u8411
  5066   001390  0E02               	movlw	2
  5067   001392  5C01               	subwf	?_labs^0,w,c
  5068   001394  B0D8               	btfsc	status,0,c
  5069   001396  EFCF  F009         	goto	u8411
  5070   00139A  EFD1  F009         	goto	u8410
  5071   00139E                     u8411:
  5072   00139E  EFD3  F009         	goto	l7217
  5073   0013A2                     u8410:
  5074   0013A2  EF8C  F009         	goto	l7207
  5075   0013A6                     l7217:
  5076                           
  5077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  5078   0013A6  C066  F01A         	movff	efgtoa@g,___flge@ff1
  5079   0013AA  C067  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5080   0013AE  C068  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5081   0013B2  C069  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5082   0013B6  C06C  F01E         	movff	efgtoa@u,___flge@ff2
  5083   0013BA  C06D  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  5084   0013BE  C06E  F020         	movff	efgtoa@u+2,___flge@ff2+2
  5085   0013C2  C06F  F021         	movff	efgtoa@u+3,___flge@ff2+3
  5086   0013C6  ECD7  F01D         	call	___flge	;wreg free
  5087   0013CA  A0D8               	btfss	status,0,c
  5088   0013CC  EFEA  F009         	goto	u8421
  5089   0013D0  EFEC  F009         	goto	u8420
  5090   0013D4                     u8421:
  5091   0013D4  EF96  F009         	goto	l7209
  5092   0013D8                     u8420:
  5093   0013D8                     l1327:
  5094                           
  5095                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  5096   0013D8  C041  F04D         	movff	efgtoa@c,efgtoa@mode
  5097                           
  5098                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  5099   0013DC  C04D  F04E         	movff	efgtoa@mode,efgtoa@nmode
  5100   0013E0                     
  5101                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  5102   0013E0  0100               	movlb	0	; () banked
  5103   0013E2  BF93               	btfsc	(_prec+1)& (0+255),7,b
  5104   0013E4  EFF6  F009         	goto	u8431
  5105   0013E8  EFF8  F009         	goto	u8430
  5106   0013EC                     u8431:
  5107   0013EC  EFFE  F009         	goto	l7223
  5108   0013F0                     u8430:
  5109   0013F0                     
  5110                           ; BSR set to: 0
  5111   0013F0  C092  F046         	movff	_prec,efgtoa@p
  5112   0013F4  C093  F047         	movff	_prec+1,efgtoa@p+1
  5113   0013F8  EF02  F00A         	goto	l7225
  5114   0013FC                     l7223:
  5115                           
  5116                           ; BSR set to: 0
  5117   0013FC  0E00               	movlw	0
  5118   0013FE  6E47               	movwf	(efgtoa@p+1)^0,c
  5119   001400  0E06               	movlw	6
  5120   001402  6E46               	movwf	efgtoa@p^0,c
  5121   001404                     l7225:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  5125   001404  C046  F051         	movff	efgtoa@p,efgtoa@m
  5126   001408  C047  F052         	movff	efgtoa@p+1,efgtoa@m+1
  5127   00140C                     
  5128                           ; BSR set to: 0
  5129                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  5130   00140C  4A51               	infsnz	efgtoa@m^0,f,c
  5131   00140E  2A52               	incf	(efgtoa@m+1)^0,f,c
  5132   001410                     
  5133                           ; BSR set to: 0
  5134                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  5135   001410  0E66               	movlw	102
  5136   001412  184E               	xorwf	efgtoa@nmode^0,w,c
  5137   001414  A4D8               	btfss	status,2,c
  5138   001416  EF0F  F00A         	goto	u8441
  5139   00141A  EF11  F00A         	goto	u8440
  5140   00141E                     u8441:
  5141   00141E  EF31  F00A         	goto	l7239
  5142   001422                     u8440:
  5143   001422                     
  5144                           ; BSR set to: 0
  5145                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  5146   001422  BE54               	btfsc	(efgtoa@e+1)^0,7,c
  5147   001424  EF18  F00A         	goto	u8450
  5148   001428  EF16  F00A         	goto	u8451
  5149   00142C                     u8451:
  5150   00142C  EF24  F00A         	goto	l7235
  5151   001430                     u8450:
  5152   001430                     
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  5155   001430  0E00               	movlw	0
  5156   001432  6E6C               	movwf	efgtoa@u^0,c
  5157   001434  0E00               	movlw	0
  5158   001436  6E6D               	movwf	(efgtoa@u+1)^0,c
  5159   001438  0E80               	movlw	128
  5160   00143A  6E6E               	movwf	(efgtoa@u+2)^0,c
  5161   00143C  0E3F               	movlw	63
  5162   00143E  6E6F               	movwf	(efgtoa@u+3)^0,c
  5163                           
  5164                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  5165   001440  0E00               	movlw	0
  5166   001442  6E54               	movwf	(efgtoa@e+1)^0,c
  5167   001444  0E00               	movlw	0
  5168   001446  6E53               	movwf	efgtoa@e^0,c
  5169   001448                     l7235:
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  5173   001448  0E67               	movlw	103
  5174   00144A  184D               	xorwf	efgtoa@mode^0,w,c
  5175   00144C  B4D8               	btfsc	status,2,c
  5176   00144E  EF2B  F00A         	goto	u8461
  5177   001452  EF2D  F00A         	goto	u8460
  5178   001456                     u8461:
  5179   001456  EF31  F00A         	goto	l7239
  5180   00145A                     u8460:
  5181   00145A                     
  5182                           ; BSR set to: 0
  5183                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  5184   00145A  5053               	movf	efgtoa@e^0,w,c
  5185   00145C  2651               	addwf	efgtoa@m^0,f,c
  5186   00145E  5054               	movf	(efgtoa@e+1)^0,w,c
  5187   001460  2252               	addwfc	(efgtoa@m+1)^0,f,c
  5188   001462                     l7239:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  5192   001462  0E00               	movlw	0
  5193   001464  6E64               	movwf	(efgtoa@i+1)^0,c
  5194   001466  0E00               	movlw	0
  5195   001468  6E63               	movwf	efgtoa@i^0,c
  5196   00146A                     
  5197                           ; BSR set to: 0
  5198                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  5199   00146A  C066  F05B         	movff	efgtoa@g,efgtoa@h
  5200   00146E  C067  F05C         	movff	efgtoa@g+1,efgtoa@h+1
  5201   001472  C068  F05D         	movff	efgtoa@g+2,efgtoa@h+2
  5202   001476  C069  F05E         	movff	efgtoa@g+3,efgtoa@h+3
  5203   00147A                     
  5204                           ; BSR set to: 0
  5205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  5206   00147A  C06C  F055         	movff	efgtoa@u,efgtoa@ou
  5207   00147E  C06D  F056         	movff	efgtoa@u+1,efgtoa@ou+1
  5208   001482  C06E  F057         	movff	efgtoa@u+2,efgtoa@ou+2
  5209   001486  C06F  F058         	movff	efgtoa@u+3,efgtoa@ou+3
  5210                           
  5211                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  5212   00148A  EFC1  F00A         	goto	l7253
  5213   00148E                     l7245:
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  5216   00148E  C05B  F00F         	movff	efgtoa@h,___fldiv@b
  5217   001492  C05C  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5218   001496  C05D  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5219   00149A  C05E  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5220   00149E  C06C  F013         	movff	efgtoa@u,___fldiv@a
  5221   0014A2  C06D  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5222   0014A6  C06E  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5223   0014AA  C06F  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5224   0014AE  ECB9  F015         	call	___fldiv	;wreg free
  5225   0014B2  C00F  F028         	movff	?___fldiv,floorf@x
  5226   0014B6  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5227   0014BA  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5228   0014BE  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5229   0014C2  EC86  F017         	call	_floorf	;wreg free
  5230   0014C6  C028  F05F         	movff	?_floorf,efgtoa@l
  5231   0014CA  C029  F060         	movff	?_floorf+1,efgtoa@l+1
  5232   0014CE  C02A  F061         	movff	?_floorf+2,efgtoa@l+2
  5233   0014D2  C02B  F062         	movff	?_floorf+3,efgtoa@l+3
  5234                           
  5235                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  5236   0014D6  C05F  F001         	movff	efgtoa@l,___fltol@f1
  5237   0014DA  C060  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5238   0014DE  C061  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5239   0014E2  C062  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5240   0014E6  EC54  F01D         	call	___fltol	;wreg free
  5241   0014EA  C001  F04F         	movff	?___fltol,efgtoa@d
  5242   0014EE  C002  F050         	movff	?___fltol+1,efgtoa@d+1
  5243   0014F2                     
  5244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  5245   0014F2  C05B  F01A         	movff	efgtoa@h,___flsub@b
  5246   0014F6  C05C  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5247   0014FA  C05D  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5248   0014FE  C05E  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5249   001502  C05F  F005         	movff	efgtoa@l,___flmul@a
  5250   001506  C060  F006         	movff	efgtoa@l+1,___flmul@a+1
  5251   00150A  C061  F007         	movff	efgtoa@l+2,___flmul@a+2
  5252   00150E  C062  F008         	movff	efgtoa@l+3,___flmul@a+3
  5253   001512  C06C  F001         	movff	efgtoa@u,___flmul@b
  5254   001516  C06D  F002         	movff	efgtoa@u+1,___flmul@b+1
  5255   00151A  C06E  F003         	movff	efgtoa@u+2,___flmul@b+2
  5256   00151E  C06F  F004         	movff	efgtoa@u+3,___flmul@b+3
  5257   001522  ECA9  F00F         	call	___flmul	;wreg free
  5258   001526  C001  F01E         	movff	?___flmul,___flsub@a
  5259   00152A  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5260   00152E  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5261   001532  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5262   001536  EC6A  F024         	call	___flsub	;wreg free
  5263   00153A  C01A  F05B         	movff	?___flsub,efgtoa@h
  5264   00153E  C01B  F05C         	movff	?___flsub+1,efgtoa@h+1
  5265   001542  C01C  F05D         	movff	?___flsub+2,efgtoa@h+2
  5266   001546  C01D  F05E         	movff	?___flsub+3,efgtoa@h+3
  5267   00154A                     
  5268                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  5269   00154A  C06C  F00F         	movff	efgtoa@u,___fldiv@b
  5270   00154E  C06D  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5271   001552  C06E  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5272   001556  C06F  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5273   00155A  0E00               	movlw	0
  5274   00155C  6E13               	movwf	___fldiv@a^0,c
  5275   00155E  0E00               	movlw	0
  5276   001560  6E14               	movwf	(___fldiv@a+1)^0,c
  5277   001562  0E20               	movlw	32
  5278   001564  6E15               	movwf	(___fldiv@a+2)^0,c
  5279   001566  0E41               	movlw	65
  5280   001568  6E16               	movwf	(___fldiv@a+3)^0,c
  5281   00156A  ECB9  F015         	call	___fldiv	;wreg free
  5282   00156E  C00F  F06C         	movff	?___fldiv,efgtoa@u
  5283   001572  C010  F06D         	movff	?___fldiv+1,efgtoa@u+1
  5284   001576  C011  F06E         	movff	?___fldiv+2,efgtoa@u+2
  5285   00157A  C012  F06F         	movff	?___fldiv+3,efgtoa@u+3
  5286   00157E                     
  5287                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  5288   00157E  4A63               	infsnz	efgtoa@i^0,f,c
  5289   001580  2A64               	incf	(efgtoa@i+1)^0,f,c
  5290   001582                     l7253:
  5291                           
  5292                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  5293   001582  5051               	movf	efgtoa@m^0,w,c
  5294   001584  5C63               	subwf	efgtoa@i^0,w,c
  5295   001586  5064               	movf	(efgtoa@i+1)^0,w,c
  5296   001588  0A80               	xorlw	128
  5297   00158A  6E42               	movwf	??_efgtoa^0,c
  5298   00158C  5052               	movf	(efgtoa@m+1)^0,w,c
  5299   00158E  0A80               	xorlw	128
  5300   001590  5842               	subwfb	??_efgtoa^0,w,c
  5301   001592  A0D8               	btfss	status,0,c
  5302   001594  EFCE  F00A         	goto	u8471
  5303   001598  EFD0  F00A         	goto	u8470
  5304   00159C                     u8471:
  5305   00159C  EF47  F00A         	goto	l7245
  5306   0015A0                     u8470:
  5307   0015A0                     
  5308                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  5309   0015A0  C06C  F001         	movff	efgtoa@u,___flmul@b
  5310   0015A4  C06D  F002         	movff	efgtoa@u+1,___flmul@b+1
  5311   0015A8  C06E  F003         	movff	efgtoa@u+2,___flmul@b+2
  5312   0015AC  C06F  F004         	movff	efgtoa@u+3,___flmul@b+3
  5313   0015B0  0E00               	movlw	0
  5314   0015B2  6E05               	movwf	___flmul@a^0,c
  5315   0015B4  0E00               	movlw	0
  5316   0015B6  6E06               	movwf	(___flmul@a+1)^0,c
  5317   0015B8  0EA0               	movlw	160
  5318   0015BA  6E07               	movwf	(___flmul@a+2)^0,c
  5319   0015BC  0E40               	movlw	64
  5320   0015BE  6E08               	movwf	(___flmul@a+3)^0,c
  5321   0015C0  ECA9  F00F         	call	___flmul	;wreg free
  5322   0015C4  C001  F05F         	movff	?___flmul,efgtoa@l
  5323   0015C8  C002  F060         	movff	?___flmul+1,efgtoa@l+1
  5324   0015CC  C003  F061         	movff	?___flmul+2,efgtoa@l+2
  5325   0015D0  C004  F062         	movff	?___flmul+3,efgtoa@l+3
  5326   0015D4                     
  5327                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  5328   0015D4  C05B  F01A         	movff	efgtoa@h,___flge@ff1
  5329   0015D8  C05C  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5330   0015DC  C05D  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5331   0015E0  C05E  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5332   0015E4  C05F  F01E         	movff	efgtoa@l,___flge@ff2
  5333   0015E8  C060  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  5334   0015EC  C061  F020         	movff	efgtoa@l+2,___flge@ff2+2
  5335   0015F0  C062  F021         	movff	efgtoa@l+3,___flge@ff2+3
  5336   0015F4  ECD7  F01D         	call	___flge	;wreg free
  5337   0015F8  B0D8               	btfsc	status,0,c
  5338   0015FA  EF01  F00B         	goto	u8481
  5339   0015FE  EF03  F00B         	goto	u8480
  5340   001602                     u8481:
  5341   001602  EF0D  F00B         	goto	l7261
  5342   001606                     u8480:
  5343   001606                     
  5344                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  5345   001606  0E00               	movlw	0
  5346   001608  6E5F               	movwf	efgtoa@l^0,c
  5347   00160A  0E00               	movlw	0
  5348   00160C  6E60               	movwf	(efgtoa@l+1)^0,c
  5349   00160E  0E00               	movlw	0
  5350   001610  6E61               	movwf	(efgtoa@l+2)^0,c
  5351   001612  0E00               	movlw	0
  5352   001614  6E62               	movwf	(efgtoa@l+3)^0,c
  5353                           
  5354                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  5355   001616  EF35  F00B         	goto	l7267
  5356   00161A                     l7261:
  5357                           
  5358                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  5359   00161A  C05B  F001         	movff	efgtoa@h,___fleq@ff1
  5360   00161E  C05C  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5361   001622  C05D  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5362   001626  C05E  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5363   00162A  C05F  F005         	movff	efgtoa@l,___fleq@ff2
  5364   00162E  C060  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5365   001632  C061  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5366   001636  C062  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5367   00163A  EC8E  F020         	call	___fleq	;wreg free
  5368   00163E  A0D8               	btfss	status,0,c
  5369   001640  EF24  F00B         	goto	u8491
  5370   001644  EF26  F00B         	goto	u8490
  5371   001648                     u8491:
  5372   001648  EF35  F00B         	goto	l7267
  5373   00164C                     u8490:
  5374   00164C  B04F               	btfsc	efgtoa@d^0,0,c
  5375   00164E  EF2B  F00B         	goto	u8501
  5376   001652  EF2D  F00B         	goto	u8500
  5377   001656                     u8501:
  5378   001656  EF35  F00B         	goto	l7267
  5379   00165A                     u8500:
  5380   00165A                     
  5381                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  5382   00165A  0E00               	movlw	0
  5383   00165C  6E5F               	movwf	efgtoa@l^0,c
  5384   00165E  0E00               	movlw	0
  5385   001660  6E60               	movwf	(efgtoa@l+1)^0,c
  5386   001662  0E00               	movlw	0
  5387   001664  6E61               	movwf	(efgtoa@l+2)^0,c
  5388   001666  0E00               	movlw	0
  5389   001668  6E62               	movwf	(efgtoa@l+3)^0,c
  5390   00166A                     l7267:
  5391                           
  5392                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  5393   00166A  C066  F001         	movff	efgtoa@g,___fladd@b
  5394   00166E  C067  F002         	movff	efgtoa@g+1,___fladd@b+1
  5395   001672  C068  F003         	movff	efgtoa@g+2,___fladd@b+2
  5396   001676  C069  F004         	movff	efgtoa@g+3,___fladd@b+3
  5397   00167A  C05F  F005         	movff	efgtoa@l,___fladd@a
  5398   00167E  C060  F006         	movff	efgtoa@l+1,___fladd@a+1
  5399   001682  C061  F007         	movff	efgtoa@l+2,___fladd@a+2
  5400   001686  C062  F008         	movff	efgtoa@l+3,___fladd@a+3
  5401   00168A  EC49  F00D         	call	___fladd	;wreg free
  5402   00168E  C001  F05B         	movff	?___fladd,efgtoa@h
  5403   001692  C002  F05C         	movff	?___fladd+1,efgtoa@h+1
  5404   001696  C003  F05D         	movff	?___fladd+2,efgtoa@h+2
  5405   00169A  C004  F05E         	movff	?___fladd+3,efgtoa@h+3
  5406   00169E                     
  5407                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  5408   00169E  C05B  F01A         	movff	efgtoa@h,___flge@ff1
  5409   0016A2  C05C  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5410   0016A6  C05D  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5411   0016AA  C05E  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5412   0016AE  0E00               	movlw	0
  5413   0016B0  6E05               	movwf	___flmul@a^0,c
  5414   0016B2  0E00               	movlw	0
  5415   0016B4  6E06               	movwf	(___flmul@a+1)^0,c
  5416   0016B6  0E20               	movlw	32
  5417   0016B8  6E07               	movwf	(___flmul@a+2)^0,c
  5418   0016BA  0E41               	movlw	65
  5419   0016BC  6E08               	movwf	(___flmul@a+3)^0,c
  5420   0016BE  C055  F001         	movff	efgtoa@ou,___flmul@b
  5421   0016C2  C056  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5422   0016C6  C057  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5423   0016CA  C058  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5424   0016CE  ECA9  F00F         	call	___flmul	;wreg free
  5425   0016D2  C001  F01E         	movff	?___flmul,___flge@ff2
  5426   0016D6  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  5427   0016DA  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  5428   0016DE  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  5429   0016E2  ECD7  F01D         	call	___flge	;wreg free
  5430   0016E6  A0D8               	btfss	status,0,c
  5431   0016E8  EF78  F00B         	goto	u8511
  5432   0016EC  EF7A  F00B         	goto	u8510
  5433   0016F0                     u8511:
  5434   0016F0  EFA1  F00B         	goto	l7279
  5435   0016F4                     u8510:
  5436   0016F4                     
  5437                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  5438   0016F4  4A53               	infsnz	efgtoa@e^0,f,c
  5439   0016F6  2A54               	incf	(efgtoa@e+1)^0,f,c
  5440   0016F8                     
  5441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  5442   0016F8  C055  F001         	movff	efgtoa@ou,___flmul@b
  5443   0016FC  C056  F002         	movff	efgtoa@ou+1,___flmul@b+1
  5444   001700  C057  F003         	movff	efgtoa@ou+2,___flmul@b+2
  5445   001704  C058  F004         	movff	efgtoa@ou+3,___flmul@b+3
  5446   001708  0E00               	movlw	0
  5447   00170A  6E05               	movwf	___flmul@a^0,c
  5448   00170C  0E00               	movlw	0
  5449   00170E  6E06               	movwf	(___flmul@a+1)^0,c
  5450   001710  0E20               	movlw	32
  5451   001712  6E07               	movwf	(___flmul@a+2)^0,c
  5452   001714  0E41               	movlw	65
  5453   001716  6E08               	movwf	(___flmul@a+3)^0,c
  5454   001718  ECA9  F00F         	call	___flmul	;wreg free
  5455   00171C  C001  F055         	movff	?___flmul,efgtoa@ou
  5456   001720  C002  F056         	movff	?___flmul+1,efgtoa@ou+1
  5457   001724  C003  F057         	movff	?___flmul+2,efgtoa@ou+2
  5458   001728  C004  F058         	movff	?___flmul+3,efgtoa@ou+3
  5459   00172C                     
  5460                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  5461   00172C  0E66               	movlw	102
  5462   00172E  184E               	xorwf	efgtoa@nmode^0,w,c
  5463   001730  A4D8               	btfss	status,2,c
  5464   001732  EF9D  F00B         	goto	u8521
  5465   001736  EF9F  F00B         	goto	u8520
  5466   00173A                     u8521:
  5467   00173A  EFA1  F00B         	goto	l7279
  5468   00173E                     u8520:
  5469   00173E                     
  5470                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  5471   00173E  4A51               	infsnz	efgtoa@m^0,f,c
  5472   001740  2A52               	incf	(efgtoa@m+1)^0,f,c
  5473   001742                     l7279:
  5474                           
  5475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  5476   001742  C055  F06C         	movff	efgtoa@ou,efgtoa@u
  5477   001746  C056  F06D         	movff	efgtoa@ou+1,efgtoa@u+1
  5478   00174A  C057  F06E         	movff	efgtoa@ou+2,efgtoa@u+2
  5479   00174E  C058  F06F         	movff	efgtoa@ou+3,efgtoa@u+3
  5480   001752                     
  5481                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  5482   001752  C053  F044         	movff	efgtoa@e,efgtoa@ne
  5483   001756  C054  F045         	movff	efgtoa@e+1,efgtoa@ne+1
  5484   00175A                     
  5485                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  5486   00175A  0E00               	movlw	0
  5487   00175C  6E4C               	movwf	efgtoa@pp^0,c
  5488   00175E                     
  5489                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  5490   00175E  0E00               	movlw	0
  5491   001760  6E49               	movwf	(efgtoa@t+1)^0,c
  5492   001762  0E00               	movlw	0
  5493   001764  6E48               	movwf	efgtoa@t^0,c
  5494   001766                     
  5495                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  5496   001766  0E00               	movlw	0
  5497   001768  6E64               	movwf	(efgtoa@i+1)^0,c
  5498   00176A  0E00               	movlw	0
  5499   00176C  6E63               	movwf	efgtoa@i^0,c
  5500                           
  5501                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5502   00176E  EF9B  F00C         	goto	l7329
  5503   001772                     l7289:
  5504                           
  5505                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  5506   001772  C05B  F00F         	movff	efgtoa@h,___fldiv@b
  5507   001776  C05C  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5508   00177A  C05D  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5509   00177E  C05E  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5510   001782  C06C  F013         	movff	efgtoa@u,___fldiv@a
  5511   001786  C06D  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5512   00178A  C06E  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5513   00178E  C06F  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5514   001792  ECB9  F015         	call	___fldiv	;wreg free
  5515   001796  C00F  F028         	movff	?___fldiv,floorf@x
  5516   00179A  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5517   00179E  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5518   0017A2  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5519   0017A6  EC86  F017         	call	_floorf	;wreg free
  5520   0017AA  C028  F05F         	movff	?_floorf,efgtoa@l
  5521   0017AE  C029  F060         	movff	?_floorf+1,efgtoa@l+1
  5522   0017B2  C02A  F061         	movff	?_floorf+2,efgtoa@l+2
  5523   0017B6  C02B  F062         	movff	?_floorf+3,efgtoa@l+3
  5524                           
  5525                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  5526   0017BA  C05F  F001         	movff	efgtoa@l,___fltol@f1
  5527   0017BE  C060  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5528   0017C2  C061  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5529   0017C6  C062  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5530   0017CA  EC54  F01D         	call	___fltol	;wreg free
  5531   0017CE  BE02               	btfsc	(?___fltol+1)^0,7,c
  5532   0017D0  EFF5  F00B         	goto	u8530
  5533   0017D4  5002               	movf	(?___fltol+1)^0,w,c
  5534   0017D6  E107               	bnz	u8531
  5535   0017D8  0E0A               	movlw	10
  5536   0017DA  5C01               	subwf	?___fltol^0,w,c
  5537   0017DC  B0D8               	btfsc	status,0,c
  5538   0017DE  EFF3  F00B         	goto	u8531
  5539   0017E2  EFF5  F00B         	goto	u8530
  5540   0017E6                     u8531:
  5541   0017E6  EF05  F00C         	goto	l7293
  5542   0017EA                     u8530:
  5543   0017EA  C05F  F001         	movff	efgtoa@l,___fltol@f1
  5544   0017EE  C060  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5545   0017F2  C061  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5546   0017F6  C062  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5547   0017FA  EC54  F01D         	call	___fltol	;wreg free
  5548   0017FE  C001  F04F         	movff	?___fltol,efgtoa@d
  5549   001802  C002  F050         	movff	?___fltol+1,efgtoa@d+1
  5550   001806  EF09  F00C         	goto	l1357
  5551   00180A                     l7293:
  5552   00180A  0E00               	movlw	0
  5553   00180C  6E50               	movwf	(efgtoa@d+1)^0,c
  5554   00180E  0E09               	movlw	9
  5555   001810  6E4F               	movwf	efgtoa@d^0,c
  5556   001812                     l1357:
  5557                           
  5558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  5559   001812  504C               	movf	efgtoa@pp^0,w,c
  5560   001814  A4D8               	btfss	status,2,c
  5561   001816  EF0F  F00C         	goto	u8541
  5562   00181A  EF11  F00C         	goto	u8540
  5563   00181E                     u8541:
  5564   00181E  EF39  F00C         	goto	l7313
  5565   001822                     u8540:
  5566   001822  BE45               	btfsc	(efgtoa@ne+1)^0,7,c
  5567   001824  EF18  F00C         	goto	u8550
  5568   001828  EF16  F00C         	goto	u8551
  5569   00182C                     u8551:
  5570   00182C  EF39  F00C         	goto	l7313
  5571   001830                     u8550:
  5572   001830                     
  5573                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  5574   001830  0E00               	movlw	low _dbuf
  5575   001832  246A               	addwf	efgtoa@n^0,w,c
  5576   001834  6ED9               	movwf	fsr2l,c
  5577   001836  0E01               	movlw	high _dbuf
  5578   001838  206B               	addwfc	(efgtoa@n+1)^0,w,c
  5579   00183A  6EDA               	movwf	fsr2h,c
  5580   00183C  0E2E               	movlw	46
  5581   00183E  6EDF               	movwf	indf2,c
  5582   001840  4A6A               	infsnz	efgtoa@n^0,f,c
  5583   001842  2A6B               	incf	(efgtoa@n+1)^0,f,c
  5584   001844                     
  5585                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  5586   001844  0659               	decf	efgtoa@w^0,f,c
  5587   001846  A0D8               	btfss	status,0,c
  5588   001848  065A               	decf	(efgtoa@w+1)^0,f,c
  5589   00184A                     
  5590                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  5591   00184A  0E01               	movlw	1
  5592   00184C  6E4C               	movwf	efgtoa@pp^0,c
  5593   00184E  EF39  F00C         	goto	l7313
  5594   001852                     l7305:
  5595                           
  5596                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  5597   001852  0E00               	movlw	low _dbuf
  5598   001854  246A               	addwf	efgtoa@n^0,w,c
  5599   001856  6ED9               	movwf	fsr2l,c
  5600   001858  0E01               	movlw	high _dbuf
  5601   00185A  206B               	addwfc	(efgtoa@n+1)^0,w,c
  5602   00185C  6EDA               	movwf	fsr2h,c
  5603   00185E  0E30               	movlw	48
  5604   001860  6EDF               	movwf	indf2,c
  5605   001862  4A6A               	infsnz	efgtoa@n^0,f,c
  5606   001864  2A6B               	incf	(efgtoa@n+1)^0,f,c
  5607   001866                     
  5608                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  5609   001866  0659               	decf	efgtoa@w^0,f,c
  5610   001868  A0D8               	btfss	status,0,c
  5611   00186A  065A               	decf	(efgtoa@w+1)^0,f,c
  5612   00186C                     
  5613                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  5614   00186C  0648               	decf	efgtoa@t^0,f,c
  5615   00186E  A0D8               	btfss	status,0,c
  5616   001870  0649               	decf	(efgtoa@t+1)^0,f,c
  5617   001872                     l7313:
  5618                           
  5619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  5620   001872  5048               	movf	efgtoa@t^0,w,c
  5621   001874  1049               	iorwf	(efgtoa@t+1)^0,w,c
  5622   001876  A4D8               	btfss	status,2,c
  5623   001878  EF40  F00C         	goto	u8561
  5624   00187C  EF42  F00C         	goto	u8560
  5625   001880                     u8561:
  5626   001880  EF29  F00C         	goto	l7305
  5627   001884                     u8560:
  5628   001884                     
  5629                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5630   001884  0E00               	movlw	low _dbuf
  5631   001886  246A               	addwf	efgtoa@n^0,w,c
  5632   001888  6ED9               	movwf	fsr2l,c
  5633   00188A  0E01               	movlw	high _dbuf
  5634   00188C  206B               	addwfc	(efgtoa@n+1)^0,w,c
  5635   00188E  6EDA               	movwf	fsr2h,c
  5636   001890  504F               	movf	efgtoa@d^0,w,c
  5637   001892  0F30               	addlw	48
  5638   001894  6EDF               	movwf	indf2,c
  5639   001896  4A6A               	infsnz	efgtoa@n^0,f,c
  5640   001898  2A6B               	incf	(efgtoa@n+1)^0,f,c
  5641   00189A                     
  5642                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  5643   00189A  0659               	decf	efgtoa@w^0,f,c
  5644   00189C  A0D8               	btfss	status,0,c
  5645   00189E  065A               	decf	(efgtoa@w+1)^0,f,c
  5646   0018A0                     
  5647                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  5648   0018A0  C05B  F01A         	movff	efgtoa@h,___flsub@b
  5649   0018A4  C05C  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5650   0018A8  C05D  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5651   0018AC  C05E  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5652   0018B0  C05F  F005         	movff	efgtoa@l,___flmul@a
  5653   0018B4  C060  F006         	movff	efgtoa@l+1,___flmul@a+1
  5654   0018B8  C061  F007         	movff	efgtoa@l+2,___flmul@a+2
  5655   0018BC  C062  F008         	movff	efgtoa@l+3,___flmul@a+3
  5656   0018C0  C06C  F001         	movff	efgtoa@u,___flmul@b
  5657   0018C4  C06D  F002         	movff	efgtoa@u+1,___flmul@b+1
  5658   0018C8  C06E  F003         	movff	efgtoa@u+2,___flmul@b+2
  5659   0018CC  C06F  F004         	movff	efgtoa@u+3,___flmul@b+3
  5660   0018D0  ECA9  F00F         	call	___flmul	;wreg free
  5661   0018D4  C001  F01E         	movff	?___flmul,___flsub@a
  5662   0018D8  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5663   0018DC  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5664   0018E0  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5665   0018E4  EC6A  F024         	call	___flsub	;wreg free
  5666   0018E8  C01A  F05B         	movff	?___flsub,efgtoa@h
  5667   0018EC  C01B  F05C         	movff	?___flsub+1,efgtoa@h+1
  5668   0018F0  C01C  F05D         	movff	?___flsub+2,efgtoa@h+2
  5669   0018F4  C01D  F05E         	movff	?___flsub+3,efgtoa@h+3
  5670   0018F8                     
  5671                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  5672   0018F8  C06C  F00F         	movff	efgtoa@u,___fldiv@b
  5673   0018FC  C06D  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5674   001900  C06E  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5675   001904  C06F  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5676   001908  0E00               	movlw	0
  5677   00190A  6E13               	movwf	___fldiv@a^0,c
  5678   00190C  0E00               	movlw	0
  5679   00190E  6E14               	movwf	(___fldiv@a+1)^0,c
  5680   001910  0E20               	movlw	32
  5681   001912  6E15               	movwf	(___fldiv@a+2)^0,c
  5682   001914  0E41               	movlw	65
  5683   001916  6E16               	movwf	(___fldiv@a+3)^0,c
  5684   001918  ECB9  F015         	call	___fldiv	;wreg free
  5685   00191C  C00F  F06C         	movff	?___fldiv,efgtoa@u
  5686   001920  C010  F06D         	movff	?___fldiv+1,efgtoa@u+1
  5687   001924  C011  F06E         	movff	?___fldiv+2,efgtoa@u+2
  5688   001928  C012  F06F         	movff	?___fldiv+3,efgtoa@u+3
  5689   00192C                     
  5690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  5691   00192C  0644               	decf	efgtoa@ne^0,f,c
  5692   00192E  A0D8               	btfss	status,0,c
  5693   001930  0645               	decf	(efgtoa@ne+1)^0,f,c
  5694   001932                     
  5695                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  5696   001932  4A63               	infsnz	efgtoa@i^0,f,c
  5697   001934  2A64               	incf	(efgtoa@i+1)^0,f,c
  5698   001936                     l7329:
  5699                           
  5700                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5701   001936  5051               	movf	efgtoa@m^0,w,c
  5702   001938  5C63               	subwf	efgtoa@i^0,w,c
  5703   00193A  5064               	movf	(efgtoa@i+1)^0,w,c
  5704   00193C  0A80               	xorlw	128
  5705   00193E  6E42               	movwf	??_efgtoa^0,c
  5706   001940  5052               	movf	(efgtoa@m+1)^0,w,c
  5707   001942  0A80               	xorlw	128
  5708   001944  5842               	subwfb	??_efgtoa^0,w,c
  5709   001946  B0D8               	btfsc	status,0,c
  5710   001948  EFA8  F00C         	goto	u8571
  5711   00194C  EFAA  F00C         	goto	u8570
  5712   001950                     u8571:
  5713   001950  EFB8  F00C         	goto	l7333
  5714   001954                     u8570:
  5715   001954  BE6B               	btfsc	(efgtoa@n+1)^0,7,c
  5716   001956  EFB6  F00C         	goto	u8581
  5717   00195A  506B               	movf	(efgtoa@n+1)^0,w,c
  5718   00195C  E109               	bnz	u8580
  5719   00195E  0E4B               	movlw	75
  5720   001960  5C6A               	subwf	efgtoa@n^0,w,c
  5721   001962  A0D8               	btfss	status,0,c
  5722   001964  EFB6  F00C         	goto	u8581
  5723   001968  EFB8  F00C         	goto	u8580
  5724   00196C                     u8581:
  5725   00196C  EFB9  F00B         	goto	l7289
  5726   001970                     u8580:
  5727   001970                     l7333:
  5728                           
  5729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  5730   001970  0E00               	movlw	0
  5731   001972  6E64               	movwf	(efgtoa@i+1)^0,c
  5732   001974  0E4F               	movlw	79
  5733   001976  6E63               	movwf	efgtoa@i^0,c
  5734   001978                     
  5735                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  5736   001978  0E00               	movlw	low _dbuf
  5737   00197A  2463               	addwf	efgtoa@i^0,w,c
  5738   00197C  6ED9               	movwf	fsr2l,c
  5739   00197E  0E01               	movlw	high _dbuf
  5740   001980  2064               	addwfc	(efgtoa@i+1)^0,w,c
  5741   001982  6EDA               	movwf	fsr2h,c
  5742   001984  6ADF               	clrf	indf2,c
  5743   001986                     
  5744                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5745   001986  0E00               	movlw	low _dbuf
  5746   001988  6E42               	movwf	??_efgtoa^0,c
  5747   00198A  0E01               	movlw	high _dbuf
  5748   00198C  6E43               	movwf	(??_efgtoa+1)^0,c
  5749   00198E  506A               	movf	efgtoa@n^0,w,c
  5750   001990  5E42               	subwf	??_efgtoa^0,f,c
  5751   001992  506B               	movf	(efgtoa@n+1)^0,w,c
  5752   001994  5A43               	subwfb	(??_efgtoa+1)^0,f,c
  5753   001996  5063               	movf	efgtoa@i^0,w,c
  5754   001998  2442               	addwf	??_efgtoa^0,w,c
  5755   00199A  6E01               	movwf	memcpy@d1^0,c
  5756   00199C  5064               	movf	(efgtoa@i+1)^0,w,c
  5757   00199E  2043               	addwfc	(??_efgtoa+1)^0,w,c
  5758   0019A0  6E02               	movwf	(memcpy@d1+1)^0,c
  5759   0019A2  0E00               	movlw	low _dbuf
  5760   0019A4  6E03               	movwf	memcpy@s1^0,c
  5761   0019A6  0E01               	movlw	high _dbuf
  5762   0019A8  6E04               	movwf	(memcpy@s1+1)^0,c
  5763   0019AA  C06A  F005         	movff	efgtoa@n,memcpy@n
  5764   0019AE  C06B  F006         	movff	efgtoa@n+1,memcpy@n+1
  5765   0019B2  EC42  F024         	call	_memcpy	;wreg free
  5766   0019B6                     
  5767                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  5768   0019B6  506A               	movf	efgtoa@n^0,w,c
  5769   0019B8  5C63               	subwf	efgtoa@i^0,w,c
  5770   0019BA  6E6A               	movwf	efgtoa@n^0,c
  5771   0019BC  506B               	movf	(efgtoa@n+1)^0,w,c
  5772   0019BE  5864               	subwfb	(efgtoa@i+1)^0,w,c
  5773   0019C0  6E6B               	movwf	(efgtoa@n+1)^0,c
  5774   0019C2                     
  5775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  5776   0019C2  5065               	movf	efgtoa@sign^0,w,c
  5777   0019C4  A4D8               	btfss	status,2,c
  5778   0019C6  EFE7  F00C         	goto	u8591
  5779   0019CA  EFEA  F00C         	goto	u8590
  5780   0019CE                     u8591:
  5781   0019CE  0E01               	movlw	1
  5782   0019D0  EFEB  F00C         	goto	u8600
  5783   0019D4                     u8590:
  5784   0019D4  0E00               	movlw	0
  5785   0019D6                     u8600:
  5786   0019D6  6E63               	movwf	efgtoa@i^0,c
  5787   0019D8  6A64               	clrf	(efgtoa@i+1)^0,c
  5788   0019DA                     
  5789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  5790   0019DA  0100               	movlb	0	; () banked
  5791   0019DC  A394               	btfss	_flags& (0+255),1,b
  5792   0019DE  EFF3  F00C         	goto	u8611
  5793   0019E2  EFF5  F00C         	goto	u8610
  5794   0019E6                     u8611:
  5795   0019E6  EF23  F00D         	goto	l7355
  5796   0019EA                     u8610:
  5797   0019EA  EF05  F00D         	goto	l7351
  5798   0019EE                     l7347:
  5799                           
  5800                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  5801   0019EE  066A               	decf	efgtoa@n^0,f,c
  5802   0019F0  A0D8               	btfss	status,0,c
  5803   0019F2  066B               	decf	(efgtoa@n+1)^0,f,c
  5804   0019F4  0E00               	movlw	low _dbuf
  5805   0019F6  246A               	addwf	efgtoa@n^0,w,c
  5806   0019F8  6ED9               	movwf	fsr2l,c
  5807   0019FA  0E01               	movlw	high _dbuf
  5808   0019FC  206B               	addwfc	(efgtoa@n+1)^0,w,c
  5809   0019FE  6EDA               	movwf	fsr2h,c
  5810   001A00  0E30               	movlw	48
  5811   001A02  6EDF               	movwf	indf2,c
  5812   001A04                     
  5813                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 856:    w--;
  5814   001A04  0659               	decf	efgtoa@w^0,f,c
  5815   001A06  A0D8               	btfss	status,0,c
  5816   001A08  065A               	decf	(efgtoa@w+1)^0,f,c
  5817   001A0A                     l7351:
  5818                           
  5819                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  5820   001A0A  5059               	movf	efgtoa@w^0,w,c
  5821   001A0C  5C63               	subwf	efgtoa@i^0,w,c
  5822   001A0E  5064               	movf	(efgtoa@i+1)^0,w,c
  5823   001A10  0A80               	xorlw	128
  5824   001A12  6E42               	movwf	??_efgtoa^0,c
  5825   001A14  505A               	movf	(efgtoa@w+1)^0,w,c
  5826   001A16  0A80               	xorlw	128
  5827   001A18  5842               	subwfb	??_efgtoa^0,w,c
  5828   001A1A  B0D8               	btfsc	status,0,c
  5829   001A1C  EF12  F00D         	goto	u8621
  5830   001A20  EF14  F00D         	goto	u8620
  5831   001A24                     u8621:
  5832   001A24  EF23  F00D         	goto	l7355
  5833   001A28                     u8620:
  5834   001A28  506A               	movf	efgtoa@n^0,w,c
  5835   001A2A  5C63               	subwf	efgtoa@i^0,w,c
  5836   001A2C  5064               	movf	(efgtoa@i+1)^0,w,c
  5837   001A2E  0A80               	xorlw	128
  5838   001A30  6E42               	movwf	??_efgtoa^0,c
  5839   001A32  506B               	movf	(efgtoa@n+1)^0,w,c
  5840   001A34  0A80               	xorlw	128
  5841   001A36  5842               	subwfb	??_efgtoa^0,w,c
  5842   001A38  A0D8               	btfss	status,0,c
  5843   001A3A  EF21  F00D         	goto	u8631
  5844   001A3E  EF23  F00D         	goto	u8630
  5845   001A42                     u8631:
  5846   001A42  EFF7  F00C         	goto	l7347
  5847   001A46                     u8630:
  5848   001A46                     l7355:
  5849                           
  5850                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  5851   001A46  5065               	movf	efgtoa@sign^0,w,c
  5852   001A48  B4D8               	btfsc	status,2,c
  5853   001A4A  EF29  F00D         	goto	u8641
  5854   001A4E  EF2B  F00D         	goto	u8640
  5855   001A52                     u8641:
  5856   001A52  EF36  F00D         	goto	l7359
  5857   001A56                     u8640:
  5858   001A56                     
  5859                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  5860   001A56  066A               	decf	efgtoa@n^0,f,c
  5861   001A58  A0D8               	btfss	status,0,c
  5862   001A5A  066B               	decf	(efgtoa@n+1)^0,f,c
  5863   001A5C  0E00               	movlw	low _dbuf
  5864   001A5E  246A               	addwf	efgtoa@n^0,w,c
  5865   001A60  6ED9               	movwf	fsr2l,c
  5866   001A62  0E01               	movlw	high _dbuf
  5867   001A64  206B               	addwfc	(efgtoa@n+1)^0,w,c
  5868   001A66  6EDA               	movwf	fsr2h,c
  5869   001A68  C065  FFDF         	movff	efgtoa@sign,indf2
  5870   001A6C                     l7359:
  5871                           
  5872                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  5873   001A6C  5063               	movf	efgtoa@i^0,w,c
  5874   001A6E  5E59               	subwf	efgtoa@w^0,f,c
  5875   001A70  5064               	movf	(efgtoa@i+1)^0,w,c
  5876   001A72  5A5A               	subwfb	(efgtoa@w+1)^0,f,c
  5877   001A74                     
  5878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5879   001A74  C03C  F00F         	movff	efgtoa@fp,pad@fp
  5880   001A78  0E00               	movlw	low _dbuf
  5881   001A7A  246A               	addwf	efgtoa@n^0,w,c
  5882   001A7C  6E10               	movwf	pad@buf^0,c
  5883   001A7E  0E01               	movlw	high _dbuf
  5884   001A80  206B               	addwfc	(efgtoa@n+1)^0,w,c
  5885   001A82  6E11               	movwf	(pad@buf+1)^0,c
  5886   001A84  C059  F012         	movff	efgtoa@w,pad@p
  5887   001A88  C05A  F013         	movff	efgtoa@w+1,pad@p+1
  5888   001A8C  EC04  F023         	call	_pad	;wreg free
  5889   001A90                     l1324:
  5890   001A90  0012               	return		;funcret
  5891   001A92                     __end_of_efgtoa:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _strcpy *****************
  5895 ;; Defined at:
  5896 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5899 ;;		 -> dbuf(80), 
  5900 ;;  src             1    2[COMRAM] PTR const unsigned char 
  5901 ;;		 -> STR_14(4), STR_11(4), 
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  d               2    4[COMRAM] PTR unsigned char 
  5904 ;;		 -> dbuf(80), 
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  2    0[COMRAM] PTR unsigned char 
  5907 ;; Registers used:
  5908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5914 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;Total ram usage:        6 bytes
  5919 ;; Hardware stack levels used: 1
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_efgtoa
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text22
  5928   004A9C                     __ptext22:
  5929                           	callstack 0
  5930   004A9C                     _strcpy:
  5931                           	callstack 25
  5932   004A9C  C001  F005         	movff	strcpy@dest,strcpy@d
  5933   004AA0  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  5934   004AA4                     l7029:
  5935   004AA4  2A03               	incf	strcpy@src^0,f,c
  5936   004AA6  0403               	decf	strcpy@src^0,w,c
  5937   004AA8  6E04               	movwf	??_strcpy^0,c
  5938   004AAA  C004  FFF6         	movff	??_strcpy,tblptrl
  5939   004AAE                     	if	1	;There is more than 1 active tblptr byte
  5940   004AAE  0E10               	movlw	high __smallconst
  5941   004AB0  6EF7               	movwf	tblptrh,c
  5942   004AB2                     	endif
  5943   004AB2                     	if	0	;tblptru may be non-zero
  5944   004AB2                     	endif
  5945   004AB2                     	if	0	;tblptru may be non-zero
  5946   004AB2                     	endif
  5947   004AB2  C005  FFD9         	movff	strcpy@d,fsr2l
  5948   004AB6  C006  FFDA         	movff	strcpy@d+1,fsr2h
  5949   004ABA  4A05               	infsnz	strcpy@d^0,f,c
  5950   004ABC  2A06               	incf	(strcpy@d+1)^0,f,c
  5951   004ABE  0008               	tblrd		*
  5952   004AC0  CFF5 FFDF          	movff	tablat,indf2
  5953   004AC4  50DF               	movf	indf2,w,c
  5954   004AC6  A4D8               	btfss	status,2,c
  5955   004AC8  EF68  F025         	goto	u8051
  5956   004ACC  EF6A  F025         	goto	u8050
  5957   004AD0                     u8051:
  5958   004AD0  EF52  F025         	goto	l7029
  5959   004AD4                     u8050:
  5960   004AD4  0012               	return		;funcret
  5961   004AD6                     __end_of_strcpy:
  5962                           	callstack 0
  5963                           
  5964 ;; *************** function _memcpy *****************
  5965 ;; Defined at:
  5966 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  d1              2    0[COMRAM] PTR void 
  5969 ;;		 -> dbuf(80), 
  5970 ;;  s1              2    2[COMRAM] PTR const void 
  5971 ;;		 -> dbuf(80), 
  5972 ;;  n               2    4[COMRAM] unsigned int 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5975 ;;		 -> dbuf(80), 
  5976 ;;  d               2    7[COMRAM] PTR unsigned char 
  5977 ;;		 -> dbuf(80), 
  5978 ;;  tmp             1    6[COMRAM] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  2    0[COMRAM] PTR void 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5988 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;Total ram usage:       11 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_efgtoa
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text23
  6002   004884                     __ptext23:
  6003                           	callstack 0
  6004   004884                     _memcpy:
  6005                           	callstack 25
  6006   004884  C003  F00A         	movff	memcpy@s1,memcpy@s
  6007   004888  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  6008   00488C  C001  F008         	movff	memcpy@d1,memcpy@d
  6009   004890  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  6010   004894  EF5C  F024         	goto	l7077
  6011   004898                     l7069:
  6012   004898  C00A  FFD9         	movff	memcpy@s,fsr2l
  6013   00489C  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  6014   0048A0  50DF               	movf	indf2,w,c
  6015   0048A2  6E07               	movwf	memcpy@tmp^0,c
  6016   0048A4  4A0A               	infsnz	memcpy@s^0,f,c
  6017   0048A6  2A0B               	incf	(memcpy@s+1)^0,f,c
  6018   0048A8  C008  FFD9         	movff	memcpy@d,fsr2l
  6019   0048AC  C009  FFDA         	movff	memcpy@d+1,fsr2h
  6020   0048B0  C007  FFDF         	movff	memcpy@tmp,indf2
  6021   0048B4  4A08               	infsnz	memcpy@d^0,f,c
  6022   0048B6  2A09               	incf	(memcpy@d+1)^0,f,c
  6023   0048B8                     l7077:
  6024   0048B8  0605               	decf	memcpy@n^0,f,c
  6025   0048BA  A0D8               	btfss	status,0,c
  6026   0048BC  0606               	decf	(memcpy@n+1)^0,f,c
  6027   0048BE  2805               	incf	memcpy@n^0,w,c
  6028   0048C0  E106               	bnz	u8171
  6029   0048C2  2806               	incf	(memcpy@n+1)^0,w,c
  6030   0048C4  A4D8               	btfss	status,2,c
  6031   0048C6  EF67  F024         	goto	u8171
  6032   0048CA  EF69  F024         	goto	u8170
  6033   0048CE                     u8171:
  6034   0048CE  EF4C  F024         	goto	l7069
  6035   0048D2                     u8170:
  6036   0048D2  0012               	return		;funcret
  6037   0048D4                     __end_of_memcpy:
  6038                           	callstack 0
  6039                           
  6040 ;; *************** function _labs *****************
  6041 ;; Defined at:
  6042 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  a               4    0[COMRAM] long 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  4    0[COMRAM] long 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;Total ram usage:        8 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_efgtoa
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text24
  6070   0047DC                     __ptext24:
  6071                           	callstack 0
  6072   0047DC                     _labs:
  6073                           	callstack 25
  6074   0047DC  BE04               	btfsc	(labs@a+3)^0,7,c
  6075   0047DE  EFF3  F023         	goto	u8061
  6076   0047E2  EFF5  F023         	goto	u8060
  6077   0047E6                     u8061:
  6078   0047E6  EFFF  F023         	goto	l7035
  6079   0047EA                     u8060:
  6080   0047EA  C001  F001         	movff	labs@a,?_labs
  6081   0047EE  C002  F002         	movff	labs@a+1,?_labs+1
  6082   0047F2  C003  F003         	movff	labs@a+2,?_labs+2
  6083   0047F6  C004  F004         	movff	labs@a+3,?_labs+3
  6084   0047FA  EF18  F024         	goto	l1490
  6085   0047FE                     l7035:
  6086   0047FE  C001  F005         	movff	labs@a,??_labs
  6087   004802  C002  F006         	movff	labs@a+1,??_labs+1
  6088   004806  C003  F007         	movff	labs@a+2,??_labs+2
  6089   00480A  C004  F008         	movff	labs@a+3,??_labs+3
  6090   00480E  1E05               	comf	??_labs^0,f,c
  6091   004810  1E06               	comf	(??_labs+1)^0,f,c
  6092   004812  1E07               	comf	(??_labs+2)^0,f,c
  6093   004814  1E08               	comf	(??_labs+3)^0,f,c
  6094   004816  2A05               	incf	??_labs^0,f,c
  6095   004818  0E00               	movlw	0
  6096   00481A  2206               	addwfc	(??_labs+1)^0,f,c
  6097   00481C  2207               	addwfc	(??_labs+2)^0,f,c
  6098   00481E  2208               	addwfc	(??_labs+3)^0,f,c
  6099   004820  C005  F001         	movff	??_labs,?_labs
  6100   004824  C006  F002         	movff	??_labs+1,?_labs+1
  6101   004828  C007  F003         	movff	??_labs+2,?_labs+2
  6102   00482C  C008  F004         	movff	??_labs+3,?_labs+3
  6103   004830                     l1490:
  6104   004830  0012               	return		;funcret
  6105   004832                     __end_of_labs:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function _floorf *****************
  6109 ;; Defined at:
  6110 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  x               4   39[COMRAM] float 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  u               4   55[COMRAM] struct .
  6115 ;;  m               4   49[COMRAM] unsigned long 
  6116 ;;  e               2   53[COMRAM] int 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  4   39[COMRAM] float 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;Total ram usage:       20 bytes
  6131 ;; Hardware stack levels used: 1
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_efgtoa
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text25
  6140   002F0C                     __ptext25:
  6141                           	callstack 0
  6142   002F0C                     _floorf:
  6143                           	callstack 25
  6144   002F0C  C080  F038         	movff	floorf@F521,floorf@u
  6145   002F10  C081  F039         	movff	floorf@F521+1,floorf@u+1
  6146   002F14  C082  F03A         	movff	floorf@F521+2,floorf@u+2
  6147   002F18  C083  F03B         	movff	floorf@F521+3,floorf@u+3
  6148   002F1C  C028  F038         	movff	floorf@x,floorf@u
  6149   002F20  C029  F039         	movff	floorf@x+1,floorf@u+1
  6150   002F24  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  6151   002F28  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  6152   002F2C  0E81               	movlw	129
  6153   002F2E  6E2C               	movwf	??_floorf^0,c
  6154   002F30  0EFF               	movlw	255
  6155   002F32  6E2D               	movwf	(??_floorf+1)^0,c
  6156   002F34  C038  F02E         	movff	floorf@u,??_floorf+2
  6157   002F38  C039  F02F         	movff	floorf@u+1,??_floorf+3
  6158   002F3C  C03A  F030         	movff	floorf@u+2,??_floorf+4
  6159   002F40  C03B  F031         	movff	floorf@u+3,??_floorf+5
  6160   002F44  0E18               	movlw	24
  6161   002F46  EFAA  F017         	goto	u8070
  6162   002F4A                     u8075:
  6163   002F4A  90D8               	bcf	status,0,c
  6164   002F4C  3231               	rrcf	(??_floorf+5)^0,f,c
  6165   002F4E  3230               	rrcf	(??_floorf+4)^0,f,c
  6166   002F50  322F               	rrcf	(??_floorf+3)^0,f,c
  6167   002F52  322E               	rrcf	(??_floorf+2)^0,f,c
  6168   002F54                     u8070:
  6169   002F54  2EE8               	decfsz	wreg,f,c
  6170   002F56  EFA5  F017         	goto	u8075
  6171   002F5A  502E               	movf	(??_floorf+2)^0,w,c
  6172   002F5C  242C               	addwf	??_floorf^0,w,c
  6173   002F5E  6E36               	movwf	floorf@e^0,c
  6174   002F60  0E00               	movlw	0
  6175   002F62  202D               	addwfc	(??_floorf+1)^0,w,c
  6176   002F64  6E37               	movwf	(floorf@e+1)^0,c
  6177   002F66  BE37               	btfsc	(floorf@e+1)^0,7,c
  6178   002F68  EFBF  F017         	goto	u8081
  6179   002F6C  5037               	movf	(floorf@e+1)^0,w,c
  6180   002F6E  E109               	bnz	u8080
  6181   002F70  0E17               	movlw	23
  6182   002F72  5C36               	subwf	floorf@e^0,w,c
  6183   002F74  A0D8               	btfss	status,0,c
  6184   002F76  EFBF  F017         	goto	u8081
  6185   002F7A  EFC1  F017         	goto	u8080
  6186   002F7E                     u8081:
  6187   002F7E  EFCB  F017         	goto	l7045
  6188   002F82                     u8080:
  6189   002F82                     l7043:
  6190   002F82  C028  F028         	movff	floorf@x,?_floorf
  6191   002F86  C029  F029         	movff	floorf@x+1,?_floorf+1
  6192   002F8A  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  6193   002F8E  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  6194   002F92  EF8E  F018         	goto	l1476
  6195   002F96                     l7045:
  6196   002F96  BE37               	btfsc	(floorf@e+1)^0,7,c
  6197   002F98  EFD0  F017         	goto	u8091
  6198   002F9C  EFD2  F017         	goto	u8090
  6199   002FA0                     u8091:
  6200   002FA0  EF42  F018         	goto	l7055
  6201   002FA4                     u8090:
  6202   002FA4  C036  F02C         	movff	floorf@e,??_floorf
  6203   002FA8  0EFF               	movlw	255
  6204   002FAA  6E2D               	movwf	(??_floorf+1)^0,c
  6205   002FAC  0EFF               	movlw	255
  6206   002FAE  6E2E               	movwf	(??_floorf+2)^0,c
  6207   002FB0  0E7F               	movlw	127
  6208   002FB2  6E2F               	movwf	(??_floorf+3)^0,c
  6209   002FB4  0E00               	movlw	0
  6210   002FB6  6E30               	movwf	(??_floorf+4)^0,c
  6211   002FB8                     u8105:
  6212   002FB8  662C               	tstfsz	??_floorf^0,c
  6213   002FBA  EFE1  F017         	goto	u8106
  6214   002FBE  EFE9  F017         	goto	u8107
  6215   002FC2                     u8106:
  6216   002FC2  3430               	rlcf	(??_floorf+4)^0,w,c
  6217   002FC4  3230               	rrcf	(??_floorf+4)^0,f,c
  6218   002FC6  322F               	rrcf	(??_floorf+3)^0,f,c
  6219   002FC8  322E               	rrcf	(??_floorf+2)^0,f,c
  6220   002FCA  322D               	rrcf	(??_floorf+1)^0,f,c
  6221   002FCC  2E2C               	decfsz	??_floorf^0,f,c
  6222   002FCE  EFDC  F017         	goto	u8105
  6223   002FD2                     u8107:
  6224   002FD2  C02D  F032         	movff	??_floorf+1,floorf@m
  6225   002FD6  C02E  F033         	movff	??_floorf+2,floorf@m+1
  6226   002FDA  C02F  F034         	movff	??_floorf+3,floorf@m+2
  6227   002FDE  C030  F035         	movff	??_floorf+4,floorf@m+3
  6228   002FE2  5032               	movf	floorf@m^0,w,c
  6229   002FE4  1438               	andwf	floorf@u^0,w,c
  6230   002FE6  6E2C               	movwf	??_floorf^0,c
  6231   002FE8  5033               	movf	(floorf@m+1)^0,w,c
  6232   002FEA  1439               	andwf	(floorf@u+1)^0,w,c
  6233   002FEC  6E2D               	movwf	(??_floorf+1)^0,c
  6234   002FEE  5034               	movf	(floorf@m+2)^0,w,c
  6235   002FF0  143A               	andwf	(floorf@u+2)^0,w,c
  6236   002FF2  6E2E               	movwf	(??_floorf+2)^0,c
  6237   002FF4  5035               	movf	(floorf@m+3)^0,w,c
  6238   002FF6  143B               	andwf	(floorf@u+3)^0,w,c
  6239   002FF8  6E2F               	movwf	(??_floorf+3)^0,c
  6240   002FFA  502C               	movf	??_floorf^0,w,c
  6241   002FFC  102D               	iorwf	(??_floorf+1)^0,w,c
  6242   002FFE  102E               	iorwf	(??_floorf+2)^0,w,c
  6243   003000  102F               	iorwf	(??_floorf+3)^0,w,c
  6244   003002  A4D8               	btfss	status,2,c
  6245   003004  EF06  F018         	goto	u8111
  6246   003008  EF08  F018         	goto	u8110
  6247   00300C                     u8111:
  6248   00300C  EF0A  F018         	goto	l7051
  6249   003010                     u8110:
  6250   003010  EFC1  F017         	goto	l7043
  6251   003014                     l7051:
  6252   003014  C038  F02C         	movff	floorf@u,??_floorf
  6253   003018  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6254   00301C  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6255   003020  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6256   003024  0E20               	movlw	32
  6257   003026  EF1A  F018         	goto	u8120
  6258   00302A                     u8125:
  6259   00302A  90D8               	bcf	status,0,c
  6260   00302C  322F               	rrcf	(??_floorf+3)^0,f,c
  6261   00302E  322E               	rrcf	(??_floorf+2)^0,f,c
  6262   003030  322D               	rrcf	(??_floorf+1)^0,f,c
  6263   003032  322C               	rrcf	??_floorf^0,f,c
  6264   003034                     u8120:
  6265   003034  2EE8               	decfsz	wreg,f,c
  6266   003036  EF15  F018         	goto	u8125
  6267   00303A  502C               	movf	??_floorf^0,w,c
  6268   00303C  102D               	iorwf	(??_floorf+1)^0,w,c
  6269   00303E  102E               	iorwf	(??_floorf+2)^0,w,c
  6270   003040  102F               	iorwf	(??_floorf+3)^0,w,c
  6271   003042  B4D8               	btfsc	status,2,c
  6272   003044  EF26  F018         	goto	u8131
  6273   003048  EF28  F018         	goto	u8130
  6274   00304C                     u8131:
  6275   00304C  EF30  F018         	goto	l1479
  6276   003050                     u8130:
  6277   003050  5032               	movf	floorf@m^0,w,c
  6278   003052  2638               	addwf	floorf@u^0,f,c
  6279   003054  5033               	movf	(floorf@m+1)^0,w,c
  6280   003056  2239               	addwfc	(floorf@u+1)^0,f,c
  6281   003058  5034               	movf	(floorf@m+2)^0,w,c
  6282   00305A  223A               	addwfc	(floorf@u+2)^0,f,c
  6283   00305C  5035               	movf	(floorf@m+3)^0,w,c
  6284   00305E  223B               	addwfc	(floorf@u+3)^0,f,c
  6285   003060                     l1479:
  6286   003060  1C32               	comf	floorf@m^0,w,c
  6287   003062  6E2C               	movwf	??_floorf^0,c
  6288   003064  1C33               	comf	(floorf@m+1)^0,w,c
  6289   003066  6E2D               	movwf	(??_floorf+1)^0,c
  6290   003068  1C34               	comf	(floorf@m+2)^0,w,c
  6291   00306A  6E2E               	movwf	(??_floorf+2)^0,c
  6292   00306C  1C35               	comf	(floorf@m+3)^0,w,c
  6293   00306E  6E2F               	movwf	(??_floorf+3)^0,c
  6294   003070  502C               	movf	??_floorf^0,w,c
  6295   003072  1638               	andwf	floorf@u^0,f,c
  6296   003074  502D               	movf	(??_floorf+1)^0,w,c
  6297   003076  1639               	andwf	(floorf@u+1)^0,f,c
  6298   003078  502E               	movf	(??_floorf+2)^0,w,c
  6299   00307A  163A               	andwf	(floorf@u+2)^0,f,c
  6300   00307C  502F               	movf	(??_floorf+3)^0,w,c
  6301   00307E  163B               	andwf	(floorf@u+3)^0,f,c
  6302   003080  EF86  F018         	goto	l7063
  6303   003084                     l7055:
  6304   003084  C038  F02C         	movff	floorf@u,??_floorf
  6305   003088  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6306   00308C  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6307   003090  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6308   003094  0E20               	movlw	32
  6309   003096  EF52  F018         	goto	u8140
  6310   00309A                     u8145:
  6311   00309A  90D8               	bcf	status,0,c
  6312   00309C  322F               	rrcf	(??_floorf+3)^0,f,c
  6313   00309E  322E               	rrcf	(??_floorf+2)^0,f,c
  6314   0030A0  322D               	rrcf	(??_floorf+1)^0,f,c
  6315   0030A2  322C               	rrcf	??_floorf^0,f,c
  6316   0030A4                     u8140:
  6317   0030A4  2EE8               	decfsz	wreg,f,c
  6318   0030A6  EF4D  F018         	goto	u8145
  6319   0030AA  502C               	movf	??_floorf^0,w,c
  6320   0030AC  102D               	iorwf	(??_floorf+1)^0,w,c
  6321   0030AE  102E               	iorwf	(??_floorf+2)^0,w,c
  6322   0030B0  102F               	iorwf	(??_floorf+3)^0,w,c
  6323   0030B2  A4D8               	btfss	status,2,c
  6324   0030B4  EF5E  F018         	goto	u8151
  6325   0030B8  EF60  F018         	goto	u8150
  6326   0030BC                     u8151:
  6327   0030BC  EF6A  F018         	goto	l7059
  6328   0030C0                     u8150:
  6329   0030C0  0E00               	movlw	0
  6330   0030C2  6E38               	movwf	floorf@u^0,c
  6331   0030C4  0E00               	movlw	0
  6332   0030C6  6E39               	movwf	(floorf@u+1)^0,c
  6333   0030C8  0E00               	movlw	0
  6334   0030CA  6E3A               	movwf	(floorf@u+2)^0,c
  6335   0030CC  0E00               	movlw	0
  6336   0030CE  6E3B               	movwf	(floorf@u+3)^0,c
  6337   0030D0  EF86  F018         	goto	l7063
  6338   0030D4                     l7059:
  6339   0030D4  90D8               	bcf	status,0,c
  6340   0030D6  3438               	rlcf	floorf@u^0,w,c
  6341   0030D8  6E2C               	movwf	??_floorf^0,c
  6342   0030DA  3439               	rlcf	(floorf@u+1)^0,w,c
  6343   0030DC  6E2D               	movwf	(??_floorf+1)^0,c
  6344   0030DE  343A               	rlcf	(floorf@u+2)^0,w,c
  6345   0030E0  6E2E               	movwf	(??_floorf+2)^0,c
  6346   0030E2  343B               	rlcf	(floorf@u+3)^0,w,c
  6347   0030E4  6E2F               	movwf	(??_floorf+3)^0,c
  6348   0030E6  502C               	movf	??_floorf^0,w,c
  6349   0030E8  102D               	iorwf	(??_floorf+1)^0,w,c
  6350   0030EA  102E               	iorwf	(??_floorf+2)^0,w,c
  6351   0030EC  102F               	iorwf	(??_floorf+3)^0,w,c
  6352   0030EE  B4D8               	btfsc	status,2,c
  6353   0030F0  EF7C  F018         	goto	u8161
  6354   0030F4  EF7E  F018         	goto	u8160
  6355   0030F8                     u8161:
  6356   0030F8  EF86  F018         	goto	l7063
  6357   0030FC                     u8160:
  6358   0030FC  0E00               	movlw	0
  6359   0030FE  6E38               	movwf	floorf@u^0,c
  6360   003100  0E00               	movlw	0
  6361   003102  6E39               	movwf	(floorf@u+1)^0,c
  6362   003104  0E80               	movlw	128
  6363   003106  6E3A               	movwf	(floorf@u+2)^0,c
  6364   003108  0EBF               	movlw	191
  6365   00310A  6E3B               	movwf	(floorf@u+3)^0,c
  6366   00310C                     l7063:
  6367   00310C  C038  F028         	movff	floorf@u,?_floorf
  6368   003110  C039  F029         	movff	floorf@u+1,?_floorf+1
  6369   003114  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  6370   003118  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  6371   00311C                     l1476:
  6372   00311C  0012               	return		;funcret
  6373   00311E                     __end_of_floorf:
  6374                           	callstack 0
  6375                           
  6376 ;; *************** function ___fpclassifyf *****************
  6377 ;; Defined at:
  6378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  x               4    0[COMRAM] float 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  u               4   10[COMRAM] struct .
  6383 ;;  e               2    8[COMRAM] int 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  2    0[COMRAM] int 
  6386 ;; Registers used:
  6387 ;;		wreg, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6396 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6397 ;;Total ram usage:       14 bytes
  6398 ;; Hardware stack levels used: 1
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_efgtoa
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text26
  6407   003CB2                     __ptext26:
  6408                           	callstack 0
  6409   003CB2                     ___fpclassifyf:
  6410                           	callstack 25
  6411   003CB2  C084  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6412   003CB6  C085  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6413   003CBA  C086  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6414   003CBE  C087  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6415   003CC2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6416   003CC6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6417   003CCA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6418   003CCE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6419   003CD2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6420   003CD6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6421   003CDA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6422   003CDE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6423   003CE2  0E18               	movlw	24
  6424   003CE4  EF79  F01E         	goto	u7980
  6425   003CE8                     u7985:
  6426   003CE8  90D8               	bcf	status,0,c
  6427   003CEA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6428   003CEC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6429   003CEE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6430   003CF0  3205               	rrcf	??___fpclassifyf^0,f,c
  6431   003CF2                     u7980:
  6432   003CF2  2EE8               	decfsz	wreg,f,c
  6433   003CF4  EF74  F01E         	goto	u7985
  6434   003CF8  5005               	movf	??___fpclassifyf^0,w,c
  6435   003CFA  6E09               	movwf	___fpclassifyf@e^0,c
  6436   003CFC  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6437   003CFE  5009               	movf	___fpclassifyf@e^0,w,c
  6438   003D00  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6439   003D02  A4D8               	btfss	status,2,c
  6440   003D04  EF86  F01E         	goto	u7991
  6441   003D08  EF88  F01E         	goto	u7990
  6442   003D0C                     u7991:
  6443   003D0C  EFA8  F01E         	goto	l7017
  6444   003D10                     u7990:
  6445   003D10  90D8               	bcf	status,0,c
  6446   003D12  340B               	rlcf	___fpclassifyf@u^0,w,c
  6447   003D14  6E05               	movwf	??___fpclassifyf^0,c
  6448   003D16  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6449   003D18  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6450   003D1A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6451   003D1C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6452   003D1E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6453   003D20  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6454   003D22  5005               	movf	??___fpclassifyf^0,w,c
  6455   003D24  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6456   003D26  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6457   003D28  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6458   003D2A  A4D8               	btfss	status,2,c
  6459   003D2C  EF9A  F01E         	goto	u8001
  6460   003D30  EF9C  F01E         	goto	u8000
  6461   003D34                     u8001:
  6462   003D34  EFA2  F01E         	goto	l7013
  6463   003D38                     u8000:
  6464   003D38  0E00               	movlw	0
  6465   003D3A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6466   003D3C  0E02               	movlw	2
  6467   003D3E  6E01               	movwf	?___fpclassifyf^0,c
  6468   003D40  EFD7  F01E         	goto	l1462
  6469   003D44                     l7013:
  6470   003D44  0E00               	movlw	0
  6471   003D46  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6472   003D48  0E03               	movlw	3
  6473   003D4A  6E01               	movwf	?___fpclassifyf^0,c
  6474   003D4C  EFD7  F01E         	goto	l1462
  6475   003D50                     l7017:
  6476   003D50  2809               	incf	___fpclassifyf@e^0,w,c
  6477   003D52  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6478   003D54  A4D8               	btfss	status,2,c
  6479   003D56  EFAF  F01E         	goto	u8011
  6480   003D5A  EFB1  F01E         	goto	u8010
  6481   003D5E                     u8011:
  6482   003D5E  EFD3  F01E         	goto	l7023
  6483   003D62                     u8010:
  6484   003D62  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6485   003D66  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6486   003D6A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6487   003D6E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6488   003D72  0E09               	movlw	9
  6489   003D74                     u8025:
  6490   003D74  90D8               	bcf	status,0,c
  6491   003D76  3605               	rlcf	??___fpclassifyf^0,f,c
  6492   003D78  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6493   003D7A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6494   003D7C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6495   003D7E  2EE8               	decfsz	wreg,f,c
  6496   003D80  EFBA  F01E         	goto	u8025
  6497   003D84  5005               	movf	??___fpclassifyf^0,w,c
  6498   003D86  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6499   003D88  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6500   003D8A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6501   003D8C  B4D8               	btfsc	status,2,c
  6502   003D8E  EFCB  F01E         	goto	u8031
  6503   003D92  EFCE  F01E         	goto	u8030
  6504   003D96                     u8031:
  6505   003D96  0E01               	movlw	1
  6506   003D98  EFCF  F01E         	goto	u8040
  6507   003D9C                     u8030:
  6508   003D9C  0E00               	movlw	0
  6509   003D9E                     u8040:
  6510   003D9E  6E01               	movwf	?___fpclassifyf^0,c
  6511   003DA0  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6512   003DA2  EFD7  F01E         	goto	l1462
  6513   003DA6                     l7023:
  6514   003DA6  0E00               	movlw	0
  6515   003DA8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6516   003DAA  0E04               	movlw	4
  6517   003DAC  6E01               	movwf	?___fpclassifyf^0,c
  6518   003DAE                     l1462:
  6519   003DAE  0012               	return		;funcret
  6520   003DB0                     __end_of___fpclassifyf:
  6521                           	callstack 0
  6522                           
  6523 ;; *************** function ___fltol *****************
  6524 ;; Defined at:
  6525 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  f1              4    0[COMRAM] int 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  exp1            1    9[COMRAM] unsigned char 
  6530 ;;  sign1           1    8[COMRAM] unsigned char 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  4    0[COMRAM] long 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;Total ram usage:       10 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_efgtoa
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text27
  6554   003AA8                     __ptext27:
  6555                           	callstack 0
  6556   003AA8                     ___fltol:
  6557                           	callstack 25
  6558   003AA8  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6559   003AAA  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6560   003AAC  6E0A               	movwf	___fltol@exp1^0,c
  6561   003AAE  500A               	movf	___fltol@exp1^0,w,c
  6562   003AB0  A4D8               	btfss	status,2,c
  6563   003AB2  EF5D  F01D         	goto	u7851
  6564   003AB6  EF5F  F01D         	goto	u7850
  6565   003ABA                     u7851:
  6566   003ABA  EF69  F01D         	goto	l6935
  6567   003ABE                     u7850:
  6568   003ABE                     l6931:
  6569   003ABE  0E00               	movlw	0
  6570   003AC0  6E01               	movwf	?___fltol^0,c
  6571   003AC2  0E00               	movlw	0
  6572   003AC4  6E02               	movwf	(?___fltol+1)^0,c
  6573   003AC6  0E00               	movlw	0
  6574   003AC8  6E03               	movwf	(?___fltol+2)^0,c
  6575   003ACA  0E00               	movlw	0
  6576   003ACC  6E04               	movwf	(?___fltol+3)^0,c
  6577   003ACE  EFD6  F01D         	goto	l856
  6578   003AD2                     l6935:
  6579   003AD2  C001  F005         	movff	___fltol@f1,??___fltol
  6580   003AD6  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6581   003ADA  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6582   003ADE  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6583   003AE2  0E20               	movlw	32
  6584   003AE4  EF79  F01D         	goto	u7860
  6585   003AE8                     u7865:
  6586   003AE8  90D8               	bcf	status,0,c
  6587   003AEA  3208               	rrcf	(??___fltol+3)^0,f,c
  6588   003AEC  3207               	rrcf	(??___fltol+2)^0,f,c
  6589   003AEE  3206               	rrcf	(??___fltol+1)^0,f,c
  6590   003AF0  3205               	rrcf	??___fltol^0,f,c
  6591   003AF2                     u7860:
  6592   003AF2  2EE8               	decfsz	wreg,f,c
  6593   003AF4  EF74  F01D         	goto	u7865
  6594   003AF8  5005               	movf	??___fltol^0,w,c
  6595   003AFA  6E09               	movwf	___fltol@sign1^0,c
  6596   003AFC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6597   003AFE  0EFF               	movlw	255
  6598   003B00  1601               	andwf	___fltol@f1^0,f,c
  6599   003B02  0EFF               	movlw	255
  6600   003B04  1602               	andwf	(___fltol@f1+1)^0,f,c
  6601   003B06  0EFF               	movlw	255
  6602   003B08  1603               	andwf	(___fltol@f1+2)^0,f,c
  6603   003B0A  0E00               	movlw	0
  6604   003B0C  1604               	andwf	(___fltol@f1+3)^0,f,c
  6605   003B0E  0E96               	movlw	150
  6606   003B10  5E0A               	subwf	___fltol@exp1^0,f,c
  6607   003B12  BE0A               	btfsc	___fltol@exp1^0,7,c
  6608   003B14  EF90  F01D         	goto	u7870
  6609   003B18  EF8E  F01D         	goto	u7871
  6610   003B1C                     u7871:
  6611   003B1C  EFA6  F01D         	goto	l6955
  6612   003B20                     u7870:
  6613   003B20  500A               	movf	___fltol@exp1^0,w,c
  6614   003B22  0A80               	xorlw	128
  6615   003B24  0F97               	addlw	151
  6616   003B26  B0D8               	btfsc	status,0,c
  6617   003B28  EF98  F01D         	goto	u7881
  6618   003B2C  EF9A  F01D         	goto	u7880
  6619   003B30                     u7881:
  6620   003B30  EF9C  F01D         	goto	l6951
  6621   003B34                     u7880:
  6622   003B34  EF5F  F01D         	goto	l6931
  6623   003B38                     l6951:
  6624   003B38  90D8               	bcf	status,0,c
  6625   003B3A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6626   003B3C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6627   003B3E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6628   003B40  3201               	rrcf	___fltol@f1^0,f,c
  6629   003B42  3E0A               	incfsz	___fltol@exp1^0,f,c
  6630   003B44  EF9C  F01D         	goto	l6951
  6631   003B48  EFBE  F01D         	goto	l6965
  6632   003B4C                     l6955:
  6633   003B4C  0E1F               	movlw	31
  6634   003B4E  640A               	cpfsgt	___fltol@exp1^0,c
  6635   003B50  EFAC  F01D         	goto	u7891
  6636   003B54  EFAE  F01D         	goto	u7890
  6637   003B58                     u7891:
  6638   003B58  EFB6  F01D         	goto	l6963
  6639   003B5C                     u7890:
  6640   003B5C  EF5F  F01D         	goto	l6931
  6641   003B60                     l6961:
  6642   003B60  90D8               	bcf	status,0,c
  6643   003B62  3601               	rlcf	___fltol@f1^0,f,c
  6644   003B64  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6645   003B66  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6646   003B68  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6647   003B6A  060A               	decf	___fltol@exp1^0,f,c
  6648   003B6C                     l6963:
  6649   003B6C  500A               	movf	___fltol@exp1^0,w,c
  6650   003B6E  A4D8               	btfss	status,2,c
  6651   003B70  EFBC  F01D         	goto	u7901
  6652   003B74  EFBE  F01D         	goto	u7900
  6653   003B78                     u7901:
  6654   003B78  EFB0  F01D         	goto	l6961
  6655   003B7C                     u7900:
  6656   003B7C                     l6965:
  6657   003B7C  5009               	movf	___fltol@sign1^0,w,c
  6658   003B7E  B4D8               	btfsc	status,2,c
  6659   003B80  EFC4  F01D         	goto	u7911
  6660   003B84  EFC6  F01D         	goto	u7910
  6661   003B88                     u7911:
  6662   003B88  EFCE  F01D         	goto	l6969
  6663   003B8C                     u7910:
  6664   003B8C  1E04               	comf	(___fltol@f1+3)^0,f,c
  6665   003B8E  1E03               	comf	(___fltol@f1+2)^0,f,c
  6666   003B90  1E02               	comf	(___fltol@f1+1)^0,f,c
  6667   003B92  6C01               	negf	___fltol@f1^0,c
  6668   003B94  0E00               	movlw	0
  6669   003B96  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6670   003B98  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6671   003B9A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6672   003B9C                     l6969:
  6673   003B9C  C001  F001         	movff	___fltol@f1,?___fltol
  6674   003BA0  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6675   003BA4  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6676   003BA8  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6677   003BAC                     l856:
  6678   003BAC  0012               	return		;funcret
  6679   003BAE                     __end_of___fltol:
  6680                           	callstack 0
  6681                           
  6682 ;; *************** function ___flsub *****************
  6683 ;; Defined at:
  6684 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  b               4   25[COMRAM] long 
  6687 ;;  a               4   29[COMRAM] long 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  4   25[COMRAM] long 
  6692 ;; Registers used:
  6693 ;;		wreg, status,2, status,0, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6699 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;Total ram usage:        8 bytes
  6704 ;; Hardware stack levels used: 1
  6705 ;; Hardware stack levels required when called: 1
  6706 ;; This function calls:
  6707 ;;		___fladd
  6708 ;; This function is called by:
  6709 ;;		_efgtoa
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text28
  6714   0048D4                     __ptext28:
  6715                           	callstack 0
  6716   0048D4                     ___flsub:
  6717                           	callstack 24
  6718   0048D4  0E00               	movlw	0
  6719   0048D6  1A1E               	xorwf	___flsub@a^0,f,c
  6720   0048D8  0E00               	movlw	0
  6721   0048DA  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6722   0048DC  0E00               	movlw	0
  6723   0048DE  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6724   0048E0  0E80               	movlw	128
  6725   0048E2  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6726   0048E4  C01A  F001         	movff	___flsub@b,___fladd@b
  6727   0048E8  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6728   0048EC  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6729   0048F0  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6730   0048F4  C01E  F005         	movff	___flsub@a,___fladd@a
  6731   0048F8  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6732   0048FC  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6733   004900  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6734   004904  EC49  F00D         	call	___fladd	;wreg free
  6735   004908  C001  F01A         	movff	?___fladd,?___flsub
  6736   00490C  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6737   004910  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6738   004914  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6739   004918  0012               	return		;funcret
  6740   00491A                     __end_of___flsub:
  6741                           	callstack 0
  6742                           
  6743 ;; *************** function ___fladd *****************
  6744 ;; Defined at:
  6745 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  b               4    0[COMRAM] long 
  6748 ;;  a               4    4[COMRAM] long 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  grs             1   15[COMRAM] unsigned char 
  6751 ;;  bexp            1   14[COMRAM] unsigned char 
  6752 ;;  aexp            1   13[COMRAM] unsigned char 
  6753 ;;  signs           1   12[COMRAM] unsigned char 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  4    0[COMRAM] unsigned char 
  6756 ;; Registers used:
  6757 ;;		wreg, status,2, status,0
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6763 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;Total ram usage:       16 bytes
  6768 ;; Hardware stack levels used: 1
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		___flsub
  6773 ;;		_efgtoa
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           	psect	text29
  6778   001A92                     __ptext29:
  6779                           	callstack 0
  6780   001A92                     ___fladd:
  6781                           	callstack 24
  6782   001A92  5004               	movf	(___fladd@b+3)^0,w,c
  6783   001A94  0B80               	andlw	128
  6784   001A96  6E0D               	movwf	___fladd@signs^0,c
  6785   001A98  5004               	movf	(___fladd@b+3)^0,w,c
  6786   001A9A  2404               	addwf	(___fladd@b+3)^0,w,c
  6787   001A9C  6E0F               	movwf	___fladd@bexp^0,c
  6788   001A9E  AE03               	btfss	(___fladd@b+2)^0,7,c
  6789   001AA0  EF54  F00D         	goto	u6791
  6790   001AA4  EF56  F00D         	goto	u6790
  6791   001AA8                     u6791:
  6792   001AA8  EF57  F00D         	goto	l6297
  6793   001AAC                     u6790:
  6794   001AAC  800F               	bsf	___fladd@bexp^0,0,c
  6795   001AAE                     l6297:
  6796   001AAE  500F               	movf	___fladd@bexp^0,w,c
  6797   001AB0  B4D8               	btfsc	status,2,c
  6798   001AB2  EF5D  F00D         	goto	u6801
  6799   001AB6  EF5F  F00D         	goto	u6800
  6800   001ABA                     u6801:
  6801   001ABA  EF74  F00D         	goto	l6307
  6802   001ABE                     u6800:
  6803   001ABE  280F               	incf	___fladd@bexp^0,w,c
  6804   001AC0  A4D8               	btfss	status,2,c
  6805   001AC2  EF65  F00D         	goto	u6811
  6806   001AC6  EF67  F00D         	goto	u6810
  6807   001ACA                     u6811:
  6808   001ACA  EF6F  F00D         	goto	l6303
  6809   001ACE                     u6810:
  6810   001ACE  0E00               	movlw	0
  6811   001AD0  6E01               	movwf	___fladd@b^0,c
  6812   001AD2  0E00               	movlw	0
  6813   001AD4  6E02               	movwf	(___fladd@b+1)^0,c
  6814   001AD6  0E00               	movlw	0
  6815   001AD8  6E03               	movwf	(___fladd@b+2)^0,c
  6816   001ADA  0E00               	movlw	0
  6817   001ADC  6E04               	movwf	(___fladd@b+3)^0,c
  6818   001ADE                     l6303:
  6819   001ADE  8E03               	bsf	(___fladd@b+2)^0,7,c
  6820   001AE0  0E00               	movlw	0
  6821   001AE2  6E04               	movwf	(___fladd@b+3)^0,c
  6822   001AE4  EF7C  F00D         	goto	l6309
  6823   001AE8                     l6307:
  6824   001AE8  0E00               	movlw	0
  6825   001AEA  6E01               	movwf	___fladd@b^0,c
  6826   001AEC  0E00               	movlw	0
  6827   001AEE  6E02               	movwf	(___fladd@b+1)^0,c
  6828   001AF0  0E00               	movlw	0
  6829   001AF2  6E03               	movwf	(___fladd@b+2)^0,c
  6830   001AF4  0E00               	movlw	0
  6831   001AF6  6E04               	movwf	(___fladd@b+3)^0,c
  6832   001AF8                     l6309:
  6833   001AF8  5008               	movf	(___fladd@a+3)^0,w,c
  6834   001AFA  0B80               	andlw	128
  6835   001AFC  6E0E               	movwf	___fladd@aexp^0,c
  6836   001AFE  500D               	movf	___fladd@signs^0,w,c
  6837   001B00  180E               	xorwf	___fladd@aexp^0,w,c
  6838   001B02  B4D8               	btfsc	status,2,c
  6839   001B04  EF86  F00D         	goto	u6821
  6840   001B08  EF88  F00D         	goto	u6820
  6841   001B0C                     u6821:
  6842   001B0C  EF89  F00D         	goto	l6315
  6843   001B10                     u6820:
  6844   001B10  8C0D               	bsf	___fladd@signs^0,6,c
  6845   001B12                     l6315:
  6846   001B12  5008               	movf	(___fladd@a+3)^0,w,c
  6847   001B14  2408               	addwf	(___fladd@a+3)^0,w,c
  6848   001B16  6E0E               	movwf	___fladd@aexp^0,c
  6849   001B18  AE07               	btfss	(___fladd@a+2)^0,7,c
  6850   001B1A  EF91  F00D         	goto	u6831
  6851   001B1E  EF93  F00D         	goto	u6830
  6852   001B22                     u6831:
  6853   001B22  EF94  F00D         	goto	l6321
  6854   001B26                     u6830:
  6855   001B26  800E               	bsf	___fladd@aexp^0,0,c
  6856   001B28                     l6321:
  6857   001B28  500E               	movf	___fladd@aexp^0,w,c
  6858   001B2A  B4D8               	btfsc	status,2,c
  6859   001B2C  EF9A  F00D         	goto	u6841
  6860   001B30  EF9C  F00D         	goto	u6840
  6861   001B34                     u6841:
  6862   001B34  EFB1  F00D         	goto	l6331
  6863   001B38                     u6840:
  6864   001B38  280E               	incf	___fladd@aexp^0,w,c
  6865   001B3A  A4D8               	btfss	status,2,c
  6866   001B3C  EFA2  F00D         	goto	u6851
  6867   001B40  EFA4  F00D         	goto	u6850
  6868   001B44                     u6851:
  6869   001B44  EFAC  F00D         	goto	l6327
  6870   001B48                     u6850:
  6871   001B48  0E00               	movlw	0
  6872   001B4A  6E05               	movwf	___fladd@a^0,c
  6873   001B4C  0E00               	movlw	0
  6874   001B4E  6E06               	movwf	(___fladd@a+1)^0,c
  6875   001B50  0E00               	movlw	0
  6876   001B52  6E07               	movwf	(___fladd@a+2)^0,c
  6877   001B54  0E00               	movlw	0
  6878   001B56  6E08               	movwf	(___fladd@a+3)^0,c
  6879   001B58                     l6327:
  6880   001B58  8E07               	bsf	(___fladd@a+2)^0,7,c
  6881   001B5A  0E00               	movlw	0
  6882   001B5C  6E08               	movwf	(___fladd@a+3)^0,c
  6883   001B5E  EFB9  F00D         	goto	l6333
  6884   001B62                     l6331:
  6885   001B62  0E00               	movlw	0
  6886   001B64  6E05               	movwf	___fladd@a^0,c
  6887   001B66  0E00               	movlw	0
  6888   001B68  6E06               	movwf	(___fladd@a+1)^0,c
  6889   001B6A  0E00               	movlw	0
  6890   001B6C  6E07               	movwf	(___fladd@a+2)^0,c
  6891   001B6E  0E00               	movlw	0
  6892   001B70  6E08               	movwf	(___fladd@a+3)^0,c
  6893   001B72                     l6333:
  6894   001B72  500F               	movf	___fladd@bexp^0,w,c
  6895   001B74  5C0E               	subwf	___fladd@aexp^0,w,c
  6896   001B76  B0D8               	btfsc	status,0,c
  6897   001B78  EFC0  F00D         	goto	u6861
  6898   001B7C  EFC2  F00D         	goto	u6860
  6899   001B80                     u6861:
  6900   001B80  EFE9  F00D         	goto	l6369
  6901   001B84                     u6860:
  6902   001B84  AC0D               	btfss	___fladd@signs^0,6,c
  6903   001B86  EFC7  F00D         	goto	u6871
  6904   001B8A  EFC9  F00D         	goto	u6870
  6905   001B8E                     u6871:
  6906   001B8E  EFCB  F00D         	goto	l6339
  6907   001B92                     u6870:
  6908   001B92  0E80               	movlw	128
  6909   001B94  1A0D               	xorwf	___fladd@signs^0,f,c
  6910   001B96                     l6339:
  6911   001B96  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6912   001B9A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6913   001B9E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6914   001BA2  C001  F010         	movff	___fladd@b,___fladd@grs
  6915   001BA6  C005  F001         	movff	___fladd@a,___fladd@b
  6916   001BAA  C010  F005         	movff	___fladd@grs,___fladd@a
  6917   001BAE  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6918   001BB2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6919   001BB6  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6920   001BBA  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6921   001BBE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6922   001BC2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6923   001BC6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6924   001BCA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6925   001BCE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6926   001BD2                     l6369:
  6927   001BD2  0E00               	movlw	0
  6928   001BD4  6E10               	movwf	___fladd@grs^0,c
  6929   001BD6  500F               	movf	___fladd@bexp^0,w,c
  6930   001BD8  C00E  F009         	movff	___fladd@aexp,??___fladd
  6931   001BDC  6A0A               	clrf	(??___fladd+1)^0,c
  6932   001BDE  5E09               	subwf	??___fladd^0,f,c
  6933   001BE0  0E00               	movlw	0
  6934   001BE2  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6935   001BE4  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6936   001BE6  EFFE  F00D         	goto	u6881
  6937   001BEA  500A               	movf	(??___fladd+1)^0,w,c
  6938   001BEC  E109               	bnz	u6880
  6939   001BEE  0E1A               	movlw	26
  6940   001BF0  5C09               	subwf	??___fladd^0,w,c
  6941   001BF2  A0D8               	btfss	status,0,c
  6942   001BF4  EFFE  F00D         	goto	u6881
  6943   001BF8  EF00  F00E         	goto	u6880
  6944   001BFC                     u6881:
  6945   001BFC  EF37  F00E         	goto	l1088
  6946   001C00                     u6880:
  6947   001C00  5001               	movf	___fladd@b^0,w,c
  6948   001C02  1002               	iorwf	(___fladd@b+1)^0,w,c
  6949   001C04  1003               	iorwf	(___fladd@b+2)^0,w,c
  6950   001C06  1004               	iorwf	(___fladd@b+3)^0,w,c
  6951   001C08  A4D8               	btfss	status,2,c
  6952   001C0A  EF09  F00E         	goto	u6891
  6953   001C0E  EF0C  F00E         	goto	u6890
  6954   001C12                     u6891:
  6955   001C12  0E01               	movlw	1
  6956   001C14  EF0D  F00E         	goto	u6900
  6957   001C18                     u6890:
  6958   001C18  0E00               	movlw	0
  6959   001C1A                     u6900:
  6960   001C1A  6E10               	movwf	___fladd@grs^0,c
  6961   001C1C  0E00               	movlw	0
  6962   001C1E  6E01               	movwf	___fladd@b^0,c
  6963   001C20  0E00               	movlw	0
  6964   001C22  6E02               	movwf	(___fladd@b+1)^0,c
  6965   001C24  0E00               	movlw	0
  6966   001C26  6E03               	movwf	(___fladd@b+2)^0,c
  6967   001C28  0E00               	movlw	0
  6968   001C2A  6E04               	movwf	(___fladd@b+3)^0,c
  6969   001C2C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6970   001C30  EF40  F00E         	goto	l1087
  6971   001C34                     l1089:
  6972   001C34  A010               	btfss	___fladd@grs^0,0,c
  6973   001C36  EF1F  F00E         	goto	u6911
  6974   001C3A  EF21  F00E         	goto	u6910
  6975   001C3E                     u6911:
  6976   001C3E  EF27  F00E         	goto	l6381
  6977   001C42                     u6910:
  6978   001C42  90D8               	bcf	status,0,c
  6979   001C44  3010               	rrcf	___fladd@grs^0,w,c
  6980   001C46  0901               	iorlw	1
  6981   001C48  6E10               	movwf	___fladd@grs^0,c
  6982   001C4A  EF29  F00E         	goto	l6383
  6983   001C4E                     l6381:
  6984   001C4E  90D8               	bcf	status,0,c
  6985   001C50  3210               	rrcf	___fladd@grs^0,f,c
  6986   001C52                     l6383:
  6987   001C52  A001               	btfss	___fladd@b^0,0,c
  6988   001C54  EF2E  F00E         	goto	u6921
  6989   001C58  EF30  F00E         	goto	u6920
  6990   001C5C                     u6921:
  6991   001C5C  EF31  F00E         	goto	l6387
  6992   001C60                     u6920:
  6993   001C60  8E10               	bsf	___fladd@grs^0,7,c
  6994   001C62                     l6387:
  6995   001C62  3404               	rlcf	(___fladd@b+3)^0,w,c
  6996   001C64  3204               	rrcf	(___fladd@b+3)^0,f,c
  6997   001C66  3203               	rrcf	(___fladd@b+2)^0,f,c
  6998   001C68  3202               	rrcf	(___fladd@b+1)^0,f,c
  6999   001C6A  3201               	rrcf	___fladd@b^0,f,c
  7000   001C6C  2A0F               	incf	___fladd@bexp^0,f,c
  7001   001C6E                     l1088:
  7002   001C6E  500E               	movf	___fladd@aexp^0,w,c
  7003   001C70  5C0F               	subwf	___fladd@bexp^0,w,c
  7004   001C72  A0D8               	btfss	status,0,c
  7005   001C74  EF3E  F00E         	goto	u6931
  7006   001C78  EF40  F00E         	goto	u6930
  7007   001C7C                     u6931:
  7008   001C7C  EF1A  F00E         	goto	l1089
  7009   001C80                     u6930:
  7010   001C80                     l1087:
  7011   001C80  BC0D               	btfsc	___fladd@signs^0,6,c
  7012   001C82  EF45  F00E         	goto	u6941
  7013   001C86  EF47  F00E         	goto	u6940
  7014   001C8A                     u6941:
  7015   001C8A  EF87  F00E         	goto	l6415
  7016   001C8E                     u6940:
  7017   001C8E  500F               	movf	___fladd@bexp^0,w,c
  7018   001C90  A4D8               	btfss	status,2,c
  7019   001C92  EF4D  F00E         	goto	u6951
  7020   001C96  EF4F  F00E         	goto	u6950
  7021   001C9A                     u6951:
  7022   001C9A  EF59  F00E         	goto	l6397
  7023   001C9E                     u6950:
  7024   001C9E  0E00               	movlw	0
  7025   001CA0  6E01               	movwf	?___fladd^0,c
  7026   001CA2  0E00               	movlw	0
  7027   001CA4  6E02               	movwf	(?___fladd+1)^0,c
  7028   001CA6  0E00               	movlw	0
  7029   001CA8  6E03               	movwf	(?___fladd+2)^0,c
  7030   001CAA  0E00               	movlw	0
  7031   001CAC  6E04               	movwf	(?___fladd+3)^0,c
  7032   001CAE  EFA8  F00F         	goto	l1096
  7033   001CB2                     l6397:
  7034   001CB2  5005               	movf	___fladd@a^0,w,c
  7035   001CB4  2601               	addwf	___fladd@b^0,f,c
  7036   001CB6  5006               	movf	(___fladd@a+1)^0,w,c
  7037   001CB8  2202               	addwfc	(___fladd@b+1)^0,f,c
  7038   001CBA  5007               	movf	(___fladd@a+2)^0,w,c
  7039   001CBC  2203               	addwfc	(___fladd@b+2)^0,f,c
  7040   001CBE  5008               	movf	(___fladd@a+3)^0,w,c
  7041   001CC0  2204               	addwfc	(___fladd@b+3)^0,f,c
  7042   001CC2  A004               	btfss	(___fladd@b+3)^0,0,c
  7043   001CC4  EF66  F00E         	goto	u6961
  7044   001CC8  EF68  F00E         	goto	u6960
  7045   001CCC                     u6961:
  7046   001CCC  EF14  F00F         	goto	l6451
  7047   001CD0                     u6960:
  7048   001CD0  A010               	btfss	___fladd@grs^0,0,c
  7049   001CD2  EF6D  F00E         	goto	u6971
  7050   001CD6  EF6F  F00E         	goto	u6970
  7051   001CDA                     u6971:
  7052   001CDA  EF75  F00E         	goto	l6405
  7053   001CDE                     u6970:
  7054   001CDE  90D8               	bcf	status,0,c
  7055   001CE0  3010               	rrcf	___fladd@grs^0,w,c
  7056   001CE2  0901               	iorlw	1
  7057   001CE4  6E10               	movwf	___fladd@grs^0,c
  7058   001CE6  EF77  F00E         	goto	l6407
  7059   001CEA                     l6405:
  7060   001CEA  90D8               	bcf	status,0,c
  7061   001CEC  3210               	rrcf	___fladd@grs^0,f,c
  7062   001CEE                     l6407:
  7063   001CEE  A001               	btfss	___fladd@b^0,0,c
  7064   001CF0  EF7C  F00E         	goto	u6981
  7065   001CF4  EF7E  F00E         	goto	u6980
  7066   001CF8                     u6981:
  7067   001CF8  EF7F  F00E         	goto	l6411
  7068   001CFC                     u6980:
  7069   001CFC  8E10               	bsf	___fladd@grs^0,7,c
  7070   001CFE                     l6411:
  7071   001CFE  3404               	rlcf	(___fladd@b+3)^0,w,c
  7072   001D00  3204               	rrcf	(___fladd@b+3)^0,f,c
  7073   001D02  3203               	rrcf	(___fladd@b+2)^0,f,c
  7074   001D04  3202               	rrcf	(___fladd@b+1)^0,f,c
  7075   001D06  3201               	rrcf	___fladd@b^0,f,c
  7076   001D08  2A0F               	incf	___fladd@bexp^0,f,c
  7077   001D0A  EF14  F00F         	goto	l6451
  7078   001D0E                     l6415:
  7079   001D0E  5005               	movf	___fladd@a^0,w,c
  7080   001D10  5C01               	subwf	___fladd@b^0,w,c
  7081   001D12  5006               	movf	(___fladd@a+1)^0,w,c
  7082   001D14  5802               	subwfb	(___fladd@b+1)^0,w,c
  7083   001D16  5007               	movf	(___fladd@a+2)^0,w,c
  7084   001D18  5803               	subwfb	(___fladd@b+2)^0,w,c
  7085   001D1A  5004               	movf	(___fladd@b+3)^0,w,c
  7086   001D1C  0A80               	xorlw	128
  7087   001D1E  6E09               	movwf	??___fladd^0,c
  7088   001D20  5008               	movf	(___fladd@a+3)^0,w,c
  7089   001D22  0A80               	xorlw	128
  7090   001D24  5809               	subwfb	??___fladd^0,w,c
  7091   001D26  B0D8               	btfsc	status,0,c
  7092   001D28  EF98  F00E         	goto	u6991
  7093   001D2C  EF9A  F00E         	goto	u6990
  7094   001D30                     u6991:
  7095   001D30  EFC5  F00E         	goto	l6425
  7096   001D34                     u6990:
  7097   001D34  5001               	movf	___fladd@b^0,w,c
  7098   001D36  5C05               	subwf	___fladd@a^0,w,c
  7099   001D38  6E09               	movwf	??___fladd^0,c
  7100   001D3A  5002               	movf	(___fladd@b+1)^0,w,c
  7101   001D3C  5806               	subwfb	(___fladd@a+1)^0,w,c
  7102   001D3E  6E0A               	movwf	(??___fladd+1)^0,c
  7103   001D40  5003               	movf	(___fladd@b+2)^0,w,c
  7104   001D42  5807               	subwfb	(___fladd@a+2)^0,w,c
  7105   001D44  6E0B               	movwf	(??___fladd+2)^0,c
  7106   001D46  5004               	movf	(___fladd@b+3)^0,w,c
  7107   001D48  5808               	subwfb	(___fladd@a+3)^0,w,c
  7108   001D4A  6E0C               	movwf	(??___fladd+3)^0,c
  7109   001D4C  0EFF               	movlw	255
  7110   001D4E  2409               	addwf	??___fladd^0,w,c
  7111   001D50  6E01               	movwf	___fladd@b^0,c
  7112   001D52  0EFF               	movlw	255
  7113   001D54  200A               	addwfc	(??___fladd+1)^0,w,c
  7114   001D56  6E02               	movwf	(___fladd@b+1)^0,c
  7115   001D58  0EFF               	movlw	255
  7116   001D5A  200B               	addwfc	(??___fladd+2)^0,w,c
  7117   001D5C  6E03               	movwf	(___fladd@b+2)^0,c
  7118   001D5E  0EFF               	movlw	255
  7119   001D60  200C               	addwfc	(??___fladd+3)^0,w,c
  7120   001D62  6E04               	movwf	(___fladd@b+3)^0,c
  7121   001D64  0E80               	movlw	128
  7122   001D66  1A0D               	xorwf	___fladd@signs^0,f,c
  7123   001D68  6C10               	negf	___fladd@grs^0,c
  7124   001D6A  5010               	movf	___fladd@grs^0,w,c
  7125   001D6C  A4D8               	btfss	status,2,c
  7126   001D6E  EFBB  F00E         	goto	u7001
  7127   001D72  EFBD  F00E         	goto	u7000
  7128   001D76                     u7001:
  7129   001D76  EFCD  F00E         	goto	l1104
  7130   001D7A                     u7000:
  7131   001D7A  0E01               	movlw	1
  7132   001D7C  2601               	addwf	___fladd@b^0,f,c
  7133   001D7E  0E00               	movlw	0
  7134   001D80  2202               	addwfc	(___fladd@b+1)^0,f,c
  7135   001D82  2203               	addwfc	(___fladd@b+2)^0,f,c
  7136   001D84  2204               	addwfc	(___fladd@b+3)^0,f,c
  7137   001D86  EFCD  F00E         	goto	l1104
  7138   001D8A                     l6425:
  7139   001D8A  5005               	movf	___fladd@a^0,w,c
  7140   001D8C  5E01               	subwf	___fladd@b^0,f,c
  7141   001D8E  5006               	movf	(___fladd@a+1)^0,w,c
  7142   001D90  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7143   001D92  5007               	movf	(___fladd@a+2)^0,w,c
  7144   001D94  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7145   001D96  5008               	movf	(___fladd@a+3)^0,w,c
  7146   001D98  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7147   001D9A                     l1104:
  7148   001D9A  5001               	movf	___fladd@b^0,w,c
  7149   001D9C  1002               	iorwf	(___fladd@b+1)^0,w,c
  7150   001D9E  1003               	iorwf	(___fladd@b+2)^0,w,c
  7151   001DA0  1004               	iorwf	(___fladd@b+3)^0,w,c
  7152   001DA2  A4D8               	btfss	status,2,c
  7153   001DA4  EFD6  F00E         	goto	u7011
  7154   001DA8  EFD8  F00E         	goto	u7010
  7155   001DAC                     u7011:
  7156   001DAC  EF0D  F00F         	goto	l6449
  7157   001DB0                     u7010:
  7158   001DB0  5010               	movf	___fladd@grs^0,w,c
  7159   001DB2  A4D8               	btfss	status,2,c
  7160   001DB4  EFDE  F00E         	goto	u7021
  7161   001DB8  EFE0  F00E         	goto	u7020
  7162   001DBC                     u7021:
  7163   001DBC  EF0D  F00F         	goto	l6449
  7164   001DC0                     u7020:
  7165   001DC0  0E00               	movlw	0
  7166   001DC2  6E01               	movwf	?___fladd^0,c
  7167   001DC4  0E00               	movlw	0
  7168   001DC6  6E02               	movwf	(?___fladd+1)^0,c
  7169   001DC8  0E00               	movlw	0
  7170   001DCA  6E03               	movwf	(?___fladd+2)^0,c
  7171   001DCC  0E00               	movlw	0
  7172   001DCE  6E04               	movwf	(?___fladd+3)^0,c
  7173   001DD0  EFA8  F00F         	goto	l1096
  7174   001DD4                     l6433:
  7175   001DD4  90D8               	bcf	status,0,c
  7176   001DD6  3601               	rlcf	___fladd@b^0,f,c
  7177   001DD8  3602               	rlcf	(___fladd@b+1)^0,f,c
  7178   001DDA  3603               	rlcf	(___fladd@b+2)^0,f,c
  7179   001DDC  3604               	rlcf	(___fladd@b+3)^0,f,c
  7180   001DDE  AE10               	btfss	___fladd@grs^0,7,c
  7181   001DE0  EFF4  F00E         	goto	u7031
  7182   001DE4  EFF6  F00E         	goto	u7030
  7183   001DE8                     u7031:
  7184   001DE8  EFF7  F00E         	goto	l6439
  7185   001DEC                     u7030:
  7186   001DEC  8001               	bsf	___fladd@b^0,0,c
  7187   001DEE                     l6439:
  7188   001DEE  A010               	btfss	___fladd@grs^0,0,c
  7189   001DF0  EFFC  F00E         	goto	u7041
  7190   001DF4  EFFE  F00E         	goto	u7040
  7191   001DF8                     u7041:
  7192   001DF8  EF02  F00F         	goto	l6443
  7193   001DFC                     u7040:
  7194   001DFC  80D8               	bsf	status,0,c
  7195   001DFE  3610               	rlcf	___fladd@grs^0,f,c
  7196   001E00  EF04  F00F         	goto	l6445
  7197   001E04                     l6443:
  7198   001E04  90D8               	bcf	status,0,c
  7199   001E06  3610               	rlcf	___fladd@grs^0,f,c
  7200   001E08                     l6445:
  7201   001E08  500F               	movf	___fladd@bexp^0,w,c
  7202   001E0A  B4D8               	btfsc	status,2,c
  7203   001E0C  EF0A  F00F         	goto	u7051
  7204   001E10  EF0C  F00F         	goto	u7050
  7205   001E14                     u7051:
  7206   001E14  EF0D  F00F         	goto	l6449
  7207   001E18                     u7050:
  7208   001E18  060F               	decf	___fladd@bexp^0,f,c
  7209   001E1A                     l6449:
  7210   001E1A  AE03               	btfss	(___fladd@b+2)^0,7,c
  7211   001E1C  EF12  F00F         	goto	u7061
  7212   001E20  EF14  F00F         	goto	u7060
  7213   001E24                     u7061:
  7214   001E24  EFEA  F00E         	goto	l6433
  7215   001E28                     u7060:
  7216   001E28                     l6451:
  7217   001E28  0E00               	movlw	0
  7218   001E2A  6E0E               	movwf	___fladd@aexp^0,c
  7219   001E2C  AE10               	btfss	___fladd@grs^0,7,c
  7220   001E2E  EF1B  F00F         	goto	u7071
  7221   001E32  EF1D  F00F         	goto	u7070
  7222   001E36                     u7071:
  7223   001E36  EF35  F00F         	goto	l1113
  7224   001E3A                     u7070:
  7225   001E3A  C010  F009         	movff	___fladd@grs,??___fladd
  7226   001E3E  0E7F               	movlw	127
  7227   001E40  1609               	andwf	??___fladd^0,f,c
  7228   001E42  B4D8               	btfsc	status,2,c
  7229   001E44  EF26  F00F         	goto	u7081
  7230   001E48  EF28  F00F         	goto	u7080
  7231   001E4C                     u7081:
  7232   001E4C  EF2C  F00F         	goto	l1114
  7233   001E50                     u7080:
  7234   001E50                     l6457:
  7235   001E50  0E01               	movlw	1
  7236   001E52  6E0E               	movwf	___fladd@aexp^0,c
  7237   001E54  EF35  F00F         	goto	l1113
  7238   001E58                     l1114:
  7239   001E58  A001               	btfss	___fladd@b^0,0,c
  7240   001E5A  EF31  F00F         	goto	u7091
  7241   001E5E  EF33  F00F         	goto	u7090
  7242   001E62                     u7091:
  7243   001E62  EF35  F00F         	goto	l1113
  7244   001E66                     u7090:
  7245   001E66  EF28  F00F         	goto	l6457
  7246   001E6A                     l1113:
  7247   001E6A  500E               	movf	___fladd@aexp^0,w,c
  7248   001E6C  B4D8               	btfsc	status,2,c
  7249   001E6E  EF3B  F00F         	goto	u7101
  7250   001E72  EF3D  F00F         	goto	u7100
  7251   001E76                     u7101:
  7252   001E76  EF68  F00F         	goto	l6469
  7253   001E7A                     u7100:
  7254   001E7A  0E01               	movlw	1
  7255   001E7C  2601               	addwf	___fladd@b^0,f,c
  7256   001E7E  0E00               	movlw	0
  7257   001E80  2202               	addwfc	(___fladd@b+1)^0,f,c
  7258   001E82  2203               	addwfc	(___fladd@b+2)^0,f,c
  7259   001E84  2204               	addwfc	(___fladd@b+3)^0,f,c
  7260   001E86  A004               	btfss	(___fladd@b+3)^0,0,c
  7261   001E88  EF48  F00F         	goto	u7111
  7262   001E8C  EF4A  F00F         	goto	u7110
  7263   001E90                     u7111:
  7264   001E90  EF68  F00F         	goto	l6469
  7265   001E94                     u7110:
  7266   001E94  C001  F009         	movff	___fladd@b,??___fladd
  7267   001E98  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7268   001E9C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7269   001EA0  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7270   001EA4  340C               	rlcf	(??___fladd+3)^0,w,c
  7271   001EA6  320C               	rrcf	(??___fladd+3)^0,f,c
  7272   001EA8  320B               	rrcf	(??___fladd+2)^0,f,c
  7273   001EAA  320A               	rrcf	(??___fladd+1)^0,f,c
  7274   001EAC  3209               	rrcf	??___fladd^0,f,c
  7275   001EAE  C009  F001         	movff	??___fladd,___fladd@b
  7276   001EB2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7277   001EB6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7278   001EBA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7279   001EBE  280F               	incf	___fladd@bexp^0,w,c
  7280   001EC0  B4D8               	btfsc	status,2,c
  7281   001EC2  EF65  F00F         	goto	u7121
  7282   001EC6  EF67  F00F         	goto	u7120
  7283   001ECA                     u7121:
  7284   001ECA  EF68  F00F         	goto	l6469
  7285   001ECE                     u7120:
  7286   001ECE  2A0F               	incf	___fladd@bexp^0,f,c
  7287   001ED0                     l6469:
  7288   001ED0  280F               	incf	___fladd@bexp^0,w,c
  7289   001ED2  B4D8               	btfsc	status,2,c
  7290   001ED4  EF6E  F00F         	goto	u7131
  7291   001ED8  EF70  F00F         	goto	u7130
  7292   001EDC                     u7131:
  7293   001EDC  EF78  F00F         	goto	l6473
  7294   001EE0                     u7130:
  7295   001EE0  500F               	movf	___fladd@bexp^0,w,c
  7296   001EE2  A4D8               	btfss	status,2,c
  7297   001EE4  EF76  F00F         	goto	u7141
  7298   001EE8  EF78  F00F         	goto	u7140
  7299   001EEC                     u7141:
  7300   001EEC  EF8A  F00F         	goto	l6477
  7301   001EF0                     u7140:
  7302   001EF0                     l6473:
  7303   001EF0  0E00               	movlw	0
  7304   001EF2  6E01               	movwf	___fladd@b^0,c
  7305   001EF4  0E00               	movlw	0
  7306   001EF6  6E02               	movwf	(___fladd@b+1)^0,c
  7307   001EF8  0E00               	movlw	0
  7308   001EFA  6E03               	movwf	(___fladd@b+2)^0,c
  7309   001EFC  0E00               	movlw	0
  7310   001EFE  6E04               	movwf	(___fladd@b+3)^0,c
  7311   001F00  500F               	movf	___fladd@bexp^0,w,c
  7312   001F02  A4D8               	btfss	status,2,c
  7313   001F04  EF86  F00F         	goto	u7151
  7314   001F08  EF88  F00F         	goto	u7150
  7315   001F0C                     u7151:
  7316   001F0C  EF8A  F00F         	goto	l6477
  7317   001F10                     u7150:
  7318   001F10  0E00               	movlw	0
  7319   001F12  6E0D               	movwf	___fladd@signs^0,c
  7320   001F14                     l6477:
  7321   001F14  A00F               	btfss	___fladd@bexp^0,0,c
  7322   001F16  EF8F  F00F         	goto	u7161
  7323   001F1A  EF91  F00F         	goto	u7160
  7324   001F1E                     u7161:
  7325   001F1E  EF94  F00F         	goto	l6481
  7326   001F22                     u7160:
  7327   001F22  8E03               	bsf	(___fladd@b+2)^0,7,c
  7328   001F24  EF95  F00F         	goto	l6483
  7329   001F28                     l6481:
  7330   001F28  9E03               	bcf	(___fladd@b+2)^0,7,c
  7331   001F2A                     l6483:
  7332   001F2A  90D8               	bcf	status,0,c
  7333   001F2C  300F               	rrcf	___fladd@bexp^0,w,c
  7334   001F2E  6E04               	movwf	(___fladd@b+3)^0,c
  7335   001F30  AE0D               	btfss	___fladd@signs^0,7,c
  7336   001F32  EF9D  F00F         	goto	u7171
  7337   001F36  EF9F  F00F         	goto	u7170
  7338   001F3A                     u7171:
  7339   001F3A  EFA0  F00F         	goto	l6489
  7340   001F3E                     u7170:
  7341   001F3E  8E04               	bsf	(___fladd@b+3)^0,7,c
  7342   001F40                     l6489:
  7343   001F40  C001  F001         	movff	___fladd@b,?___fladd
  7344   001F44  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7345   001F48  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7346   001F4C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7347   001F50                     l1096:
  7348   001F50  0012               	return		;funcret
  7349   001F52                     __end_of___fladd:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function ___flneg *****************
  7353 ;; Defined at:
  7354 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  f1              4    0[COMRAM] unsigned char 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;		None
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  4    0[COMRAM] unsigned char 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;Total ram usage:        4 bytes
  7373 ;; Hardware stack levels used: 1
  7374 ;; This function calls:
  7375 ;;		Nothing
  7376 ;; This function is called by:
  7377 ;;		_efgtoa
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           	psect	text30
  7382   004AD6                     __ptext30:
  7383                           	callstack 0
  7384   004AD6                     ___flneg:
  7385                           	callstack 25
  7386   004AD6  5001               	movf	___flneg@f1^0,w,c
  7387   004AD8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7388   004ADA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7389   004ADC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7390   004ADE  B4D8               	btfsc	status,2,c
  7391   004AE0  EF74  F025         	goto	u7841
  7392   004AE4  EF76  F025         	goto	u7840
  7393   004AE8                     u7841:
  7394   004AE8  EF7E  F025         	goto	l6925
  7395   004AEC                     u7840:
  7396   004AEC  0E00               	movlw	0
  7397   004AEE  1A01               	xorwf	___flneg@f1^0,f,c
  7398   004AF0  0E00               	movlw	0
  7399   004AF2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7400   004AF4  0E00               	movlw	0
  7401   004AF6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7402   004AF8  0E80               	movlw	128
  7403   004AFA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7404   004AFC                     l6925:
  7405   004AFC  C001  F001         	movff	___flneg@f1,?___flneg
  7406   004B00  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7407   004B04  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7408   004B08  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7409   004B0C  0012               	return		;funcret
  7410   004B0E                     __end_of___flneg:
  7411                           	callstack 0
  7412                           
  7413 ;; *************** function ___flmul *****************
  7414 ;; Defined at:
  7415 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  b               4    0[COMRAM] unsigned char 
  7418 ;;  a               4    4[COMRAM] unsigned char 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;  prod            4   19[COMRAM] struct .
  7421 ;;  grs             4   14[COMRAM] unsigned long 
  7422 ;;  temp            2   23[COMRAM] struct .
  7423 ;;  bexp            1   18[COMRAM] unsigned char 
  7424 ;;  aexp            1   13[COMRAM] unsigned char 
  7425 ;;  sign            1   12[COMRAM] unsigned char 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  4    0[COMRAM] unsigned char 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0, prodl, prodh
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7435 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;Total ram usage:       25 bytes
  7440 ;; Hardware stack levels used: 1
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_efgtoa
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text31
  7449   001F52                     __ptext31:
  7450                           	callstack 0
  7451   001F52                     ___flmul:
  7452                           	callstack 25
  7453   001F52  5004               	movf	(___flmul@b+3)^0,w,c
  7454   001F54  0B80               	andlw	128
  7455   001F56  6E0D               	movwf	___flmul@sign^0,c
  7456   001F58  5004               	movf	(___flmul@b+3)^0,w,c
  7457   001F5A  2404               	addwf	(___flmul@b+3)^0,w,c
  7458   001F5C  6E13               	movwf	___flmul@bexp^0,c
  7459   001F5E  AE03               	btfss	(___flmul@b+2)^0,7,c
  7460   001F60  EFB4  F00F         	goto	u7571
  7461   001F64  EFB6  F00F         	goto	u7570
  7462   001F68                     u7571:
  7463   001F68  EFB7  F00F         	goto	l6753
  7464   001F6C                     u7570:
  7465   001F6C  8013               	bsf	___flmul@bexp^0,0,c
  7466   001F6E                     l6753:
  7467   001F6E  5013               	movf	___flmul@bexp^0,w,c
  7468   001F70  B4D8               	btfsc	status,2,c
  7469   001F72  EFBD  F00F         	goto	u7581
  7470   001F76  EFBF  F00F         	goto	u7580
  7471   001F7A                     u7581:
  7472   001F7A  EFD2  F00F         	goto	l6761
  7473   001F7E                     u7580:
  7474   001F7E  2813               	incf	___flmul@bexp^0,w,c
  7475   001F80  A4D8               	btfss	status,2,c
  7476   001F82  EFC5  F00F         	goto	u7591
  7477   001F86  EFC7  F00F         	goto	u7590
  7478   001F8A                     u7591:
  7479   001F8A  EFCF  F00F         	goto	l6759
  7480   001F8E                     u7590:
  7481   001F8E  0E00               	movlw	0
  7482   001F90  6E01               	movwf	___flmul@b^0,c
  7483   001F92  0E00               	movlw	0
  7484   001F94  6E02               	movwf	(___flmul@b+1)^0,c
  7485   001F96  0E00               	movlw	0
  7486   001F98  6E03               	movwf	(___flmul@b+2)^0,c
  7487   001F9A  0E00               	movlw	0
  7488   001F9C  6E04               	movwf	(___flmul@b+3)^0,c
  7489   001F9E                     l6759:
  7490   001F9E  8E03               	bsf	(___flmul@b+2)^0,7,c
  7491   001FA0  EFDA  F00F         	goto	l6763
  7492   001FA4                     l6761:
  7493   001FA4  0E00               	movlw	0
  7494   001FA6  6E01               	movwf	___flmul@b^0,c
  7495   001FA8  0E00               	movlw	0
  7496   001FAA  6E02               	movwf	(___flmul@b+1)^0,c
  7497   001FAC  0E00               	movlw	0
  7498   001FAE  6E03               	movwf	(___flmul@b+2)^0,c
  7499   001FB0  0E00               	movlw	0
  7500   001FB2  6E04               	movwf	(___flmul@b+3)^0,c
  7501   001FB4                     l6763:
  7502   001FB4  5008               	movf	(___flmul@a+3)^0,w,c
  7503   001FB6  0B80               	andlw	128
  7504   001FB8  1A0D               	xorwf	___flmul@sign^0,f,c
  7505   001FBA  5008               	movf	(___flmul@a+3)^0,w,c
  7506   001FBC  2408               	addwf	(___flmul@a+3)^0,w,c
  7507   001FBE  6E0E               	movwf	___flmul@aexp^0,c
  7508   001FC0  AE07               	btfss	(___flmul@a+2)^0,7,c
  7509   001FC2  EFE5  F00F         	goto	u7601
  7510   001FC6  EFE7  F00F         	goto	u7600
  7511   001FCA                     u7601:
  7512   001FCA  EFE8  F00F         	goto	l6771
  7513   001FCE                     u7600:
  7514   001FCE  800E               	bsf	___flmul@aexp^0,0,c
  7515   001FD0                     l6771:
  7516   001FD0  500E               	movf	___flmul@aexp^0,w,c
  7517   001FD2  B4D8               	btfsc	status,2,c
  7518   001FD4  EFEE  F00F         	goto	u7611
  7519   001FD8  EFF0  F00F         	goto	u7610
  7520   001FDC                     u7611:
  7521   001FDC  EF03  F010         	goto	l6779
  7522   001FE0                     u7610:
  7523   001FE0  280E               	incf	___flmul@aexp^0,w,c
  7524   001FE2  A4D8               	btfss	status,2,c
  7525   001FE4  EFF6  F00F         	goto	u7621
  7526   001FE8  EFF8  F00F         	goto	u7620
  7527   001FEC                     u7621:
  7528   001FEC  EF00  F010         	goto	l6777
  7529   001FF0                     u7620:
  7530   001FF0  0E00               	movlw	0
  7531   001FF2  6E05               	movwf	___flmul@a^0,c
  7532   001FF4  0E00               	movlw	0
  7533   001FF6  6E06               	movwf	(___flmul@a+1)^0,c
  7534   001FF8  0E00               	movlw	0
  7535   001FFA  6E07               	movwf	(___flmul@a+2)^0,c
  7536   001FFC  0E00               	movlw	0
  7537   001FFE  6E08               	movwf	(___flmul@a+3)^0,c
  7538   002000                     l6777:
  7539   002000  8E07               	bsf	(___flmul@a+2)^0,7,c
  7540   002002  EF0B  F010         	goto	l1173
  7541   002006                     l6779:
  7542   002006  0E00               	movlw	0
  7543   002008  6E05               	movwf	___flmul@a^0,c
  7544   00200A  0E00               	movlw	0
  7545   00200C  6E06               	movwf	(___flmul@a+1)^0,c
  7546   00200E  0E00               	movlw	0
  7547   002010  6E07               	movwf	(___flmul@a+2)^0,c
  7548   002012  0E00               	movlw	0
  7549   002014  6E08               	movwf	(___flmul@a+3)^0,c
  7550   002016                     l1173:
  7551   002016  500E               	movf	___flmul@aexp^0,w,c
  7552   002018  B4D8               	btfsc	status,2,c
  7553   00201A  EF11  F010         	goto	u7631
  7554   00201E  EF13  F010         	goto	u7630
  7555   002022                     u7631:
  7556   002022  EF1B  F010         	goto	l6783
  7557   002026                     u7630:
  7558   002026  5013               	movf	___flmul@bexp^0,w,c
  7559   002028  A4D8               	btfss	status,2,c
  7560   00202A  EF19  F010         	goto	u7641
  7561   00202E  EF1B  F010         	goto	u7640
  7562   002032                     u7641:
  7563   002032  EF25  F010         	goto	l6787
  7564   002036                     u7640:
  7565   002036                     l6783:
  7566   002036  0E00               	movlw	0
  7567   002038  6E01               	movwf	?___flmul^0,c
  7568   00203A  0E00               	movlw	0
  7569   00203C  6E02               	movwf	(?___flmul+1)^0,c
  7570   00203E  0E00               	movlw	0
  7571   002040  6E03               	movwf	(?___flmul+2)^0,c
  7572   002042  0E00               	movlw	0
  7573   002044  6E04               	movwf	(?___flmul+3)^0,c
  7574   002046  EFBD  F011         	goto	l1177
  7575   00204A                     l6787:
  7576   00204A  5007               	movf	(___flmul@a+2)^0,w,c
  7577   00204C  0201               	mulwf	___flmul@b^0,c
  7578   00204E  CFF3 F018          	movff	prodl,___flmul@temp
  7579   002052  CFF4 F019          	movff	prodh,___flmul@temp+1
  7580   002056  5018               	movf	___flmul@temp^0,w,c
  7581   002058  6E0F               	movwf	___flmul@grs^0,c
  7582   00205A  6A10               	clrf	(___flmul@grs+1)^0,c
  7583   00205C  6A11               	clrf	(___flmul@grs+2)^0,c
  7584   00205E  6A12               	clrf	(___flmul@grs+3)^0,c
  7585   002060  5019               	movf	(___flmul@temp+1)^0,w,c
  7586   002062  6E14               	movwf	___flmul@prod^0,c
  7587   002064  6A15               	clrf	(___flmul@prod+1)^0,c
  7588   002066  6A16               	clrf	(___flmul@prod+2)^0,c
  7589   002068  6A17               	clrf	(___flmul@prod+3)^0,c
  7590   00206A  5006               	movf	(___flmul@a+1)^0,w,c
  7591   00206C  0202               	mulwf	(___flmul@b+1)^0,c
  7592   00206E  CFF3 F018          	movff	prodl,___flmul@temp
  7593   002072  CFF4 F019          	movff	prodh,___flmul@temp+1
  7594   002076  5018               	movf	___flmul@temp^0,w,c
  7595   002078  260F               	addwf	___flmul@grs^0,f,c
  7596   00207A  0E00               	movlw	0
  7597   00207C  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7598   00207E  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7599   002080  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7600   002082  5019               	movf	(___flmul@temp+1)^0,w,c
  7601   002084  2614               	addwf	___flmul@prod^0,f,c
  7602   002086  0E00               	movlw	0
  7603   002088  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7604   00208A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7605   00208C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7606   00208E  5005               	movf	___flmul@a^0,w,c
  7607   002090  0203               	mulwf	(___flmul@b+2)^0,c
  7608   002092  CFF3 F018          	movff	prodl,___flmul@temp
  7609   002096  CFF4 F019          	movff	prodh,___flmul@temp+1
  7610   00209A  5018               	movf	___flmul@temp^0,w,c
  7611   00209C  260F               	addwf	___flmul@grs^0,f,c
  7612   00209E  0E00               	movlw	0
  7613   0020A0  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7614   0020A2  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7615   0020A4  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7616   0020A6  5019               	movf	(___flmul@temp+1)^0,w,c
  7617   0020A8  2614               	addwf	___flmul@prod^0,f,c
  7618   0020AA  0E00               	movlw	0
  7619   0020AC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7620   0020AE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7621   0020B0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7622   0020B2  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  7623   0020B6  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  7624   0020BA  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  7625   0020BE  6A0F               	clrf	___flmul@grs^0,c
  7626   0020C0  5005               	movf	___flmul@a^0,w,c
  7627   0020C2  0202               	mulwf	(___flmul@b+1)^0,c
  7628   0020C4  CFF3 F018          	movff	prodl,___flmul@temp
  7629   0020C8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7630   0020CC  5018               	movf	___flmul@temp^0,w,c
  7631   0020CE  260F               	addwf	___flmul@grs^0,f,c
  7632   0020D0  5019               	movf	(___flmul@temp+1)^0,w,c
  7633   0020D2  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7634   0020D4  0E00               	movlw	0
  7635   0020D6  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7636   0020D8  0E00               	movlw	0
  7637   0020DA  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7638   0020DC  5006               	movf	(___flmul@a+1)^0,w,c
  7639   0020DE  0201               	mulwf	___flmul@b^0,c
  7640   0020E0  CFF3 F018          	movff	prodl,___flmul@temp
  7641   0020E4  CFF4 F019          	movff	prodh,___flmul@temp+1
  7642   0020E8  5018               	movf	___flmul@temp^0,w,c
  7643   0020EA  260F               	addwf	___flmul@grs^0,f,c
  7644   0020EC  5019               	movf	(___flmul@temp+1)^0,w,c
  7645   0020EE  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7646   0020F0  0E00               	movlw	0
  7647   0020F2  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7648   0020F4  0E00               	movlw	0
  7649   0020F6  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7650   0020F8  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  7651   0020FC  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  7652   002100  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  7653   002104  6A0F               	clrf	___flmul@grs^0,c
  7654   002106  5005               	movf	___flmul@a^0,w,c
  7655   002108  0201               	mulwf	___flmul@b^0,c
  7656   00210A  CFF3 F018          	movff	prodl,___flmul@temp
  7657   00210E  CFF4 F019          	movff	prodh,___flmul@temp+1
  7658   002112  5018               	movf	___flmul@temp^0,w,c
  7659   002114  260F               	addwf	___flmul@grs^0,f,c
  7660   002116  5019               	movf	(___flmul@temp+1)^0,w,c
  7661   002118  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7662   00211A  0E00               	movlw	0
  7663   00211C  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7664   00211E  0E00               	movlw	0
  7665   002120  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7666   002122  5007               	movf	(___flmul@a+2)^0,w,c
  7667   002124  0202               	mulwf	(___flmul@b+1)^0,c
  7668   002126  CFF3 F018          	movff	prodl,___flmul@temp
  7669   00212A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7670   00212E  5018               	movf	___flmul@temp^0,w,c
  7671   002130  2614               	addwf	___flmul@prod^0,f,c
  7672   002132  5019               	movf	(___flmul@temp+1)^0,w,c
  7673   002134  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7674   002136  0E00               	movlw	0
  7675   002138  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7676   00213A  0E00               	movlw	0
  7677   00213C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7678   00213E  5006               	movf	(___flmul@a+1)^0,w,c
  7679   002140  0203               	mulwf	(___flmul@b+2)^0,c
  7680   002142  CFF3 F018          	movff	prodl,___flmul@temp
  7681   002146  CFF4 F019          	movff	prodh,___flmul@temp+1
  7682   00214A  5018               	movf	___flmul@temp^0,w,c
  7683   00214C  2614               	addwf	___flmul@prod^0,f,c
  7684   00214E  5019               	movf	(___flmul@temp+1)^0,w,c
  7685   002150  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7686   002152  0E00               	movlw	0
  7687   002154  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7688   002156  0E00               	movlw	0
  7689   002158  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7690   00215A  5007               	movf	(___flmul@a+2)^0,w,c
  7691   00215C  0203               	mulwf	(___flmul@b+2)^0,c
  7692   00215E  CFF3 F018          	movff	prodl,___flmul@temp
  7693   002162  CFF4 F019          	movff	prodh,___flmul@temp+1
  7694   002166  5018               	movf	___flmul@temp^0,w,c
  7695   002168  6E09               	movwf	??___flmul^0,c
  7696   00216A  5019               	movf	(___flmul@temp+1)^0,w,c
  7697   00216C  6E0A               	movwf	(??___flmul+1)^0,c
  7698   00216E  6A0B               	clrf	(??___flmul+2)^0,c
  7699   002170  6A0C               	clrf	(??___flmul+3)^0,c
  7700   002172  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7701   002176  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7702   00217A  C009  F00A         	movff	??___flmul,??___flmul+1
  7703   00217E  6A09               	clrf	??___flmul^0,c
  7704   002180  5009               	movf	??___flmul^0,w,c
  7705   002182  2614               	addwf	___flmul@prod^0,f,c
  7706   002184  500A               	movf	(??___flmul+1)^0,w,c
  7707   002186  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7708   002188  500B               	movf	(??___flmul+2)^0,w,c
  7709   00218A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7710   00218C  500C               	movf	(??___flmul+3)^0,w,c
  7711   00218E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7712   002190  C00F  F009         	movff	___flmul@grs,??___flmul
  7713   002194  C010  F00A         	movff	___flmul@grs+1,??___flmul+1
  7714   002198  C011  F00B         	movff	___flmul@grs+2,??___flmul+2
  7715   00219C  C012  F00C         	movff	___flmul@grs+3,??___flmul+3
  7716   0021A0  0E19               	movlw	25
  7717   0021A2  EFD8  F010         	goto	u7650
  7718   0021A6                     u7655:
  7719   0021A6  90D8               	bcf	status,0,c
  7720   0021A8  320C               	rrcf	(??___flmul+3)^0,f,c
  7721   0021AA  320B               	rrcf	(??___flmul+2)^0,f,c
  7722   0021AC  320A               	rrcf	(??___flmul+1)^0,f,c
  7723   0021AE  3209               	rrcf	??___flmul^0,f,c
  7724   0021B0                     u7650:
  7725   0021B0  2EE8               	decfsz	wreg,f,c
  7726   0021B2  EFD3  F010         	goto	u7655
  7727   0021B6  5009               	movf	??___flmul^0,w,c
  7728   0021B8  2614               	addwf	___flmul@prod^0,f,c
  7729   0021BA  500A               	movf	(??___flmul+1)^0,w,c
  7730   0021BC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7731   0021BE  500B               	movf	(??___flmul+2)^0,w,c
  7732   0021C0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7733   0021C2  500C               	movf	(??___flmul+3)^0,w,c
  7734   0021C4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7735   0021C6  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  7736   0021CA  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  7737   0021CE  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  7738   0021D2  6A0F               	clrf	___flmul@grs^0,c
  7739   0021D4  500E               	movf	___flmul@aexp^0,w,c
  7740   0021D6  C013  F009         	movff	___flmul@bexp,??___flmul
  7741   0021DA  6A0A               	clrf	(??___flmul+1)^0,c
  7742   0021DC  2609               	addwf	??___flmul^0,f,c
  7743   0021DE  0E00               	movlw	0
  7744   0021E0  220A               	addwfc	(??___flmul+1)^0,f,c
  7745   0021E2  0E82               	movlw	130
  7746   0021E4  2409               	addwf	??___flmul^0,w,c
  7747   0021E6  6E18               	movwf	___flmul@temp^0,c
  7748   0021E8  0EFF               	movlw	255
  7749   0021EA  200A               	addwfc	(??___flmul+1)^0,w,c
  7750   0021EC  6E19               	movwf	(___flmul@temp+1)^0,c
  7751   0021EE  EF0E  F011         	goto	l6835
  7752   0021F2                     l6829:
  7753   0021F2  90D8               	bcf	status,0,c
  7754   0021F4  3614               	rlcf	___flmul@prod^0,f,c
  7755   0021F6  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7756   0021F8  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7757   0021FA  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7758   0021FC  AE12               	btfss	(___flmul@grs+3)^0,7,c
  7759   0021FE  EF03  F011         	goto	u7661
  7760   002202  EF05  F011         	goto	u7660
  7761   002206                     u7661:
  7762   002206  EF06  F011         	goto	l1180
  7763   00220A                     u7660:
  7764   00220A  8014               	bsf	___flmul@prod^0,0,c
  7765   00220C                     l1180:
  7766   00220C  90D8               	bcf	status,0,c
  7767   00220E  360F               	rlcf	___flmul@grs^0,f,c
  7768   002210  3610               	rlcf	(___flmul@grs+1)^0,f,c
  7769   002212  3611               	rlcf	(___flmul@grs+2)^0,f,c
  7770   002214  3612               	rlcf	(___flmul@grs+3)^0,f,c
  7771   002216  0618               	decf	___flmul@temp^0,f,c
  7772   002218  A0D8               	btfss	status,0,c
  7773   00221A  0619               	decf	(___flmul@temp+1)^0,f,c
  7774   00221C                     l6835:
  7775   00221C  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7776   00221E  EF13  F011         	goto	u7671
  7777   002222  EF15  F011         	goto	u7670
  7778   002226                     u7671:
  7779   002226  EFF9  F010         	goto	l6829
  7780   00222A                     u7670:
  7781   00222A  0E00               	movlw	0
  7782   00222C  6E0E               	movwf	___flmul@aexp^0,c
  7783   00222E  AE12               	btfss	(___flmul@grs+3)^0,7,c
  7784   002230  EF1C  F011         	goto	u7681
  7785   002234  EF1E  F011         	goto	u7680
  7786   002238                     u7681:
  7787   002238  EF42  F011         	goto	l1182
  7788   00223C                     u7680:
  7789   00223C  0EFF               	movlw	255
  7790   00223E  140F               	andwf	___flmul@grs^0,w,c
  7791   002240  6E09               	movwf	??___flmul^0,c
  7792   002242  0EFF               	movlw	255
  7793   002244  1410               	andwf	(___flmul@grs+1)^0,w,c
  7794   002246  6E0A               	movwf	(??___flmul+1)^0,c
  7795   002248  0EFF               	movlw	255
  7796   00224A  1411               	andwf	(___flmul@grs+2)^0,w,c
  7797   00224C  6E0B               	movwf	(??___flmul+2)^0,c
  7798   00224E  0E7F               	movlw	127
  7799   002250  1412               	andwf	(___flmul@grs+3)^0,w,c
  7800   002252  6E0C               	movwf	(??___flmul+3)^0,c
  7801   002254  5009               	movf	??___flmul^0,w,c
  7802   002256  100A               	iorwf	(??___flmul+1)^0,w,c
  7803   002258  100B               	iorwf	(??___flmul+2)^0,w,c
  7804   00225A  100C               	iorwf	(??___flmul+3)^0,w,c
  7805   00225C  B4D8               	btfsc	status,2,c
  7806   00225E  EF33  F011         	goto	u7691
  7807   002262  EF35  F011         	goto	u7690
  7808   002266                     u7691:
  7809   002266  EF39  F011         	goto	l1183
  7810   00226A                     u7690:
  7811   00226A                     l6843:
  7812   00226A  0E01               	movlw	1
  7813   00226C  6E0E               	movwf	___flmul@aexp^0,c
  7814   00226E  EF42  F011         	goto	l1182
  7815   002272                     l1183:
  7816   002272  A014               	btfss	___flmul@prod^0,0,c
  7817   002274  EF3E  F011         	goto	u7701
  7818   002278  EF40  F011         	goto	u7700
  7819   00227C                     u7701:
  7820   00227C  EF42  F011         	goto	l1182
  7821   002280                     u7700:
  7822   002280  EF35  F011         	goto	l6843
  7823   002284                     l1182:
  7824   002284  500E               	movf	___flmul@aexp^0,w,c
  7825   002286  B4D8               	btfsc	status,2,c
  7826   002288  EF48  F011         	goto	u7711
  7827   00228C  EF4A  F011         	goto	u7710
  7828   002290                     u7711:
  7829   002290  EF6E  F011         	goto	l6855
  7830   002294                     u7710:
  7831   002294  0E01               	movlw	1
  7832   002296  2614               	addwf	___flmul@prod^0,f,c
  7833   002298  0E00               	movlw	0
  7834   00229A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7835   00229C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7836   00229E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7837   0022A0  A017               	btfss	(___flmul@prod+3)^0,0,c
  7838   0022A2  EF55  F011         	goto	u7721
  7839   0022A6  EF57  F011         	goto	u7720
  7840   0022AA                     u7721:
  7841   0022AA  EF6E  F011         	goto	l6855
  7842   0022AE                     u7720:
  7843   0022AE  C014  F009         	movff	___flmul@prod,??___flmul
  7844   0022B2  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7845   0022B6  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7846   0022BA  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7847   0022BE  340C               	rlcf	(??___flmul+3)^0,w,c
  7848   0022C0  320C               	rrcf	(??___flmul+3)^0,f,c
  7849   0022C2  320B               	rrcf	(??___flmul+2)^0,f,c
  7850   0022C4  320A               	rrcf	(??___flmul+1)^0,f,c
  7851   0022C6  3209               	rrcf	??___flmul^0,f,c
  7852   0022C8  C009  F014         	movff	??___flmul,___flmul@prod
  7853   0022CC  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7854   0022D0  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7855   0022D4  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7856   0022D8  4A18               	infsnz	___flmul@temp^0,f,c
  7857   0022DA  2A19               	incf	(___flmul@temp+1)^0,f,c
  7858   0022DC                     l6855:
  7859   0022DC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7860   0022DE  EF79  F011         	goto	u7731
  7861   0022E2  5019               	movf	(___flmul@temp+1)^0,w,c
  7862   0022E4  E108               	bnz	u7730
  7863   0022E6  2818               	incf	___flmul@temp^0,w,c
  7864   0022E8  A0D8               	btfss	status,0,c
  7865   0022EA  EF79  F011         	goto	u7731
  7866   0022EE  EF7B  F011         	goto	u7730
  7867   0022F2                     u7731:
  7868   0022F2  EF85  F011         	goto	l6859
  7869   0022F6                     u7730:
  7870   0022F6  0E00               	movlw	0
  7871   0022F8  6E14               	movwf	___flmul@prod^0,c
  7872   0022FA  0E00               	movlw	0
  7873   0022FC  6E15               	movwf	(___flmul@prod+1)^0,c
  7874   0022FE  0E80               	movlw	128
  7875   002300  6E16               	movwf	(___flmul@prod+2)^0,c
  7876   002302  0E7F               	movlw	127
  7877   002304  6E17               	movwf	(___flmul@prod+3)^0,c
  7878   002306  EFB3  F011         	goto	l6871
  7879   00230A                     l6859:
  7880   00230A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7881   00230C  EF92  F011         	goto	u7740
  7882   002310  5019               	movf	(___flmul@temp+1)^0,w,c
  7883   002312  E106               	bnz	u7741
  7884   002314  0418               	decf	___flmul@temp^0,w,c
  7885   002316  B0D8               	btfsc	status,0,c
  7886   002318  EF90  F011         	goto	u7741
  7887   00231C  EF92  F011         	goto	u7740
  7888   002320                     u7741:
  7889   002320  EF9E  F011         	goto	l1190
  7890   002324                     u7740:
  7891   002324  0E00               	movlw	0
  7892   002326  6E14               	movwf	___flmul@prod^0,c
  7893   002328  0E00               	movlw	0
  7894   00232A  6E15               	movwf	(___flmul@prod+1)^0,c
  7895   00232C  0E00               	movlw	0
  7896   00232E  6E16               	movwf	(___flmul@prod+2)^0,c
  7897   002330  0E00               	movlw	0
  7898   002332  6E17               	movwf	(___flmul@prod+3)^0,c
  7899   002334  0E00               	movlw	0
  7900   002336  6E0D               	movwf	___flmul@sign^0,c
  7901   002338  EFB3  F011         	goto	l6871
  7902   00233C                     l1190:
  7903   00233C  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7904   002340  0EFF               	movlw	255
  7905   002342  1614               	andwf	___flmul@prod^0,f,c
  7906   002344  0EFF               	movlw	255
  7907   002346  1615               	andwf	(___flmul@prod+1)^0,f,c
  7908   002348  0E7F               	movlw	127
  7909   00234A  1616               	andwf	(___flmul@prod+2)^0,f,c
  7910   00234C  0E00               	movlw	0
  7911   00234E  1617               	andwf	(___flmul@prod+3)^0,f,c
  7912   002350  A013               	btfss	___flmul@bexp^0,0,c
  7913   002352  EFAD  F011         	goto	u7751
  7914   002356  EFAF  F011         	goto	u7750
  7915   00235A                     u7751:
  7916   00235A  EFB0  F011         	goto	l6869
  7917   00235E                     u7750:
  7918   00235E  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7919   002360                     l6869:
  7920   002360  90D8               	bcf	status,0,c
  7921   002362  3013               	rrcf	___flmul@bexp^0,w,c
  7922   002364  6E17               	movwf	(___flmul@prod+3)^0,c
  7923   002366                     l6871:
  7924   002366  500D               	movf	___flmul@sign^0,w,c
  7925   002368  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7926   00236A  C014  F001         	movff	___flmul@prod,?___flmul
  7927   00236E  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7928   002372  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7929   002376  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7930   00237A                     l1177:
  7931   00237A  0012               	return		;funcret
  7932   00237C                     __end_of___flmul:
  7933                           	callstack 0
  7934                           
  7935 ;; *************** function ___flge *****************
  7936 ;; Defined at:
  7937 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  ff1             4   25[COMRAM] unsigned char 
  7940 ;;  ff2             4   29[COMRAM] unsigned char 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;		None
  7943 ;; Return value:  Size  Location     Type
  7944 ;;		None               void
  7945 ;; Registers used:
  7946 ;;		wreg, status,2, status,0
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;Total ram usage:       12 bytes
  7957 ;; Hardware stack levels used: 1
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_efgtoa
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text32
  7966   003BAE                     __ptext32:
  7967                           	callstack 0
  7968   003BAE                     ___flge:
  7969                           	callstack 25
  7970   003BAE  0E00               	movlw	0
  7971   003BB0  141A               	andwf	___flge@ff1^0,w,c
  7972   003BB2  6E22               	movwf	??___flge^0,c
  7973   003BB4  0E00               	movlw	0
  7974   003BB6  141B               	andwf	(___flge@ff1+1)^0,w,c
  7975   003BB8  6E23               	movwf	(??___flge+1)^0,c
  7976   003BBA  0E80               	movlw	128
  7977   003BBC  141C               	andwf	(___flge@ff1+2)^0,w,c
  7978   003BBE  6E24               	movwf	(??___flge+2)^0,c
  7979   003BC0  0E7F               	movlw	127
  7980   003BC2  141D               	andwf	(___flge@ff1+3)^0,w,c
  7981   003BC4  6E25               	movwf	(??___flge+3)^0,c
  7982   003BC6  5022               	movf	??___flge^0,w,c
  7983   003BC8  1023               	iorwf	(??___flge+1)^0,w,c
  7984   003BCA  1024               	iorwf	(??___flge+2)^0,w,c
  7985   003BCC  1025               	iorwf	(??___flge+3)^0,w,c
  7986   003BCE  A4D8               	btfss	status,2,c
  7987   003BD0  EFEC  F01D         	goto	u7791
  7988   003BD4  EFEE  F01D         	goto	u7790
  7989   003BD8                     u7791:
  7990   003BD8  EFF6  F01D         	goto	l6903
  7991   003BDC                     u7790:
  7992   003BDC  0E00               	movlw	0
  7993   003BDE  6E1A               	movwf	___flge@ff1^0,c
  7994   003BE0  0E00               	movlw	0
  7995   003BE2  6E1B               	movwf	(___flge@ff1+1)^0,c
  7996   003BE4  0E00               	movlw	0
  7997   003BE6  6E1C               	movwf	(___flge@ff1+2)^0,c
  7998   003BE8  0E00               	movlw	0
  7999   003BEA  6E1D               	movwf	(___flge@ff1+3)^0,c
  8000   003BEC                     l6903:
  8001   003BEC  0E00               	movlw	0
  8002   003BEE  141E               	andwf	___flge@ff2^0,w,c
  8003   003BF0  6E22               	movwf	??___flge^0,c
  8004   003BF2  0E00               	movlw	0
  8005   003BF4  141F               	andwf	(___flge@ff2+1)^0,w,c
  8006   003BF6  6E23               	movwf	(??___flge+1)^0,c
  8007   003BF8  0E80               	movlw	128
  8008   003BFA  1420               	andwf	(___flge@ff2+2)^0,w,c
  8009   003BFC  6E24               	movwf	(??___flge+2)^0,c
  8010   003BFE  0E7F               	movlw	127
  8011   003C00  1421               	andwf	(___flge@ff2+3)^0,w,c
  8012   003C02  6E25               	movwf	(??___flge+3)^0,c
  8013   003C04  5022               	movf	??___flge^0,w,c
  8014   003C06  1023               	iorwf	(??___flge+1)^0,w,c
  8015   003C08  1024               	iorwf	(??___flge+2)^0,w,c
  8016   003C0A  1025               	iorwf	(??___flge+3)^0,w,c
  8017   003C0C  A4D8               	btfss	status,2,c
  8018   003C0E  EF0B  F01E         	goto	u7801
  8019   003C12  EF0D  F01E         	goto	u7800
  8020   003C16                     u7801:
  8021   003C16  EF15  F01E         	goto	l6907
  8022   003C1A                     u7800:
  8023   003C1A  0E00               	movlw	0
  8024   003C1C  6E1E               	movwf	___flge@ff2^0,c
  8025   003C1E  0E00               	movlw	0
  8026   003C20  6E1F               	movwf	(___flge@ff2+1)^0,c
  8027   003C22  0E00               	movlw	0
  8028   003C24  6E20               	movwf	(___flge@ff2+2)^0,c
  8029   003C26  0E00               	movlw	0
  8030   003C28  6E21               	movwf	(___flge@ff2+3)^0,c
  8031   003C2A                     l6907:
  8032   003C2A  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  8033   003C2C  EF1A  F01E         	goto	u7811
  8034   003C30  EF1C  F01E         	goto	u7810
  8035   003C34                     u7811:
  8036   003C34  EF25  F01E         	goto	l6911
  8037   003C38                     u7810:
  8038   003C38  6C1A               	negf	___flge@ff1^0,c
  8039   003C3A  1E1B               	comf	(___flge@ff1+1)^0,f,c
  8040   003C3C  B0D8               	btfsc	status,0,c
  8041   003C3E  2A1B               	incf	(___flge@ff1+1)^0,f,c
  8042   003C40  1E1C               	comf	(___flge@ff1+2)^0,f,c
  8043   003C42  B0D8               	btfsc	status,0,c
  8044   003C44  2A1C               	incf	(___flge@ff1+2)^0,f,c
  8045   003C46  0E80               	movlw	128
  8046   003C48  561D               	subfwb	(___flge@ff1+3)^0,f,c
  8047   003C4A                     l6911:
  8048   003C4A  AE21               	btfss	(___flge@ff2+3)^0,7,c
  8049   003C4C  EF2A  F01E         	goto	u7821
  8050   003C50  EF2C  F01E         	goto	u7820
  8051   003C54                     u7821:
  8052   003C54  EF35  F01E         	goto	l824
  8053   003C58                     u7820:
  8054   003C58  6C1E               	negf	___flge@ff2^0,c
  8055   003C5A  1E1F               	comf	(___flge@ff2+1)^0,f,c
  8056   003C5C  B0D8               	btfsc	status,0,c
  8057   003C5E  2A1F               	incf	(___flge@ff2+1)^0,f,c
  8058   003C60  1E20               	comf	(___flge@ff2+2)^0,f,c
  8059   003C62  B0D8               	btfsc	status,0,c
  8060   003C64  2A20               	incf	(___flge@ff2+2)^0,f,c
  8061   003C66  0E80               	movlw	128
  8062   003C68  5621               	subfwb	(___flge@ff2+3)^0,f,c
  8063   003C6A                     l824:
  8064   003C6A  0E00               	movlw	0
  8065   003C6C  1A1A               	xorwf	___flge@ff1^0,f,c
  8066   003C6E  0E00               	movlw	0
  8067   003C70  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  8068   003C72  0E00               	movlw	0
  8069   003C74  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  8070   003C76  0E80               	movlw	128
  8071   003C78  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  8072   003C7A  0E00               	movlw	0
  8073   003C7C  1A1E               	xorwf	___flge@ff2^0,f,c
  8074   003C7E  0E00               	movlw	0
  8075   003C80  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  8076   003C82  0E00               	movlw	0
  8077   003C84  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  8078   003C86  0E80               	movlw	128
  8079   003C88  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  8080   003C8A  501E               	movf	___flge@ff2^0,w,c
  8081   003C8C  5C1A               	subwf	___flge@ff1^0,w,c
  8082   003C8E  501F               	movf	(___flge@ff2+1)^0,w,c
  8083   003C90  581B               	subwfb	(___flge@ff1+1)^0,w,c
  8084   003C92  5020               	movf	(___flge@ff2+2)^0,w,c
  8085   003C94  581C               	subwfb	(___flge@ff1+2)^0,w,c
  8086   003C96  5021               	movf	(___flge@ff2+3)^0,w,c
  8087   003C98  581D               	subwfb	(___flge@ff1+3)^0,w,c
  8088   003C9A  B0D8               	btfsc	status,0,c
  8089   003C9C  EF52  F01E         	goto	u7831
  8090   003CA0  EF54  F01E         	goto	u7830
  8091   003CA4                     u7831:
  8092   003CA4  EF57  F01E         	goto	l6917
  8093   003CA8                     u7830:
  8094   003CA8  90D8               	bcf	status,0,c
  8095   003CAA  EF58  F01E         	goto	l829
  8096   003CAE                     l6917:
  8097   003CAE  80D8               	bsf	status,0,c
  8098   003CB0                     l829:
  8099   003CB0  0012               	return		;funcret
  8100   003CB2                     __end_of___flge:
  8101                           	callstack 0
  8102                           
  8103 ;; *************** function ___fleq *****************
  8104 ;; Defined at:
  8105 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  ff1             4    0[COMRAM] unsigned char 
  8108 ;;  ff2             4    4[COMRAM] unsigned char 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;		None
  8111 ;; Return value:  Size  Location     Type
  8112 ;;		None               void
  8113 ;; Registers used:
  8114 ;;		wreg, status,2, status,0
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8120 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;Total ram usage:       12 bytes
  8125 ;; Hardware stack levels used: 1
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_efgtoa
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text33
  8134   00411C                     __ptext33:
  8135                           	callstack 0
  8136   00411C                     ___fleq:
  8137                           	callstack 25
  8138   00411C  0E00               	movlw	0
  8139   00411E  1401               	andwf	___fleq@ff1^0,w,c
  8140   004120  6E09               	movwf	??___fleq^0,c
  8141   004122  0E00               	movlw	0
  8142   004124  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8143   004126  6E0A               	movwf	(??___fleq+1)^0,c
  8144   004128  0E80               	movlw	128
  8145   00412A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8146   00412C  6E0B               	movwf	(??___fleq+2)^0,c
  8147   00412E  0E7F               	movlw	127
  8148   004130  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8149   004132  6E0C               	movwf	(??___fleq+3)^0,c
  8150   004134  5009               	movf	??___fleq^0,w,c
  8151   004136  100A               	iorwf	(??___fleq+1)^0,w,c
  8152   004138  100B               	iorwf	(??___fleq+2)^0,w,c
  8153   00413A  100C               	iorwf	(??___fleq+3)^0,w,c
  8154   00413C  A4D8               	btfss	status,2,c
  8155   00413E  EFA3  F020         	goto	u7761
  8156   004142  EFA5  F020         	goto	u7760
  8157   004146                     u7761:
  8158   004146  EFAD  F020         	goto	l6887
  8159   00414A                     u7760:
  8160   00414A  0E00               	movlw	0
  8161   00414C  6E01               	movwf	___fleq@ff1^0,c
  8162   00414E  0E00               	movlw	0
  8163   004150  6E02               	movwf	(___fleq@ff1+1)^0,c
  8164   004152  0E00               	movlw	0
  8165   004154  6E03               	movwf	(___fleq@ff1+2)^0,c
  8166   004156  0E00               	movlw	0
  8167   004158  6E04               	movwf	(___fleq@ff1+3)^0,c
  8168   00415A                     l6887:
  8169   00415A  0E00               	movlw	0
  8170   00415C  1405               	andwf	___fleq@ff2^0,w,c
  8171   00415E  6E09               	movwf	??___fleq^0,c
  8172   004160  0E00               	movlw	0
  8173   004162  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8174   004164  6E0A               	movwf	(??___fleq+1)^0,c
  8175   004166  0E80               	movlw	128
  8176   004168  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8177   00416A  6E0B               	movwf	(??___fleq+2)^0,c
  8178   00416C  0E7F               	movlw	127
  8179   00416E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8180   004170  6E0C               	movwf	(??___fleq+3)^0,c
  8181   004172  5009               	movf	??___fleq^0,w,c
  8182   004174  100A               	iorwf	(??___fleq+1)^0,w,c
  8183   004176  100B               	iorwf	(??___fleq+2)^0,w,c
  8184   004178  100C               	iorwf	(??___fleq+3)^0,w,c
  8185   00417A  A4D8               	btfss	status,2,c
  8186   00417C  EFC2  F020         	goto	u7771
  8187   004180  EFC4  F020         	goto	u7770
  8188   004184                     u7771:
  8189   004184  EFCC  F020         	goto	l6891
  8190   004188                     u7770:
  8191   004188  0E00               	movlw	0
  8192   00418A  6E05               	movwf	___fleq@ff2^0,c
  8193   00418C  0E00               	movlw	0
  8194   00418E  6E06               	movwf	(___fleq@ff2+1)^0,c
  8195   004190  0E00               	movlw	0
  8196   004192  6E07               	movwf	(___fleq@ff2+2)^0,c
  8197   004194  0E00               	movlw	0
  8198   004196  6E08               	movwf	(___fleq@ff2+3)^0,c
  8199   004198                     l6891:
  8200   004198  5005               	movf	___fleq@ff2^0,w,c
  8201   00419A  1801               	xorwf	___fleq@ff1^0,w,c
  8202   00419C  E10F               	bnz	u7780
  8203   00419E  5006               	movf	(___fleq@ff2+1)^0,w,c
  8204   0041A0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8205   0041A2  E10C               	bnz	u7780
  8206   0041A4  5007               	movf	(___fleq@ff2+2)^0,w,c
  8207   0041A6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8208   0041A8  E109               	bnz	u7780
  8209   0041AA  5008               	movf	(___fleq@ff2+3)^0,w,c
  8210   0041AC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8211   0041AE  B4D8               	btfsc	status,2,c
  8212   0041B0  EFDC  F020         	goto	u7781
  8213   0041B4  EFDE  F020         	goto	u7780
  8214   0041B8                     u7781:
  8215   0041B8  EFE1  F020         	goto	l6895
  8216   0041BC                     u7780:
  8217   0041BC  90D8               	bcf	status,0,c
  8218   0041BE  EFE2  F020         	goto	l818
  8219   0041C2                     l6895:
  8220   0041C2  80D8               	bsf	status,0,c
  8221   0041C4                     l818:
  8222   0041C4  0012               	return		;funcret
  8223   0041C6                     __end_of___fleq:
  8224                           	callstack 0
  8225                           
  8226 ;; *************** function ___fldiv *****************
  8227 ;; Defined at:
  8228 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  b               4   14[COMRAM] unsigned char 
  8231 ;;  a               4   18[COMRAM] unsigned char 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  grs             4   33[COMRAM] unsigned long 
  8234 ;;  rem             4   26[COMRAM] unsigned long 
  8235 ;;  new_exp         2   31[COMRAM] short 
  8236 ;;  aexp            1   38[COMRAM] unsigned char 
  8237 ;;  bexp            1   37[COMRAM] unsigned char 
  8238 ;;  sign            1   30[COMRAM] unsigned char 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  4   14[COMRAM] unsigned char 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2, status,0
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8248 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8249 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;Total ram usage:       25 bytes
  8253 ;; Hardware stack levels used: 1
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_main
  8258 ;;		_efgtoa
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text34
  8263   002B72                     __ptext34:
  8264                           	callstack 0
  8265   002B72                     ___fldiv:
  8266                           	callstack 25
  8267   002B72  5012               	movf	(___fldiv@b+3)^0,w,c
  8268   002B74  0B80               	andlw	128
  8269   002B76  6E1F               	movwf	___fldiv@sign^0,c
  8270   002B78  5012               	movf	(___fldiv@b+3)^0,w,c
  8271   002B7A  2412               	addwf	(___fldiv@b+3)^0,w,c
  8272   002B7C  6E26               	movwf	___fldiv@bexp^0,c
  8273   002B7E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8274   002B80  EFC4  F015         	goto	u7341
  8275   002B84  EFC6  F015         	goto	u7340
  8276   002B88                     u7341:
  8277   002B88  EFC7  F015         	goto	l6615
  8278   002B8C                     u7340:
  8279   002B8C  8026               	bsf	___fldiv@bexp^0,0,c
  8280   002B8E                     l6615:
  8281   002B8E  5026               	movf	___fldiv@bexp^0,w,c
  8282   002B90  B4D8               	btfsc	status,2,c
  8283   002B92  EFCD  F015         	goto	u7351
  8284   002B96  EFCF  F015         	goto	u7350
  8285   002B9A                     u7351:
  8286   002B9A  EFE4  F015         	goto	l6625
  8287   002B9E                     u7350:
  8288   002B9E  2826               	incf	___fldiv@bexp^0,w,c
  8289   002BA0  A4D8               	btfss	status,2,c
  8290   002BA2  EFD5  F015         	goto	u7361
  8291   002BA6  EFD7  F015         	goto	u7360
  8292   002BAA                     u7361:
  8293   002BAA  EFDF  F015         	goto	l6621
  8294   002BAE                     u7360:
  8295   002BAE  0E00               	movlw	0
  8296   002BB0  6E0F               	movwf	___fldiv@b^0,c
  8297   002BB2  0E00               	movlw	0
  8298   002BB4  6E10               	movwf	(___fldiv@b+1)^0,c
  8299   002BB6  0E00               	movlw	0
  8300   002BB8  6E11               	movwf	(___fldiv@b+2)^0,c
  8301   002BBA  0E00               	movlw	0
  8302   002BBC  6E12               	movwf	(___fldiv@b+3)^0,c
  8303   002BBE                     l6621:
  8304   002BBE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8305   002BC0  0E00               	movlw	0
  8306   002BC2  6E12               	movwf	(___fldiv@b+3)^0,c
  8307   002BC4  EFEC  F015         	goto	l6627
  8308   002BC8                     l6625:
  8309   002BC8  0E00               	movlw	0
  8310   002BCA  6E0F               	movwf	___fldiv@b^0,c
  8311   002BCC  0E00               	movlw	0
  8312   002BCE  6E10               	movwf	(___fldiv@b+1)^0,c
  8313   002BD0  0E00               	movlw	0
  8314   002BD2  6E11               	movwf	(___fldiv@b+2)^0,c
  8315   002BD4  0E00               	movlw	0
  8316   002BD6  6E12               	movwf	(___fldiv@b+3)^0,c
  8317   002BD8                     l6627:
  8318   002BD8  5016               	movf	(___fldiv@a+3)^0,w,c
  8319   002BDA  0B80               	andlw	128
  8320   002BDC  1A1F               	xorwf	___fldiv@sign^0,f,c
  8321   002BDE  5016               	movf	(___fldiv@a+3)^0,w,c
  8322   002BE0  2416               	addwf	(___fldiv@a+3)^0,w,c
  8323   002BE2  6E27               	movwf	___fldiv@aexp^0,c
  8324   002BE4  AE15               	btfss	(___fldiv@a+2)^0,7,c
  8325   002BE6  EFF7  F015         	goto	u7371
  8326   002BEA  EFF9  F015         	goto	u7370
  8327   002BEE                     u7371:
  8328   002BEE  EFFA  F015         	goto	l6635
  8329   002BF2                     u7370:
  8330   002BF2  8027               	bsf	___fldiv@aexp^0,0,c
  8331   002BF4                     l6635:
  8332   002BF4  5027               	movf	___fldiv@aexp^0,w,c
  8333   002BF6  B4D8               	btfsc	status,2,c
  8334   002BF8  EF00  F016         	goto	u7381
  8335   002BFC  EF02  F016         	goto	u7380
  8336   002C00                     u7381:
  8337   002C00  EF17  F016         	goto	l6645
  8338   002C04                     u7380:
  8339   002C04  2827               	incf	___fldiv@aexp^0,w,c
  8340   002C06  A4D8               	btfss	status,2,c
  8341   002C08  EF08  F016         	goto	u7391
  8342   002C0C  EF0A  F016         	goto	u7390
  8343   002C10                     u7391:
  8344   002C10  EF12  F016         	goto	l6641
  8345   002C14                     u7390:
  8346   002C14  0E00               	movlw	0
  8347   002C16  6E13               	movwf	___fldiv@a^0,c
  8348   002C18  0E00               	movlw	0
  8349   002C1A  6E14               	movwf	(___fldiv@a+1)^0,c
  8350   002C1C  0E00               	movlw	0
  8351   002C1E  6E15               	movwf	(___fldiv@a+2)^0,c
  8352   002C20  0E00               	movlw	0
  8353   002C22  6E16               	movwf	(___fldiv@a+3)^0,c
  8354   002C24                     l6641:
  8355   002C24  8E15               	bsf	(___fldiv@a+2)^0,7,c
  8356   002C26  0E00               	movlw	0
  8357   002C28  6E16               	movwf	(___fldiv@a+3)^0,c
  8358   002C2A  EF1F  F016         	goto	l6647
  8359   002C2E                     l6645:
  8360   002C2E  0E00               	movlw	0
  8361   002C30  6E13               	movwf	___fldiv@a^0,c
  8362   002C32  0E00               	movlw	0
  8363   002C34  6E14               	movwf	(___fldiv@a+1)^0,c
  8364   002C36  0E00               	movlw	0
  8365   002C38  6E15               	movwf	(___fldiv@a+2)^0,c
  8366   002C3A  0E00               	movlw	0
  8367   002C3C  6E16               	movwf	(___fldiv@a+3)^0,c
  8368   002C3E                     l6647:
  8369   002C3E  5013               	movf	___fldiv@a^0,w,c
  8370   002C40  1014               	iorwf	(___fldiv@a+1)^0,w,c
  8371   002C42  1015               	iorwf	(___fldiv@a+2)^0,w,c
  8372   002C44  1016               	iorwf	(___fldiv@a+3)^0,w,c
  8373   002C46  A4D8               	btfss	status,2,c
  8374   002C48  EF28  F016         	goto	u7401
  8375   002C4C  EF2A  F016         	goto	u7400
  8376   002C50                     u7401:
  8377   002C50  EF42  F016         	goto	l6659
  8378   002C54                     u7400:
  8379   002C54  0E00               	movlw	0
  8380   002C56  6E0F               	movwf	___fldiv@b^0,c
  8381   002C58  0E00               	movlw	0
  8382   002C5A  6E10               	movwf	(___fldiv@b+1)^0,c
  8383   002C5C  0E00               	movlw	0
  8384   002C5E  6E11               	movwf	(___fldiv@b+2)^0,c
  8385   002C60  0E00               	movlw	0
  8386   002C62  6E12               	movwf	(___fldiv@b+3)^0,c
  8387   002C64  0E80               	movlw	128
  8388   002C66  1211               	iorwf	(___fldiv@b+2)^0,f,c
  8389   002C68  0E7F               	movlw	127
  8390   002C6A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8391   002C6C                     l6653:
  8392   002C6C  501F               	movf	___fldiv@sign^0,w,c
  8393   002C6E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8394   002C70  C00F  F00F         	movff	___fldiv@b,?___fldiv
  8395   002C74  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  8396   002C78  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  8397   002C7C  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  8398   002C80  EF85  F017         	goto	l1141
  8399   002C84                     l6659:
  8400   002C84  5026               	movf	___fldiv@bexp^0,w,c
  8401   002C86  A4D8               	btfss	status,2,c
  8402   002C88  EF48  F016         	goto	u7411
  8403   002C8C  EF4A  F016         	goto	u7410
  8404   002C90                     u7411:
  8405   002C90  EF54  F016         	goto	l6667
  8406   002C94                     u7410:
  8407   002C94  0E00               	movlw	0
  8408   002C96  6E0F               	movwf	?___fldiv^0,c
  8409   002C98  0E00               	movlw	0
  8410   002C9A  6E10               	movwf	(?___fldiv+1)^0,c
  8411   002C9C  0E00               	movlw	0
  8412   002C9E  6E11               	movwf	(?___fldiv+2)^0,c
  8413   002CA0  0E00               	movlw	0
  8414   002CA2  6E12               	movwf	(?___fldiv+3)^0,c
  8415   002CA4  EF85  F017         	goto	l1141
  8416   002CA8                     l6667:
  8417   002CA8  5027               	movf	___fldiv@aexp^0,w,c
  8418   002CAA  C026  F017         	movff	___fldiv@bexp,??___fldiv
  8419   002CAE  6A18               	clrf	(??___fldiv+1)^0,c
  8420   002CB0  5E17               	subwf	??___fldiv^0,f,c
  8421   002CB2  0E00               	movlw	0
  8422   002CB4  5A18               	subwfb	(??___fldiv+1)^0,f,c
  8423   002CB6  0E7F               	movlw	127
  8424   002CB8  2417               	addwf	??___fldiv^0,w,c
  8425   002CBA  6E20               	movwf	___fldiv@new_exp^0,c
  8426   002CBC  0E00               	movlw	0
  8427   002CBE  2018               	addwfc	(??___fldiv+1)^0,w,c
  8428   002CC0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8429   002CC2  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  8430   002CC6  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  8431   002CCA  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  8432   002CCE  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  8433   002CD2  0E00               	movlw	0
  8434   002CD4  6E0F               	movwf	___fldiv@b^0,c
  8435   002CD6  0E00               	movlw	0
  8436   002CD8  6E10               	movwf	(___fldiv@b+1)^0,c
  8437   002CDA  0E00               	movlw	0
  8438   002CDC  6E11               	movwf	(___fldiv@b+2)^0,c
  8439   002CDE  0E00               	movlw	0
  8440   002CE0  6E12               	movwf	(___fldiv@b+3)^0,c
  8441   002CE2  0E00               	movlw	0
  8442   002CE4  6E22               	movwf	___fldiv@grs^0,c
  8443   002CE6  0E00               	movlw	0
  8444   002CE8  6E23               	movwf	(___fldiv@grs+1)^0,c
  8445   002CEA  0E00               	movlw	0
  8446   002CEC  6E24               	movwf	(___fldiv@grs+2)^0,c
  8447   002CEE  0E00               	movlw	0
  8448   002CF0  6E25               	movwf	(___fldiv@grs+3)^0,c
  8449   002CF2  0E00               	movlw	0
  8450   002CF4  6E27               	movwf	___fldiv@aexp^0,c
  8451   002CF6  EFB5  F016         	goto	l1143
  8452   002CFA                     l6677:
  8453   002CFA  5027               	movf	___fldiv@aexp^0,w,c
  8454   002CFC  B4D8               	btfsc	status,2,c
  8455   002CFE  EF83  F016         	goto	u7421
  8456   002D02  EF85  F016         	goto	u7420
  8457   002D06                     u7421:
  8458   002D06  EF9C  F016         	goto	l6685
  8459   002D0A                     u7420:
  8460   002D0A  90D8               	bcf	status,0,c
  8461   002D0C  361B               	rlcf	___fldiv@rem^0,f,c
  8462   002D0E  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  8463   002D10  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  8464   002D12  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  8465   002D14  90D8               	bcf	status,0,c
  8466   002D16  360F               	rlcf	___fldiv@b^0,f,c
  8467   002D18  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8468   002D1A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8469   002D1C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8470   002D1E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8471   002D20  EF94  F016         	goto	u7431
  8472   002D24  EF96  F016         	goto	u7430
  8473   002D28                     u7431:
  8474   002D28  EF97  F016         	goto	l1146
  8475   002D2C                     u7430:
  8476   002D2C  800F               	bsf	___fldiv@b^0,0,c
  8477   002D2E                     l1146:
  8478   002D2E  90D8               	bcf	status,0,c
  8479   002D30  3622               	rlcf	___fldiv@grs^0,f,c
  8480   002D32  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8481   002D34  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8482   002D36  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8483   002D38                     l6685:
  8484   002D38  5013               	movf	___fldiv@a^0,w,c
  8485   002D3A  5C1B               	subwf	___fldiv@rem^0,w,c
  8486   002D3C  5014               	movf	(___fldiv@a+1)^0,w,c
  8487   002D3E  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  8488   002D40  5015               	movf	(___fldiv@a+2)^0,w,c
  8489   002D42  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  8490   002D44  5016               	movf	(___fldiv@a+3)^0,w,c
  8491   002D46  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  8492   002D48  A0D8               	btfss	status,0,c
  8493   002D4A  EFA9  F016         	goto	u7441
  8494   002D4E  EFAB  F016         	goto	u7440
  8495   002D52                     u7441:
  8496   002D52  EFB4  F016         	goto	l6691
  8497   002D56                     u7440:
  8498   002D56  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  8499   002D58  5013               	movf	___fldiv@a^0,w,c
  8500   002D5A  5E1B               	subwf	___fldiv@rem^0,f,c
  8501   002D5C  5014               	movf	(___fldiv@a+1)^0,w,c
  8502   002D5E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  8503   002D60  5015               	movf	(___fldiv@a+2)^0,w,c
  8504   002D62  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  8505   002D64  5016               	movf	(___fldiv@a+3)^0,w,c
  8506   002D66  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  8507   002D68                     l6691:
  8508   002D68  2A27               	incf	___fldiv@aexp^0,f,c
  8509   002D6A                     l1143:
  8510   002D6A  0E19               	movlw	25
  8511   002D6C  6427               	cpfsgt	___fldiv@aexp^0,c
  8512   002D6E  EFBB  F016         	goto	u7451
  8513   002D72  EFBD  F016         	goto	u7450
  8514   002D76                     u7451:
  8515   002D76  EF7D  F016         	goto	l6677
  8516   002D7A                     u7450:
  8517   002D7A  501B               	movf	___fldiv@rem^0,w,c
  8518   002D7C  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  8519   002D7E  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  8520   002D80  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  8521   002D82  B4D8               	btfsc	status,2,c
  8522   002D84  EFC6  F016         	goto	u7461
  8523   002D88  EFC8  F016         	goto	u7460
  8524   002D8C                     u7461:
  8525   002D8C  EFE0  F016         	goto	l6703
  8526   002D90                     u7460:
  8527   002D90  8022               	bsf	___fldiv@grs^0,0,c
  8528   002D92  EFE0  F016         	goto	l6703
  8529   002D96                     l6697:
  8530   002D96  90D8               	bcf	status,0,c
  8531   002D98  360F               	rlcf	___fldiv@b^0,f,c
  8532   002D9A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8533   002D9C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8534   002D9E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8535   002DA0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8536   002DA2  EFD5  F016         	goto	u7471
  8537   002DA6  EFD7  F016         	goto	u7470
  8538   002DAA                     u7471:
  8539   002DAA  EFD8  F016         	goto	l1152
  8540   002DAE                     u7470:
  8541   002DAE  800F               	bsf	___fldiv@b^0,0,c
  8542   002DB0                     l1152:
  8543   002DB0  90D8               	bcf	status,0,c
  8544   002DB2  3622               	rlcf	___fldiv@grs^0,f,c
  8545   002DB4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8546   002DB6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8547   002DB8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8548   002DBA  0620               	decf	___fldiv@new_exp^0,f,c
  8549   002DBC  A0D8               	btfss	status,0,c
  8550   002DBE  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  8551   002DC0                     l6703:
  8552   002DC0  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8553   002DC2  EFE5  F016         	goto	u7481
  8554   002DC6  EFE7  F016         	goto	u7480
  8555   002DCA                     u7481:
  8556   002DCA  EFCB  F016         	goto	l6697
  8557   002DCE                     u7480:
  8558   002DCE  0E00               	movlw	0
  8559   002DD0  6E27               	movwf	___fldiv@aexp^0,c
  8560   002DD2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8561   002DD4  EFEE  F016         	goto	u7491
  8562   002DD8  EFF0  F016         	goto	u7490
  8563   002DDC                     u7491:
  8564   002DDC  EF14  F017         	goto	l1154
  8565   002DE0                     u7490:
  8566   002DE0  0EFF               	movlw	255
  8567   002DE2  1422               	andwf	___fldiv@grs^0,w,c
  8568   002DE4  6E17               	movwf	??___fldiv^0,c
  8569   002DE6  0EFF               	movlw	255
  8570   002DE8  1423               	andwf	(___fldiv@grs+1)^0,w,c
  8571   002DEA  6E18               	movwf	(??___fldiv+1)^0,c
  8572   002DEC  0EFF               	movlw	255
  8573   002DEE  1424               	andwf	(___fldiv@grs+2)^0,w,c
  8574   002DF0  6E19               	movwf	(??___fldiv+2)^0,c
  8575   002DF2  0E7F               	movlw	127
  8576   002DF4  1425               	andwf	(___fldiv@grs+3)^0,w,c
  8577   002DF6  6E1A               	movwf	(??___fldiv+3)^0,c
  8578   002DF8  5017               	movf	??___fldiv^0,w,c
  8579   002DFA  1018               	iorwf	(??___fldiv+1)^0,w,c
  8580   002DFC  1019               	iorwf	(??___fldiv+2)^0,w,c
  8581   002DFE  101A               	iorwf	(??___fldiv+3)^0,w,c
  8582   002E00  B4D8               	btfsc	status,2,c
  8583   002E02  EF05  F017         	goto	u7501
  8584   002E06  EF07  F017         	goto	u7500
  8585   002E0A                     u7501:
  8586   002E0A  EF0B  F017         	goto	l1155
  8587   002E0E                     u7500:
  8588   002E0E                     l6711:
  8589   002E0E  0E01               	movlw	1
  8590   002E10  6E27               	movwf	___fldiv@aexp^0,c
  8591   002E12  EF14  F017         	goto	l1154
  8592   002E16                     l1155:
  8593   002E16  A00F               	btfss	___fldiv@b^0,0,c
  8594   002E18  EF10  F017         	goto	u7511
  8595   002E1C  EF12  F017         	goto	u7510
  8596   002E20                     u7511:
  8597   002E20  EF14  F017         	goto	l1154
  8598   002E24                     u7510:
  8599   002E24  EF07  F017         	goto	l6711
  8600   002E28                     l1154:
  8601   002E28  5027               	movf	___fldiv@aexp^0,w,c
  8602   002E2A  B4D8               	btfsc	status,2,c
  8603   002E2C  EF1A  F017         	goto	u7521
  8604   002E30  EF1C  F017         	goto	u7520
  8605   002E34                     u7521:
  8606   002E34  EF40  F017         	goto	l6723
  8607   002E38                     u7520:
  8608   002E38  0E01               	movlw	1
  8609   002E3A  260F               	addwf	___fldiv@b^0,f,c
  8610   002E3C  0E00               	movlw	0
  8611   002E3E  2210               	addwfc	(___fldiv@b+1)^0,f,c
  8612   002E40  2211               	addwfc	(___fldiv@b+2)^0,f,c
  8613   002E42  2212               	addwfc	(___fldiv@b+3)^0,f,c
  8614   002E44  A012               	btfss	(___fldiv@b+3)^0,0,c
  8615   002E46  EF27  F017         	goto	u7531
  8616   002E4A  EF29  F017         	goto	u7530
  8617   002E4E                     u7531:
  8618   002E4E  EF40  F017         	goto	l6723
  8619   002E52                     u7530:
  8620   002E52  C00F  F017         	movff	___fldiv@b,??___fldiv
  8621   002E56  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8622   002E5A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8623   002E5E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8624   002E62  341A               	rlcf	(??___fldiv+3)^0,w,c
  8625   002E64  321A               	rrcf	(??___fldiv+3)^0,f,c
  8626   002E66  3219               	rrcf	(??___fldiv+2)^0,f,c
  8627   002E68  3218               	rrcf	(??___fldiv+1)^0,f,c
  8628   002E6A  3217               	rrcf	??___fldiv^0,f,c
  8629   002E6C  C017  F00F         	movff	??___fldiv,___fldiv@b
  8630   002E70  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8631   002E74  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8632   002E78  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8633   002E7C  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8634   002E7E  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8635   002E80                     l6723:
  8636   002E80  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8637   002E82  EF4B  F017         	goto	u7541
  8638   002E86  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8639   002E88  E108               	bnz	u7540
  8640   002E8A  2820               	incf	___fldiv@new_exp^0,w,c
  8641   002E8C  A0D8               	btfss	status,0,c
  8642   002E8E  EF4B  F017         	goto	u7541
  8643   002E92  EF4D  F017         	goto	u7540
  8644   002E96                     u7541:
  8645   002E96  EF58  F017         	goto	l6727
  8646   002E9A                     u7540:
  8647   002E9A  0E00               	movlw	0
  8648   002E9C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8649   002E9E  6820               	setf	___fldiv@new_exp^0,c
  8650   002EA0  0E00               	movlw	0
  8651   002EA2  6E0F               	movwf	___fldiv@b^0,c
  8652   002EA4  0E00               	movlw	0
  8653   002EA6  6E10               	movwf	(___fldiv@b+1)^0,c
  8654   002EA8  0E00               	movlw	0
  8655   002EAA  6E11               	movwf	(___fldiv@b+2)^0,c
  8656   002EAC  0E00               	movlw	0
  8657   002EAE  6E12               	movwf	(___fldiv@b+3)^0,c
  8658   002EB0                     l6727:
  8659   002EB0  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8660   002EB2  EF65  F017         	goto	u7550
  8661   002EB6  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8662   002EB8  E106               	bnz	u7551
  8663   002EBA  0420               	decf	___fldiv@new_exp^0,w,c
  8664   002EBC  B0D8               	btfsc	status,0,c
  8665   002EBE  EF63  F017         	goto	u7551
  8666   002EC2  EF65  F017         	goto	u7550
  8667   002EC6                     u7551:
  8668   002EC6  EF73  F017         	goto	l6731
  8669   002ECA                     u7550:
  8670   002ECA  0E00               	movlw	0
  8671   002ECC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8672   002ECE  0E00               	movlw	0
  8673   002ED0  6E20               	movwf	___fldiv@new_exp^0,c
  8674   002ED2  0E00               	movlw	0
  8675   002ED4  6E0F               	movwf	___fldiv@b^0,c
  8676   002ED6  0E00               	movlw	0
  8677   002ED8  6E10               	movwf	(___fldiv@b+1)^0,c
  8678   002EDA  0E00               	movlw	0
  8679   002EDC  6E11               	movwf	(___fldiv@b+2)^0,c
  8680   002EDE  0E00               	movlw	0
  8681   002EE0  6E12               	movwf	(___fldiv@b+3)^0,c
  8682   002EE2  0E00               	movlw	0
  8683   002EE4  6E1F               	movwf	___fldiv@sign^0,c
  8684   002EE6                     l6731:
  8685   002EE6  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8686   002EEA  A026               	btfss	___fldiv@bexp^0,0,c
  8687   002EEC  EF7A  F017         	goto	u7561
  8688   002EF0  EF7C  F017         	goto	u7560
  8689   002EF4                     u7561:
  8690   002EF4  EF7F  F017         	goto	l6737
  8691   002EF8                     u7560:
  8692   002EF8  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8693   002EFA  EF80  F017         	goto	l6739
  8694   002EFE                     l6737:
  8695   002EFE  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8696   002F00                     l6739:
  8697   002F00  90D8               	bcf	status,0,c
  8698   002F02  3026               	rrcf	___fldiv@bexp^0,w,c
  8699   002F04  6E12               	movwf	(___fldiv@b+3)^0,c
  8700   002F06  EF36  F016         	goto	l6653
  8701   002F0A                     l1141:
  8702   002F0A  0012               	return		;funcret
  8703   002F0C                     __end_of___fldiv:
  8704                           	callstack 0
  8705                           
  8706 ;; *************** function _dtoa *****************
  8707 ;; Defined at:
  8708 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  8711 ;;		 -> sprintf@f(12), 
  8712 ;;  d               4   23[COMRAM] long 
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;  i               2   34[COMRAM] int 
  8715 ;;  w               2   31[COMRAM] int 
  8716 ;;  p               2   29[COMRAM] int 
  8717 ;;  s               1   33[COMRAM] unsigned char 
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  1    wreg      void 
  8720 ;; Registers used:
  8721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8727 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8728 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8730 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;Total ram usage:       14 bytes
  8732 ;; Hardware stack levels used: 1
  8733 ;; Hardware stack levels required when called: 4
  8734 ;; This function calls:
  8735 ;;		___aldiv
  8736 ;;		___almod
  8737 ;;		_abs
  8738 ;;		_pad
  8739 ;; This function is called by:
  8740 ;;		_vfpfcnvrt
  8741 ;; This function uses a non-reentrant model
  8742 ;;
  8743                           
  8744                           	psect	text35
  8745   00311E                     __ptext35:
  8746                           	callstack 0
  8747   00311E                     _dtoa:
  8748                           	callstack 22
  8749   00311E                     
  8750                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  8751   00311E  BE1B               	btfsc	(dtoa@d+3)^0,7,c
  8752   003120  EF94  F018         	goto	u8181
  8753   003124  EF97  F018         	goto	u8180
  8754   003128                     u8181:
  8755   003128  0E01               	movlw	1
  8756   00312A  EF98  F018         	goto	u8190
  8757   00312E                     u8180:
  8758   00312E  0E00               	movlw	0
  8759   003130                     u8190:
  8760   003130  6E22               	movwf	dtoa@s^0,c
  8761                           
  8762                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
  8763   003132  0100               	movlb	0	; () banked
  8764   003134  BF93               	btfsc	(_prec+1)& (0+255),7,b
  8765   003136  EF9F  F018         	goto	u8201
  8766   00313A  EFA1  F018         	goto	u8200
  8767   00313E                     u8201:
  8768   00313E  EFA2  F018         	goto	l7083
  8769   003142                     u8200:
  8770   003142                     
  8771                           ; BSR set to: 0
  8772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
  8773   003142  9394               	bcf	_flags& (0+255),1,b
  8774   003144                     l7083:
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  8778   003144  BF93               	btfsc	(_prec+1)& (0+255),7,b
  8779   003146  EFA9  F018         	goto	u8210
  8780   00314A  EFA7  F018         	goto	u8211
  8781   00314E                     u8211:
  8782   00314E  EFAF  F018         	goto	l1297
  8783   003152                     u8210:
  8784   003152                     
  8785                           ; BSR set to: 0
  8786   003152  0E00               	movlw	0
  8787   003154  6E1F               	movwf	(dtoa@p+1)^0,c
  8788   003156  0E01               	movlw	1
  8789   003158  6E1E               	movwf	dtoa@p^0,c
  8790   00315A  EFB3  F018         	goto	l1299
  8791   00315E                     l1297:
  8792                           
  8793                           ; BSR set to: 0
  8794   00315E  C092  F01E         	movff	_prec,dtoa@p
  8795   003162  C093  F01F         	movff	_prec+1,dtoa@p+1
  8796   003166                     l1299:
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  8800   003166  C090  F020         	movff	_width,dtoa@w
  8801   00316A  C091  F021         	movff	_width+1,dtoa@w+1
  8802   00316E                     
  8803                           ; BSR set to: 0
  8804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  8805   00316E  5022               	movf	dtoa@s^0,w,c
  8806   003170  B4D8               	btfsc	status,2,c
  8807   003172  EFBD  F018         	goto	u8221
  8808   003176  EFBF  F018         	goto	u8220
  8809   00317A                     u8221:
  8810   00317A  EFD6  F018         	goto	l1300
  8811   00317E                     u8220:
  8812   00317E                     
  8813                           ; BSR set to: 0
  8814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  8815   00317E  0620               	decf	dtoa@w^0,f,c
  8816   003180  A0D8               	btfss	status,0,c
  8817   003182  0621               	decf	(dtoa@w+1)^0,f,c
  8818   003184                     
  8819                           ; BSR set to: 0
  8820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  8821   003184  5022               	movf	dtoa@s^0,w,c
  8822   003186  A4D8               	btfss	status,2,c
  8823   003188  EFC8  F018         	goto	u8231
  8824   00318C  EFCA  F018         	goto	u8230
  8825   003190                     u8231:
  8826   003190  EFD0  F018         	goto	l7095
  8827   003194                     u8230:
  8828   003194                     
  8829                           ; BSR set to: 0
  8830   003194  0E00               	movlw	0
  8831   003196  6E1D               	movwf	(_dtoa$1419+1)^0,c
  8832   003198  0E2B               	movlw	43
  8833   00319A  6E1C               	movwf	_dtoa$1419^0,c
  8834   00319C  EFD4  F018         	goto	l7097
  8835   0031A0                     l7095:
  8836                           
  8837                           ; BSR set to: 0
  8838   0031A0  0E00               	movlw	0
  8839   0031A2  6E1D               	movwf	(_dtoa$1419+1)^0,c
  8840   0031A4  0E2D               	movlw	45
  8841   0031A6  6E1C               	movwf	_dtoa$1419^0,c
  8842   0031A8                     l7097:
  8843                           
  8844                           ; BSR set to: 0
  8845   0031A8  C01C  F022         	movff	_dtoa$1419,dtoa@s
  8846   0031AC                     l1300:
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  8850   0031AC  0E00               	movlw	0
  8851   0031AE  6E24               	movwf	(dtoa@i+1)^0,c
  8852   0031B0  0E4F               	movlw	79
  8853   0031B2  6E23               	movwf	dtoa@i^0,c
  8854   0031B4                     
  8855                           ; BSR set to: 0
  8856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  8857   0031B4  0E00               	movlw	0
  8858   0031B6  0101               	movlb	1	; () banked
  8859   0031B8  6F4F               	movwf	(_dbuf+79)& (0+255),b
  8860                           
  8861                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  8862   0031BA  EF23  F019         	goto	l7111
  8863   0031BE                     l7101:
  8864                           
  8865                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  8866   0031BE  0623               	decf	dtoa@i^0,f,c
  8867   0031C0  A0D8               	btfss	status,0,c
  8868   0031C2  0624               	decf	(dtoa@i+1)^0,f,c
  8869   0031C4                     
  8870                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  8871   0031C4  0E00               	movlw	low _dbuf
  8872   0031C6  2423               	addwf	dtoa@i^0,w,c
  8873   0031C8  6ED9               	movwf	fsr2l,c
  8874   0031CA  0E01               	movlw	high _dbuf
  8875   0031CC  2024               	addwfc	(dtoa@i+1)^0,w,c
  8876   0031CE  6EDA               	movwf	fsr2h,c
  8877   0031D0  C018  F001         	movff	dtoa@d,___almod@dividend
  8878   0031D4  C019  F002         	movff	dtoa@d+1,___almod@dividend+1
  8879   0031D8  C01A  F003         	movff	dtoa@d+2,___almod@dividend+2
  8880   0031DC  C01B  F004         	movff	dtoa@d+3,___almod@dividend+3
  8881   0031E0  0E0A               	movlw	10
  8882   0031E2  6E05               	movwf	___almod@divisor^0,c
  8883   0031E4  0E00               	movlw	0
  8884   0031E6  6E06               	movwf	(___almod@divisor+1)^0,c
  8885   0031E8  0E00               	movlw	0
  8886   0031EA  6E07               	movwf	(___almod@divisor+2)^0,c
  8887   0031EC  0E00               	movlw	0
  8888   0031EE  6E08               	movwf	(___almod@divisor+3)^0,c
  8889   0031F0  ECD8  F01E         	call	___almod	;wreg free
  8890   0031F4  C001  F00B         	movff	?___almod,abs@a
  8891   0031F8  C002  F00C         	movff	?___almod+1,abs@a+1
  8892   0031FC  ECBE  F025         	call	_abs	;wreg free
  8893   003200  500B               	movf	?_abs^0,w,c
  8894   003202  0F30               	addlw	48
  8895   003204  6EDF               	movwf	indf2,c
  8896   003206                     
  8897                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
  8898   003206  061E               	decf	dtoa@p^0,f,c
  8899   003208  A0D8               	btfss	status,0,c
  8900   00320A  061F               	decf	(dtoa@p+1)^0,f,c
  8901   00320C                     
  8902                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  8903   00320C  0620               	decf	dtoa@w^0,f,c
  8904   00320E  A0D8               	btfss	status,0,c
  8905   003210  0621               	decf	(dtoa@w+1)^0,f,c
  8906   003212                     
  8907                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  8908   003212  C018  F001         	movff	dtoa@d,___aldiv@dividend
  8909   003216  C019  F002         	movff	dtoa@d+1,___aldiv@dividend+1
  8910   00321A  C01A  F003         	movff	dtoa@d+2,___aldiv@dividend+2
  8911   00321E  C01B  F004         	movff	dtoa@d+3,___aldiv@dividend+3
  8912   003222  0E0A               	movlw	10
  8913   003224  6E05               	movwf	___aldiv@divisor^0,c
  8914   003226  0E00               	movlw	0
  8915   003228  6E06               	movwf	(___aldiv@divisor+1)^0,c
  8916   00322A  0E00               	movlw	0
  8917   00322C  6E07               	movwf	(___aldiv@divisor+2)^0,c
  8918   00322E  0E00               	movlw	0
  8919   003230  6E08               	movwf	(___aldiv@divisor+3)^0,c
  8920   003232  ECCE  F01C         	call	___aldiv	;wreg free
  8921   003236  C001  F018         	movff	?___aldiv,dtoa@d
  8922   00323A  C002  F019         	movff	?___aldiv+1,dtoa@d+1
  8923   00323E  C003  F01A         	movff	?___aldiv+2,dtoa@d+2
  8924   003242  C004  F01B         	movff	?___aldiv+3,dtoa@d+3
  8925   003246                     l7111:
  8926                           
  8927                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  8928   003246  BE24               	btfsc	(dtoa@i+1)^0,7,c
  8929   003248  EF2E  F019         	goto	u8241
  8930   00324C  5024               	movf	(dtoa@i+1)^0,w,c
  8931   00324E  E108               	bnz	u8240
  8932   003250  0423               	decf	dtoa@i^0,w,c
  8933   003252  A0D8               	btfss	status,0,c
  8934   003254  EF2E  F019         	goto	u8241
  8935   003258  EF30  F019         	goto	u8240
  8936   00325C                     u8241:
  8937   00325C  EF5D  F019         	goto	l7121
  8938   003260                     u8240:
  8939   003260  5018               	movf	dtoa@d^0,w,c
  8940   003262  1019               	iorwf	(dtoa@d+1)^0,w,c
  8941   003264  101A               	iorwf	(dtoa@d+2)^0,w,c
  8942   003266  101B               	iorwf	(dtoa@d+3)^0,w,c
  8943   003268  A4D8               	btfss	status,2,c
  8944   00326A  EF39  F019         	goto	u8251
  8945   00326E  EF3B  F019         	goto	u8250
  8946   003272                     u8251:
  8947   003272  EFDF  F018         	goto	l7101
  8948   003276                     u8250:
  8949   003276  BE1F               	btfsc	(dtoa@p+1)^0,7,c
  8950   003278  EF48  F019         	goto	u8260
  8951   00327C  501F               	movf	(dtoa@p+1)^0,w,c
  8952   00327E  E106               	bnz	u8261
  8953   003280  041E               	decf	dtoa@p^0,w,c
  8954   003282  B0D8               	btfsc	status,0,c
  8955   003284  EF46  F019         	goto	u8261
  8956   003288  EF48  F019         	goto	u8260
  8957   00328C                     u8261:
  8958   00328C  EFDF  F018         	goto	l7101
  8959   003290                     u8260:
  8960   003290  BE21               	btfsc	(dtoa@w+1)^0,7,c
  8961   003292  EF53  F019         	goto	u8271
  8962   003296  5021               	movf	(dtoa@w+1)^0,w,c
  8963   003298  E108               	bnz	u8270
  8964   00329A  0420               	decf	dtoa@w^0,w,c
  8965   00329C  A0D8               	btfss	status,0,c
  8966   00329E  EF53  F019         	goto	u8271
  8967   0032A2  EF55  F019         	goto	u8270
  8968   0032A6                     u8271:
  8969   0032A6  EF5D  F019         	goto	l7121
  8970   0032AA                     u8270:
  8971   0032AA  0100               	movlb	0	; () banked
  8972   0032AC  B394               	btfsc	_flags& (0+255),1,b
  8973   0032AE  EF5B  F019         	goto	u8281
  8974   0032B2  EF5D  F019         	goto	u8280
  8975   0032B6                     u8281:
  8976   0032B6  EFDF  F018         	goto	l7101
  8977   0032BA                     u8280:
  8978   0032BA                     l7121:
  8979                           
  8980                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  8981   0032BA  5022               	movf	dtoa@s^0,w,c
  8982   0032BC  B4D8               	btfsc	status,2,c
  8983   0032BE  EF63  F019         	goto	u8291
  8984   0032C2  EF65  F019         	goto	u8290
  8985   0032C6                     u8291:
  8986   0032C6  EF70  F019         	goto	l7127
  8987   0032CA                     u8290:
  8988   0032CA                     
  8989                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  8990   0032CA  0623               	decf	dtoa@i^0,f,c
  8991   0032CC  A0D8               	btfss	status,0,c
  8992   0032CE  0624               	decf	(dtoa@i+1)^0,f,c
  8993   0032D0                     
  8994                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  8995   0032D0  0E00               	movlw	low _dbuf
  8996   0032D2  2423               	addwf	dtoa@i^0,w,c
  8997   0032D4  6ED9               	movwf	fsr2l,c
  8998   0032D6  0E01               	movlw	high _dbuf
  8999   0032D8  2024               	addwfc	(dtoa@i+1)^0,w,c
  9000   0032DA  6EDA               	movwf	fsr2h,c
  9001   0032DC  C022  FFDF         	movff	dtoa@s,indf2
  9002   0032E0                     l7127:
  9003                           
  9004                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  9005   0032E0  C017  F00F         	movff	dtoa@fp,pad@fp
  9006   0032E4  0E00               	movlw	low _dbuf
  9007   0032E6  2423               	addwf	dtoa@i^0,w,c
  9008   0032E8  6E10               	movwf	pad@buf^0,c
  9009   0032EA  0E01               	movlw	high _dbuf
  9010   0032EC  2024               	addwfc	(dtoa@i+1)^0,w,c
  9011   0032EE  6E11               	movwf	(pad@buf+1)^0,c
  9012   0032F0  C020  F012         	movff	dtoa@w,pad@p
  9013   0032F4  C021  F013         	movff	dtoa@w+1,pad@p+1
  9014   0032F8  EC04  F023         	call	_pad	;wreg free
  9015   0032FC  0012               	return		;funcret
  9016   0032FE                     __end_of_dtoa:
  9017                           	callstack 0
  9018                           
  9019 ;; *************** function _pad *****************
  9020 ;; Defined at:
  9021 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  9024 ;;		 -> sprintf@f(12), 
  9025 ;;  buf             2   15[COMRAM] PTR unsigned char 
  9026 ;;		 -> dbuf(80), 
  9027 ;;  p               2   17[COMRAM] int 
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  i               2   20[COMRAM] int 
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9039 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;Total ram usage:        8 bytes
  9044 ;; Hardware stack levels used: 1
  9045 ;; Hardware stack levels required when called: 3
  9046 ;; This function calls:
  9047 ;;		_fputc
  9048 ;;		_fputs
  9049 ;; This function is called by:
  9050 ;;		_dtoa
  9051 ;;		_efgtoa
  9052 ;;		_utoa
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text36
  9057   004608                     __ptext36:
  9058                           	callstack 0
  9059   004608                     _pad:
  9060                           	callstack 22
  9061   004608                     
  9062                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  9063   004608  BE13               	btfsc	(pad@p+1)^0,7,c
  9064   00460A  EF0B  F023         	goto	u7950
  9065   00460E  EF09  F023         	goto	u7951
  9066   004612                     u7951:
  9067   004612  EF0F  F023         	goto	l1288
  9068   004616                     u7950:
  9069   004616                     
  9070                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9071   004616  0E00               	movlw	0
  9072   004618  6E13               	movwf	(pad@p+1)^0,c
  9073   00461A  0E00               	movlw	0
  9074   00461C  6E12               	movwf	pad@p^0,c
  9075   00461E                     l1288:
  9076                           
  9077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9078   00461E  0E00               	movlw	0
  9079   004620  6E16               	movwf	(pad@i+1)^0,c
  9080   004622  0E00               	movlw	0
  9081   004624  6E15               	movwf	pad@i^0,c
  9082                           
  9083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9084   004626  EF1F  F023         	goto	l6997
  9085   00462A                     l6993:
  9086                           
  9087                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9088   00462A  0E00               	movlw	0
  9089   00462C  6E02               	movwf	(fputc@c+1)^0,c
  9090   00462E  0E20               	movlw	32
  9091   004630  6E01               	movwf	fputc@c^0,c
  9092   004632  C00F  F003         	movff	pad@fp,fputc@fp
  9093   004636  EC31  F020         	call	_fputc	;wreg free
  9094   00463A                     
  9095                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9096   00463A  4A15               	infsnz	pad@i^0,f,c
  9097   00463C  2A16               	incf	(pad@i+1)^0,f,c
  9098   00463E                     l6997:
  9099                           
  9100                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9101   00463E  5012               	movf	pad@p^0,w,c
  9102   004640  5C15               	subwf	pad@i^0,w,c
  9103   004642  5016               	movf	(pad@i+1)^0,w,c
  9104   004644  0A80               	xorlw	128
  9105   004646  6E14               	movwf	??_pad^0,c
  9106   004648  5013               	movf	(pad@p+1)^0,w,c
  9107   00464A  0A80               	xorlw	128
  9108   00464C  5814               	subwfb	??_pad^0,w,c
  9109   00464E  A0D8               	btfss	status,0,c
  9110   004650  EF2C  F023         	goto	u7961
  9111   004654  EF2E  F023         	goto	u7960
  9112   004658                     u7961:
  9113   004658  EF15  F023         	goto	l6993
  9114   00465C                     u7960:
  9115   00465C                     
  9116                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9117   00465C  C010  F009         	movff	pad@buf,fputs@s
  9118   004660  C011  F00A         	movff	pad@buf+1,fputs@s+1
  9119   004664  C00F  F00B         	movff	pad@fp,fputs@fp
  9120   004668  ECF1  F024         	call	_fputs	;wreg free
  9121   00466C  0012               	return		;funcret
  9122   00466E                     __end_of_pad:
  9123                           	callstack 0
  9124                           
  9125 ;; *************** function _fputs *****************
  9126 ;; Defined at:
  9127 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;  s               2    8[COMRAM] PTR const unsigned char 
  9130 ;;		 -> dbuf(80), 
  9131 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  9132 ;;		 -> sprintf@f(12), 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  i               2   12[COMRAM] int 
  9135 ;;  c               1   11[COMRAM] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  2    8[COMRAM] int 
  9138 ;; Registers used:
  9139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9145 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9146 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;Total ram usage:        6 bytes
  9150 ;; Hardware stack levels used: 1
  9151 ;; Hardware stack levels required when called: 2
  9152 ;; This function calls:
  9153 ;;		_fputc
  9154 ;; This function is called by:
  9155 ;;		_pad
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text37
  9160   0049E2                     __ptext37:
  9161                           	callstack 0
  9162   0049E2                     _fputs:
  9163                           	callstack 22
  9164   0049E2  0E00               	movlw	0
  9165   0049E4  6E0E               	movwf	(fputs@i+1)^0,c
  9166   0049E6  0E00               	movlw	0
  9167   0049E8  6E0D               	movwf	fputs@i^0,c
  9168   0049EA  EF00  F025         	goto	l6499
  9169   0049EE                     l6495:
  9170   0049EE  C00C  F001         	movff	fputs@c,fputc@c
  9171   0049F2  6A02               	clrf	(fputc@c+1)^0,c
  9172   0049F4  C00B  F003         	movff	fputs@fp,fputc@fp
  9173   0049F8  EC31  F020         	call	_fputc	;wreg free
  9174   0049FC  4A0D               	infsnz	fputs@i^0,f,c
  9175   0049FE  2A0E               	incf	(fputs@i+1)^0,f,c
  9176   004A00                     l6499:
  9177   004A00  500D               	movf	fputs@i^0,w,c
  9178   004A02  2409               	addwf	fputs@s^0,w,c
  9179   004A04  6ED9               	movwf	fsr2l,c
  9180   004A06  500E               	movf	(fputs@i+1)^0,w,c
  9181   004A08  200A               	addwfc	(fputs@s+1)^0,w,c
  9182   004A0A  6EDA               	movwf	fsr2h,c
  9183   004A0C  50DF               	movf	indf2,w,c
  9184   004A0E  6E0C               	movwf	fputs@c^0,c
  9185   004A10  500C               	movf	fputs@c^0,w,c
  9186   004A12  A4D8               	btfss	status,2,c
  9187   004A14  EF0E  F025         	goto	u7181
  9188   004A18  EF10  F025         	goto	u7180
  9189   004A1C                     u7181:
  9190   004A1C  EFF7  F024         	goto	l6495
  9191   004A20                     u7180:
  9192   004A20  0012               	return		;funcret
  9193   004A22                     __end_of_fputs:
  9194                           	callstack 0
  9195                           
  9196 ;; *************** function _fputc *****************
  9197 ;; Defined at:
  9198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  c               2    0[COMRAM] int 
  9201 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  9202 ;;		 -> sprintf@f(12), 
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  2    0[COMRAM] int 
  9207 ;; Registers used:
  9208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9214 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9216 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9217 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9218 ;;Total ram usage:        8 bytes
  9219 ;; Hardware stack levels used: 1
  9220 ;; Hardware stack levels required when called: 1
  9221 ;; This function calls:
  9222 ;;		_putch
  9223 ;; This function is called by:
  9224 ;;		_pad
  9225 ;;		_vfpfcnvrt
  9226 ;;		_fputs
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text38
  9231   004062                     __ptext38:
  9232                           	callstack 0
  9233   004062                     _fputc:
  9234                           	callstack 22
  9235   004062  5003               	movf	fputc@fp^0,w,c
  9236   004064  B4D8               	btfsc	status,2,c
  9237   004066  EF37  F020         	goto	u6751
  9238   00406A  EF39  F020         	goto	u6750
  9239   00406E                     u6751:
  9240   00406E  EF41  F020         	goto	l6281
  9241   004072                     u6750:
  9242   004072  5003               	movf	fputc@fp^0,w,c
  9243   004074  A4D8               	btfss	status,2,c
  9244   004076  EF3F  F020         	goto	u6761
  9245   00407A  EF41  F020         	goto	u6760
  9246   00407E                     u6761:
  9247   00407E  EF46  F020         	goto	l6283
  9248   004082                     u6760:
  9249   004082                     l6281:
  9250   004082  5001               	movf	fputc@c^0,w,c
  9251   004084  EC30  F026         	call	_putch
  9252   004088  EF8D  F020         	goto	l1508
  9253   00408C                     l6283:
  9254   00408C  5003               	movf	fputc@fp^0,w,c
  9255   00408E  6ED9               	movwf	fsr2l,c
  9256   004090  6ADA               	clrf	fsr2h,c
  9257   004092  0E0A               	movlw	10
  9258   004094  26D9               	addwf	fsr2l,f,c
  9259   004096  50DE               	movf	postinc2,w,c
  9260   004098  10DE               	iorwf	postinc2,w,c
  9261   00409A  B4D8               	btfsc	status,2,c
  9262   00409C  EF52  F020         	goto	u6771
  9263   0040A0  EF54  F020         	goto	u6770
  9264   0040A4                     u6771:
  9265   0040A4  EF6D  F020         	goto	l6287
  9266   0040A8                     u6770:
  9267   0040A8  5003               	movf	fputc@fp^0,w,c
  9268   0040AA  6ED9               	movwf	fsr2l,c
  9269   0040AC  6ADA               	clrf	fsr2h,c
  9270   0040AE  0E0A               	movlw	10
  9271   0040B0  26D9               	addwf	fsr2l,f,c
  9272   0040B2  5003               	movf	fputc@fp^0,w,c
  9273   0040B4  6EE1               	movwf	fsr1l,c
  9274   0040B6  6AE2               	clrf	fsr1h,c
  9275   0040B8  0E03               	movlw	3
  9276   0040BA  26E1               	addwf	fsr1l,f,c
  9277   0040BC  50DE               	movf	postinc2,w,c
  9278   0040BE  5CE6               	subwf	postinc1,w,c
  9279   0040C0  50E6               	movf	postinc1,w,c
  9280   0040C2  0A80               	xorlw	128
  9281   0040C4  6E08               	movwf	(??_fputc+4)^0,c
  9282   0040C6  50DE               	movf	postinc2,w,c
  9283   0040C8  0A80               	xorlw	128
  9284   0040CA  5808               	subwfb	(??_fputc+4)^0,w,c
  9285   0040CC  B0D8               	btfsc	status,0,c
  9286   0040CE  EF6B  F020         	goto	u6781
  9287   0040D2  EF6D  F020         	goto	u6780
  9288   0040D6                     u6781:
  9289   0040D6  EF8D  F020         	goto	l1508
  9290   0040DA                     u6780:
  9291   0040DA                     l6287:
  9292   0040DA  5003               	movf	fputc@fp^0,w,c
  9293   0040DC  6ED9               	movwf	fsr2l,c
  9294   0040DE  6ADA               	clrf	fsr2h,c
  9295   0040E0  0E03               	movlw	3
  9296   0040E2  26D9               	addwf	fsr2l,f,c
  9297   0040E4  CFDE F004          	movff	postinc2,??_fputc
  9298   0040E8  CFDD F005          	movff	postdec2,??_fputc+1
  9299   0040EC  5003               	movf	fputc@fp^0,w,c
  9300   0040EE  6ED9               	movwf	fsr2l,c
  9301   0040F0  6ADA               	clrf	fsr2h,c
  9302   0040F2  CFDE F006          	movff	postinc2,??_fputc+2
  9303   0040F6  CFDD F007          	movff	postdec2,??_fputc+3
  9304   0040FA  5004               	movf	??_fputc^0,w,c
  9305   0040FC  2406               	addwf	(??_fputc+2)^0,w,c
  9306   0040FE  6ED9               	movwf	fsr2l,c
  9307   004100  5005               	movf	(??_fputc+1)^0,w,c
  9308   004102  2007               	addwfc	(??_fputc+3)^0,w,c
  9309   004104  6EDA               	movwf	fsr2h,c
  9310   004106  C001  FFDF         	movff	fputc@c,indf2
  9311   00410A  5003               	movf	fputc@fp^0,w,c
  9312   00410C  6ED9               	movwf	fsr2l,c
  9313   00410E  6ADA               	clrf	fsr2h,c
  9314   004110  0E03               	movlw	3
  9315   004112  26D9               	addwf	fsr2l,f,c
  9316   004114  2ADE               	incf	postinc2,f,c
  9317   004116  0E00               	movlw	0
  9318   004118  22DD               	addwfc	postdec2,f,c
  9319   00411A                     l1508:
  9320   00411A  0012               	return		;funcret
  9321   00411C                     __end_of_fputc:
  9322                           	callstack 0
  9323                           
  9324 ;; *************** function _putch *****************
  9325 ;; Defined at:
  9326 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  c               1    wreg     unsigned char 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;  c               1    0[COMRAM] unsigned char 
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      void 
  9333 ;; Registers used:
  9334 ;;		wreg
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;Total ram usage:        0 bytes
  9345 ;; Hardware stack levels used: 1
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		_fputc
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           	psect	text39
  9354   004C60                     __ptext39:
  9355                           	callstack 0
  9356   004C60                     _putch:
  9357                           	callstack 22
  9358   004C60  0012               	return		;funcret
  9359   004C62                     __end_of_putch:
  9360                           	callstack 0
  9361                           
  9362 ;; *************** function _abs *****************
  9363 ;; Defined at:
  9364 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  a               2   10[COMRAM] int 
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;		None
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  2   10[COMRAM] int 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9381 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9382 ;;Total ram usage:        4 bytes
  9383 ;; Hardware stack levels used: 1
  9384 ;; This function calls:
  9385 ;;		Nothing
  9386 ;; This function is called by:
  9387 ;;		_dtoa
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           	psect	text40
  9392   004B7C                     __ptext40:
  9393                           	callstack 0
  9394   004B7C                     _abs:
  9395                           	callstack 25
  9396   004B7C  BE0C               	btfsc	(abs@a+1)^0,7,c
  9397   004B7E  EFC3  F025         	goto	u7971
  9398   004B82  EFC5  F025         	goto	u7970
  9399   004B86                     u7971:
  9400   004B86  EFCB  F025         	goto	l1467
  9401   004B8A                     u7970:
  9402   004B8A  C00B  F00B         	movff	abs@a,?_abs
  9403   004B8E  C00C  F00C         	movff	abs@a+1,?_abs+1
  9404   004B92  EFD7  F025         	goto	l1470
  9405   004B96                     l1467:
  9406   004B96  C00B  F00D         	movff	abs@a,??_abs
  9407   004B9A  C00C  F00E         	movff	abs@a+1,??_abs+1
  9408   004B9E  1E0D               	comf	??_abs^0,f,c
  9409   004BA0  1E0E               	comf	(??_abs+1)^0,f,c
  9410   004BA2  4A0D               	infsnz	??_abs^0,f,c
  9411   004BA4  2A0E               	incf	(??_abs+1)^0,f,c
  9412   004BA6  C00D  F00B         	movff	??_abs,?_abs
  9413   004BAA  C00E  F00C         	movff	??_abs+1,?_abs+1
  9414   004BAE                     l1470:
  9415   004BAE  0012               	return		;funcret
  9416   004BB0                     __end_of_abs:
  9417                           	callstack 0
  9418                           
  9419 ;; *************** function ___almod *****************
  9420 ;; Defined at:
  9421 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\almod.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  dividend        4    0[COMRAM] long 
  9424 ;;  divisor         4    4[COMRAM] long 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;  sign            1    9[COMRAM] unsigned char 
  9427 ;;  counter         1    8[COMRAM] unsigned char 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  4    0[COMRAM] long 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9437 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;Total ram usage:       10 bytes
  9442 ;; Hardware stack levels used: 1
  9443 ;; This function calls:
  9444 ;;		Nothing
  9445 ;; This function is called by:
  9446 ;;		_dtoa
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text41
  9451   003DB0                     __ptext41:
  9452                           	callstack 0
  9453   003DB0                     ___almod:
  9454                           	callstack 25
  9455   003DB0  0E00               	movlw	0
  9456   003DB2  6E0A               	movwf	___almod@sign^0,c
  9457   003DB4  BE04               	btfsc	(___almod@dividend+3)^0,7,c
  9458   003DB6  EFE1  F01E         	goto	u7280
  9459   003DBA  EFDF  F01E         	goto	u7281
  9460   003DBE                     u7281:
  9461   003DBE  EFEB  F01E         	goto	l6581
  9462   003DC2                     u7280:
  9463   003DC2  1E04               	comf	(___almod@dividend+3)^0,f,c
  9464   003DC4  1E03               	comf	(___almod@dividend+2)^0,f,c
  9465   003DC6  1E02               	comf	(___almod@dividend+1)^0,f,c
  9466   003DC8  6C01               	negf	___almod@dividend^0,c
  9467   003DCA  0E00               	movlw	0
  9468   003DCC  2202               	addwfc	(___almod@dividend+1)^0,f,c
  9469   003DCE  2203               	addwfc	(___almod@dividend+2)^0,f,c
  9470   003DD0  2204               	addwfc	(___almod@dividend+3)^0,f,c
  9471   003DD2  0E01               	movlw	1
  9472   003DD4  6E0A               	movwf	___almod@sign^0,c
  9473   003DD6                     l6581:
  9474   003DD6  BE08               	btfsc	(___almod@divisor+3)^0,7,c
  9475   003DD8  EFF2  F01E         	goto	u7290
  9476   003DDC  EFF0  F01E         	goto	u7291
  9477   003DE0                     u7291:
  9478   003DE0  EFFA  F01E         	goto	l6585
  9479   003DE4                     u7290:
  9480   003DE4  1E08               	comf	(___almod@divisor+3)^0,f,c
  9481   003DE6  1E07               	comf	(___almod@divisor+2)^0,f,c
  9482   003DE8  1E06               	comf	(___almod@divisor+1)^0,f,c
  9483   003DEA  6C05               	negf	___almod@divisor^0,c
  9484   003DEC  0E00               	movlw	0
  9485   003DEE  2206               	addwfc	(___almod@divisor+1)^0,f,c
  9486   003DF0  2207               	addwfc	(___almod@divisor+2)^0,f,c
  9487   003DF2  2208               	addwfc	(___almod@divisor+3)^0,f,c
  9488   003DF4                     l6585:
  9489   003DF4  5005               	movf	___almod@divisor^0,w,c
  9490   003DF6  1006               	iorwf	(___almod@divisor+1)^0,w,c
  9491   003DF8  1007               	iorwf	(___almod@divisor+2)^0,w,c
  9492   003DFA  1008               	iorwf	(___almod@divisor+3)^0,w,c
  9493   003DFC  B4D8               	btfsc	status,2,c
  9494   003DFE  EF03  F01F         	goto	u7301
  9495   003E02  EF05  F01F         	goto	u7300
  9496   003E06                     u7301:
  9497   003E06  EF35  F01F         	goto	l6601
  9498   003E0A                     u7300:
  9499   003E0A  0E01               	movlw	1
  9500   003E0C  6E09               	movwf	___almod@counter^0,c
  9501   003E0E  EF0F  F01F         	goto	l6591
  9502   003E12                     l6589:
  9503   003E12  90D8               	bcf	status,0,c
  9504   003E14  3605               	rlcf	___almod@divisor^0,f,c
  9505   003E16  3606               	rlcf	(___almod@divisor+1)^0,f,c
  9506   003E18  3607               	rlcf	(___almod@divisor+2)^0,f,c
  9507   003E1A  3608               	rlcf	(___almod@divisor+3)^0,f,c
  9508   003E1C  2A09               	incf	___almod@counter^0,f,c
  9509   003E1E                     l6591:
  9510   003E1E  AE08               	btfss	(___almod@divisor+3)^0,7,c
  9511   003E20  EF14  F01F         	goto	u7311
  9512   003E24  EF16  F01F         	goto	u7310
  9513   003E28                     u7311:
  9514   003E28  EF09  F01F         	goto	l6589
  9515   003E2C                     u7310:
  9516   003E2C                     l6593:
  9517   003E2C  5005               	movf	___almod@divisor^0,w,c
  9518   003E2E  5C01               	subwf	___almod@dividend^0,w,c
  9519   003E30  5006               	movf	(___almod@divisor+1)^0,w,c
  9520   003E32  5802               	subwfb	(___almod@dividend+1)^0,w,c
  9521   003E34  5007               	movf	(___almod@divisor+2)^0,w,c
  9522   003E36  5803               	subwfb	(___almod@dividend+2)^0,w,c
  9523   003E38  5008               	movf	(___almod@divisor+3)^0,w,c
  9524   003E3A  5804               	subwfb	(___almod@dividend+3)^0,w,c
  9525   003E3C  A0D8               	btfss	status,0,c
  9526   003E3E  EF23  F01F         	goto	u7321
  9527   003E42  EF25  F01F         	goto	u7320
  9528   003E46                     u7321:
  9529   003E46  EF2D  F01F         	goto	l6597
  9530   003E4A                     u7320:
  9531   003E4A  5005               	movf	___almod@divisor^0,w,c
  9532   003E4C  5E01               	subwf	___almod@dividend^0,f,c
  9533   003E4E  5006               	movf	(___almod@divisor+1)^0,w,c
  9534   003E50  5A02               	subwfb	(___almod@dividend+1)^0,f,c
  9535   003E52  5007               	movf	(___almod@divisor+2)^0,w,c
  9536   003E54  5A03               	subwfb	(___almod@dividend+2)^0,f,c
  9537   003E56  5008               	movf	(___almod@divisor+3)^0,w,c
  9538   003E58  5A04               	subwfb	(___almod@dividend+3)^0,f,c
  9539   003E5A                     l6597:
  9540   003E5A  90D8               	bcf	status,0,c
  9541   003E5C  3208               	rrcf	(___almod@divisor+3)^0,f,c
  9542   003E5E  3207               	rrcf	(___almod@divisor+2)^0,f,c
  9543   003E60  3206               	rrcf	(___almod@divisor+1)^0,f,c
  9544   003E62  3205               	rrcf	___almod@divisor^0,f,c
  9545   003E64  2E09               	decfsz	___almod@counter^0,f,c
  9546   003E66  EF16  F01F         	goto	l6593
  9547   003E6A                     l6601:
  9548   003E6A  500A               	movf	___almod@sign^0,w,c
  9549   003E6C  B4D8               	btfsc	status,2,c
  9550   003E6E  EF3B  F01F         	goto	u7331
  9551   003E72  EF3D  F01F         	goto	u7330
  9552   003E76                     u7331:
  9553   003E76  EF45  F01F         	goto	l6605
  9554   003E7A                     u7330:
  9555   003E7A  1E04               	comf	(___almod@dividend+3)^0,f,c
  9556   003E7C  1E03               	comf	(___almod@dividend+2)^0,f,c
  9557   003E7E  1E02               	comf	(___almod@dividend+1)^0,f,c
  9558   003E80  6C01               	negf	___almod@dividend^0,c
  9559   003E82  0E00               	movlw	0
  9560   003E84  2202               	addwfc	(___almod@dividend+1)^0,f,c
  9561   003E86  2203               	addwfc	(___almod@dividend+2)^0,f,c
  9562   003E88  2204               	addwfc	(___almod@dividend+3)^0,f,c
  9563   003E8A                     l6605:
  9564   003E8A  C001  F001         	movff	___almod@dividend,?___almod
  9565   003E8E  C002  F002         	movff	___almod@dividend+1,?___almod+1
  9566   003E92  C003  F003         	movff	___almod@dividend+2,?___almod+2
  9567   003E96  C004  F004         	movff	___almod@dividend+3,?___almod+3
  9568   003E9A  0012               	return		;funcret
  9569   003E9C                     __end_of___almod:
  9570                           	callstack 0
  9571                           
  9572 ;; *************** function ___aldiv *****************
  9573 ;; Defined at:
  9574 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  dividend        4    0[COMRAM] long 
  9577 ;;  divisor         4    4[COMRAM] long 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;  quotient        4   10[COMRAM] long 
  9580 ;;  sign            1    9[COMRAM] unsigned char 
  9581 ;;  counter         1    8[COMRAM] unsigned char 
  9582 ;; Return value:  Size  Location     Type
  9583 ;;                  4    0[COMRAM] long 
  9584 ;; Registers used:
  9585 ;;		wreg, status,2, status,0
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9591 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9594 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;Total ram usage:       14 bytes
  9596 ;; Hardware stack levels used: 1
  9597 ;; This function calls:
  9598 ;;		Nothing
  9599 ;; This function is called by:
  9600 ;;		_dtoa
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text42
  9605   00399C                     __ptext42:
  9606                           	callstack 0
  9607   00399C                     ___aldiv:
  9608                           	callstack 25
  9609   00399C  0E00               	movlw	0
  9610   00399E  6E0A               	movwf	___aldiv@sign^0,c
  9611   0039A0  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  9612   0039A2  EFD7  F01C         	goto	u7220
  9613   0039A6  EFD5  F01C         	goto	u7221
  9614   0039AA                     u7221:
  9615   0039AA  EFE1  F01C         	goto	l6537
  9616   0039AE                     u7220:
  9617   0039AE  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  9618   0039B0  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  9619   0039B2  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  9620   0039B4  6C05               	negf	___aldiv@divisor^0,c
  9621   0039B6  0E00               	movlw	0
  9622   0039B8  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  9623   0039BA  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  9624   0039BC  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  9625   0039BE  0E01               	movlw	1
  9626   0039C0  6E0A               	movwf	___aldiv@sign^0,c
  9627   0039C2                     l6537:
  9628   0039C2  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  9629   0039C4  EFE8  F01C         	goto	u7230
  9630   0039C8  EFE6  F01C         	goto	u7231
  9631   0039CC                     u7231:
  9632   0039CC  EFF2  F01C         	goto	l6543
  9633   0039D0                     u7230:
  9634   0039D0  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  9635   0039D2  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  9636   0039D4  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  9637   0039D6  6C01               	negf	___aldiv@dividend^0,c
  9638   0039D8  0E00               	movlw	0
  9639   0039DA  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  9640   0039DC  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  9641   0039DE  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  9642   0039E0  0E01               	movlw	1
  9643   0039E2  1A0A               	xorwf	___aldiv@sign^0,f,c
  9644   0039E4                     l6543:
  9645   0039E4  0E00               	movlw	0
  9646   0039E6  6E0B               	movwf	___aldiv@quotient^0,c
  9647   0039E8  0E00               	movlw	0
  9648   0039EA  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  9649   0039EC  0E00               	movlw	0
  9650   0039EE  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  9651   0039F0  0E00               	movlw	0
  9652   0039F2  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  9653   0039F4  5005               	movf	___aldiv@divisor^0,w,c
  9654   0039F6  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  9655   0039F8  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  9656   0039FA  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  9657   0039FC  B4D8               	btfsc	status,2,c
  9658   0039FE  EF03  F01D         	goto	u7241
  9659   003A02  EF05  F01D         	goto	u7240
  9660   003A06                     u7241:
  9661   003A06  EF3B  F01D         	goto	l6565
  9662   003A0A                     u7240:
  9663   003A0A  0E01               	movlw	1
  9664   003A0C  6E09               	movwf	___aldiv@counter^0,c
  9665   003A0E  EF0F  F01D         	goto	l6551
  9666   003A12                     l6549:
  9667   003A12  90D8               	bcf	status,0,c
  9668   003A14  3605               	rlcf	___aldiv@divisor^0,f,c
  9669   003A16  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  9670   003A18  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  9671   003A1A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  9672   003A1C  2A09               	incf	___aldiv@counter^0,f,c
  9673   003A1E                     l6551:
  9674   003A1E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  9675   003A20  EF14  F01D         	goto	u7251
  9676   003A24  EF16  F01D         	goto	u7250
  9677   003A28                     u7251:
  9678   003A28  EF09  F01D         	goto	l6549
  9679   003A2C                     u7250:
  9680   003A2C                     l6553:
  9681   003A2C  90D8               	bcf	status,0,c
  9682   003A2E  360B               	rlcf	___aldiv@quotient^0,f,c
  9683   003A30  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  9684   003A32  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  9685   003A34  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  9686   003A36  5005               	movf	___aldiv@divisor^0,w,c
  9687   003A38  5C01               	subwf	___aldiv@dividend^0,w,c
  9688   003A3A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9689   003A3C  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  9690   003A3E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9691   003A40  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  9692   003A42  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9693   003A44  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  9694   003A46  A0D8               	btfss	status,0,c
  9695   003A48  EF28  F01D         	goto	u7261
  9696   003A4C  EF2A  F01D         	goto	u7260
  9697   003A50                     u7261:
  9698   003A50  EF33  F01D         	goto	l6561
  9699   003A54                     u7260:
  9700   003A54  5005               	movf	___aldiv@divisor^0,w,c
  9701   003A56  5E01               	subwf	___aldiv@dividend^0,f,c
  9702   003A58  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9703   003A5A  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  9704   003A5C  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9705   003A5E  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  9706   003A60  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9707   003A62  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  9708   003A64  800B               	bsf	___aldiv@quotient^0,0,c
  9709   003A66                     l6561:
  9710   003A66  90D8               	bcf	status,0,c
  9711   003A68  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  9712   003A6A  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  9713   003A6C  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  9714   003A6E  3205               	rrcf	___aldiv@divisor^0,f,c
  9715   003A70  2E09               	decfsz	___aldiv@counter^0,f,c
  9716   003A72  EF16  F01D         	goto	l6553
  9717   003A76                     l6565:
  9718   003A76  500A               	movf	___aldiv@sign^0,w,c
  9719   003A78  B4D8               	btfsc	status,2,c
  9720   003A7A  EF41  F01D         	goto	u7271
  9721   003A7E  EF43  F01D         	goto	u7270
  9722   003A82                     u7271:
  9723   003A82  EF4B  F01D         	goto	l6569
  9724   003A86                     u7270:
  9725   003A86  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  9726   003A88  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  9727   003A8A  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  9728   003A8C  6C0B               	negf	___aldiv@quotient^0,c
  9729   003A8E  0E00               	movlw	0
  9730   003A90  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  9731   003A92  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  9732   003A94  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  9733   003A96                     l6569:
  9734   003A96  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  9735   003A9A  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  9736   003A9E  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  9737   003AA2  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  9738   003AA6  0012               	return		;funcret
  9739   003AA8                     __end_of___aldiv:
  9740                           	callstack 0
  9741                           
  9742 ;; *************** function _memset *****************
  9743 ;; Defined at:
  9744 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;  dest            2    0[COMRAM] PTR void 
  9747 ;;		 -> str_res(11), str_int_res(11), 
  9748 ;;  c               2    2[COMRAM] int 
  9749 ;;  n               2    4[COMRAM] unsigned int 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;  p               2    6[COMRAM] PTR unsigned char 
  9752 ;;		 -> str_res(11), str_int_res(11), 
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  2    0[COMRAM] PTR void 
  9755 ;; Registers used:
  9756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9762 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9763 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9766 ;;Total ram usage:        8 bytes
  9767 ;; Hardware stack levels used: 1
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_convert_sint32_to_string
  9772 ;;		_convert_float32_to_string
  9773 ;;		_convert_uint8_to_string
  9774 ;;		_convert_uint16_to_string
  9775 ;;		_convert_uint32_to_string
  9776 ;;		_convert_sint8_to_string
  9777 ;;		_convert_sint16_to_string
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780                           
  9781                           	psect	text43
  9782   004B0E                     __ptext43:
  9783                           	callstack 0
  9784   004B0E                     _memset:
  9785                           	callstack 29
  9786   004B0E  C001  F007         	movff	memset@dest,memset@p
  9787   004B12  C002  F008         	movff	memset@dest+1,memset@p+1
  9788   004B16  EF95  F025         	goto	l7555
  9789   004B1A                     l7551:
  9790   004B1A  C007  FFD9         	movff	memset@p,fsr2l
  9791   004B1E  C008  FFDA         	movff	memset@p+1,fsr2h
  9792   004B22  C003  FFDF         	movff	memset@c,indf2
  9793   004B26  4A07               	infsnz	memset@p^0,f,c
  9794   004B28  2A08               	incf	(memset@p+1)^0,f,c
  9795   004B2A                     l7555:
  9796   004B2A  0605               	decf	memset@n^0,f,c
  9797   004B2C  A0D8               	btfss	status,0,c
  9798   004B2E  0606               	decf	(memset@n+1)^0,f,c
  9799   004B30  2805               	incf	memset@n^0,w,c
  9800   004B32  E106               	bnz	u8821
  9801   004B34  2806               	incf	(memset@n+1)^0,w,c
  9802   004B36  A4D8               	btfss	status,2,c
  9803   004B38  EFA0  F025         	goto	u8821
  9804   004B3C  EFA2  F025         	goto	u8820
  9805   004B40                     u8821:
  9806   004B40  EF8D  F025         	goto	l7551
  9807   004B44                     u8820:
  9808   004B44  0012               	return		;funcret
  9809   004B46                     __end_of_memset:
  9810                           	callstack 0
  9811                           
  9812 ;; *************** function _application_intialize *****************
  9813 ;; Defined at:
  9814 ;;		line 103 in file "application.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;		None
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  1    wreg      void 
  9821 ;; Registers used:
  9822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;Total ram usage:        0 bytes
  9833 ;; Hardware stack levels used: 1
  9834 ;; Hardware stack levels required when called: 5
  9835 ;; This function calls:
  9836 ;;		_ecu_layer_intialize
  9837 ;; This function is called by:
  9838 ;;		_main
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           	psect	text44
  9843   004C5A                     __ptext44:
  9844                           	callstack 0
  9845   004C5A                     _application_intialize:
  9846                           	callstack 25
  9847   004C5A                     
  9848                           ;application.c: 104:     ecu_layer_intialize();
  9849   004C5A  EC24  F026         	call	_ecu_layer_intialize	;wreg free
  9850   004C5E  0012               	return		;funcret
  9851   004C60                     __end_of_application_intialize:
  9852                           	callstack 0
  9853                           
  9854 ;; *************** function _ecu_layer_intialize *****************
  9855 ;; Defined at:
  9856 ;;		line 71 in file "ECU_layer/ecu_layer_inti.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;		None
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;  ret             1    0        unsigned char 
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  1    wreg      void 
  9863 ;; Registers used:
  9864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;Total ram usage:        0 bytes
  9875 ;; Hardware stack levels used: 1
  9876 ;; Hardware stack levels required when called: 4
  9877 ;; This function calls:
  9878 ;;		_keypad_initialize
  9879 ;;		_lcd_4bit_intialize
  9880 ;; This function is called by:
  9881 ;;		_application_intialize
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text45
  9886   004C48                     __ptext45:
  9887                           	callstack 0
  9888   004C48                     _ecu_layer_intialize:
  9889                           	callstack 25
  9890   004C48  0ED9               	movlw	low _lcd_4
  9891   004C4A  6E11               	movwf	lcd_4bit_intialize@lcd^0,c
  9892   004C4C  ECC0  F01F         	call	_lcd_4bit_intialize	;wreg free
  9893   004C50  0ED1               	movlw	low _keypad
  9894   004C52  6E0C               	movwf	keypad_initialize@_keypad_obj^0,c
  9895   004C54  ECD0  F022         	call	_keypad_initialize	;wreg free
  9896   004C58  0012               	return		;funcret
  9897   004C5A                     __end_of_ecu_layer_intialize:
  9898                           	callstack 0
  9899                           
  9900 ;; *************** function _lcd_4bit_intialize *****************
  9901 ;; Defined at:
  9902 ;;		line 16 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  lcd             1   16[COMRAM] PTR const struct .
  9905 ;;		 -> lcd_4(6), 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  data_pins_co    1   19[COMRAM] unsigned char 
  9908 ;;  ret             1   18[COMRAM] unsigned char 
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      unsigned char 
  9911 ;; Registers used:
  9912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9918 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9922 ;;Total ram usage:        4 bytes
  9923 ;; Hardware stack levels used: 1
  9924 ;; Hardware stack levels required when called: 3
  9925 ;; This function calls:
  9926 ;;		_gpio_pin_intialize
  9927 ;;		_lcd_4bit_send_command
  9928 ;; This function is called by:
  9929 ;;		_ecu_layer_intialize
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text46
  9934   003F80                     __ptext46:
  9935                           	callstack 0
  9936   003F80                     _lcd_4bit_intialize:
  9937                           	callstack 25
  9938   003F80                     
  9939                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 18:     uint8 data_pins_counter = 0;
  9940   003F80  0E00               	movlw	0
  9941   003F82  6E14               	movwf	lcd_4bit_intialize@data_pins_counter^0,c
  9942                           
  9943                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 19:     if (((void*)0) == lcd) {
  9944   003F84  5011               	movf	lcd_4bit_intialize@lcd^0,w,c
  9945   003F86  A4D8               	btfss	status,2,c
  9946   003F88  EFC8  F01F         	goto	u5581
  9947   003F8C  EFCA  F01F         	goto	u5580
  9948   003F90                     u5581:
  9949   003F90  EFCE  F01F         	goto	l5249
  9950   003F94                     u5580:
  9951   003F94                     
  9952                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 20:         ret = (Std_ReturnType)0x00;
  9953   003F94  0E00               	movlw	0
  9954   003F96  6E13               	movwf	lcd_4bit_intialize@ret^0,c
  9955                           
  9956                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 21:     } else {
  9957   003F98  EF2F  F020         	goto	l5285
  9958   003F9C                     l5249:
  9959                           
  9960                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 22:         gpio_pin_intialize(&(lcd->lcd_rs));
  9961   003F9C  C011  F009         	movff	lcd_4bit_intialize@lcd,gpio_pin_intialize@_pin_config
  9962   003FA0  EC37  F023         	call	_gpio_pin_intialize	;wreg free
  9963                           
  9964                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 23:         gpio_pin_intialize(&(lcd->lcd_en));
  9965   003FA4  2811               	incf	lcd_4bit_intialize@lcd^0,w,c
  9966   003FA6  6E09               	movwf	gpio_pin_intialize@_pin_config^0,c
  9967   003FA8  EC37  F023         	call	_gpio_pin_intialize	;wreg free
  9968   003FAC                     
  9969                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 24:         for (data_pins_counter = 0; data_pins_co
      +                          unter < 4; data_pins_counter++) {
  9970   003FAC  0E00               	movlw	0
  9971   003FAE  6E14               	movwf	lcd_4bit_intialize@data_pins_counter^0,c
  9972   003FB0                     l5257:
  9973                           
  9974                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 25:             gpio_pin_intialize(&(lcd->lcd_data[d
      +                          ata_pins_counter]));
  9975   003FB0  5011               	movf	lcd_4bit_intialize@lcd^0,w,c
  9976   003FB2  2414               	addwf	lcd_4bit_intialize@data_pins_counter^0,w,c
  9977   003FB4  0F02               	addlw	2
  9978   003FB6  6E09               	movwf	gpio_pin_intialize@_pin_config^0,c
  9979   003FB8  EC37  F023         	call	_gpio_pin_intialize	;wreg free
  9980   003FBC                     
  9981                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 26:         }
  9982   003FBC  2A14               	incf	lcd_4bit_intialize@data_pins_counter^0,f,c
  9983   003FBE  0E03               	movlw	3
  9984   003FC0  6414               	cpfsgt	lcd_4bit_intialize@data_pins_counter^0,c
  9985   003FC2  EFE5  F01F         	goto	u5591
  9986   003FC6  EFE7  F01F         	goto	u5590
  9987   003FCA                     u5591:
  9988   003FCA  EFD8  F01F         	goto	l5257
  9989   003FCE                     u5590:
  9990   003FCE                     
  9991                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 27:         _delay((unsigned long)((20)*(8000000UL/4
      +                          000.0)));
  9992   003FCE  0E34               	movlw	52
  9993   003FD0  6E12               	movwf	??_lcd_4bit_intialize^0,c
  9994   003FD2  0EF2               	movlw	242
  9995   003FD4                     u9127:
  9996   003FD4  2EE8               	decfsz	wreg,f,c
  9997   003FD6  D7FE               	bra	u9127
  9998   003FD8  2E12               	decfsz	??_lcd_4bit_intialize^0,f,c
  9999   003FDA  D7FC               	bra	u9127
 10000   003FDC  C011  F00E         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 10001   003FE0  0E38               	movlw	56
 10002   003FE2  6E0F               	movwf	lcd_4bit_send_command@command^0,c
 10003   003FE4  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
 10004   003FE8                     
 10005                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 29:         _delay((unsigned long)((5)*(8000000UL/40
      +                          00.0)));
 10006   003FE8  0E0D               	movlw	13
 10007   003FEA  6E12               	movwf	??_lcd_4bit_intialize^0,c
 10008   003FEC  0EFC               	movlw	252
 10009   003FEE                     u9137:
 10010   003FEE  2EE8               	decfsz	wreg,f,c
 10011   003FF0  D7FE               	bra	u9137
 10012   003FF2  2E12               	decfsz	??_lcd_4bit_intialize^0,f,c
 10013   003FF4  D7FC               	bra	u9137
 10014   003FF6  C011  F00E         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 10015   003FFA  0E38               	movlw	56
 10016   003FFC  6E0F               	movwf	lcd_4bit_send_command@command^0,c
 10017   003FFE  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
 10018   004002                     
 10019                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 31:         _delay((unsigned long)((150)*(8000000UL/
      +                          4000000.0)));
 10020   004002  0E64               	movlw	100
 10021   004004                     u9147:
 10022   004004  2EE8               	decfsz	wreg,f,c
 10023   004006  D7FE               	bra	u9147
 10024   004008  C011  F00E         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 10025   00400C  0E38               	movlw	56
 10026   00400E  6E0F               	movwf	lcd_4bit_send_command@command^0,c
 10027   004010  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
 10028   004014  C011  F00E         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 10029   004018  0E01               	movlw	1
 10030   00401A  6E0F               	movwf	lcd_4bit_send_command@command^0,c
 10031   00401C  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
 10032   004020  C011  F00E         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 10033   004024  0E02               	movlw	2
 10034   004026  6E0F               	movwf	lcd_4bit_send_command@command^0,c
 10035   004028  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
 10036   00402C  C011  F00E         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 10037   004030  0E06               	movlw	6
 10038   004032  6E0F               	movwf	lcd_4bit_send_command@command^0,c
 10039   004034  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
 10040   004038  C011  F00E         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 10041   00403C  0E0C               	movlw	12
 10042   00403E  6E0F               	movwf	lcd_4bit_send_command@command^0,c
 10043   004040  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
 10044   004044  C011  F00E         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 10045   004048  0E28               	movlw	40
 10046   00404A  6E0F               	movwf	lcd_4bit_send_command@command^0,c
 10047   00404C  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
 10048   004050                     
 10049                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 39:         ret = lcd_4bit_send_command(lcd, 0x80);
 10050   004050  C011  F00E         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
 10051   004054  0E80               	movlw	128
 10052   004056  6E0F               	movwf	lcd_4bit_send_command@command^0,c
 10053   004058  EC94  F023         	call	_lcd_4bit_send_command	;wreg free
 10054   00405C  6E13               	movwf	lcd_4bit_intialize@ret^0,c
 10055   00405E                     l5285:
 10056                           
 10057                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 41:     return ret;
 10058   00405E  5013               	movf	lcd_4bit_intialize@ret^0,w,c
 10059   004060  0012               	return		;funcret
 10060   004062                     __end_of_lcd_4bit_intialize:
 10061                           	callstack 0
 10062                           
 10063 ;; *************** function _lcd_4bit_send_command *****************
 10064 ;; Defined at:
 10065 ;;		line 44 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  lcd             1   13[COMRAM] PTR const struct .
 10068 ;;		 -> lcd_4(6), 
 10069 ;;  command         1   14[COMRAM] unsigned char 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;  ret             1   15[COMRAM] unsigned char 
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      unsigned char 
 10074 ;; Registers used:
 10075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10084 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10085 ;;Total ram usage:        3 bytes
 10086 ;; Hardware stack levels used: 1
 10087 ;; Hardware stack levels required when called: 2
 10088 ;; This function calls:
 10089 ;;		_gpio_pin_write_logic
 10090 ;;		_lcd_4bit_send_enable_signal
 10091 ;;		_lcd_send_4bits
 10092 ;; This function is called by:
 10093 ;;		_lcd_4bit_intialize
 10094 ;;		_lcd_4bit_set_cursor
 10095 ;;		_main
 10096 ;;		_lcd_4bit_send_custom_char
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text47
 10101   004728                     __ptext47:
 10102                           	callstack 0
 10103   004728                     _lcd_4bit_send_command:
 10104                           	callstack 26
 10105   004728                     
 10106                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 46:     if (((void*)0) == lcd) {
 10107   004728  500E               	movf	lcd_4bit_send_command@lcd^0,w,c
 10108   00472A  A4D8               	btfss	status,2,c
 10109   00472C  EF9A  F023         	goto	u5501
 10110   004730  EF9C  F023         	goto	u5500
 10111   004734                     u5501:
 10112   004734  EFA0  F023         	goto	l5115
 10113   004738                     u5500:
 10114   004738                     
 10115                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 47:         ret = (Std_ReturnType)0x00;
 10116   004738  0E00               	movlw	0
 10117   00473A  6E10               	movwf	lcd_4bit_send_command@ret^0,c
 10118                           
 10119                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 48:     } else {
 10120   00473C  EFC0  F023         	goto	l5117
 10121   004740                     l5115:
 10122                           
 10123                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->lcd_rs
      +                          ), GPIO_LOW);
 10124   004740  C00E  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
 10125   004744  0E00               	movlw	0
 10126   004746  6E02               	movwf	gpio_pin_write_logic@logic^0,c
 10127   004748  EC46  F01C         	call	_gpio_pin_write_logic	;wreg free
 10128   00474C  6E10               	movwf	lcd_4bit_send_command@ret^0,c
 10129                           
 10130                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 50:         ret = lcd_send_4bits(lcd, command >> 4);
 10131   00474E  C00E  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
 10132   004752  380F               	swapf	lcd_4bit_send_command@command^0,w,c
 10133   004754  0B0F               	andlw	15
 10134   004756  6E0A               	movwf	lcd_send_4bits@_data_command^0,c
 10135   004758  EC8D  F024         	call	_lcd_send_4bits	;wreg free
 10136   00475C  6E10               	movwf	lcd_4bit_send_command@ret^0,c
 10137                           
 10138                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 51:         ret = lcd_4bit_send_enable_signal(lcd);
 10139   00475E  C00E  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
 10140   004762  EC13  F026         	call	_lcd_4bit_send_enable_signal	;wreg free
 10141   004766  6E10               	movwf	lcd_4bit_send_command@ret^0,c
 10142                           
 10143                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 52:         ret = lcd_send_4bits(lcd, command);
 10144   004768  C00E  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
 10145   00476C  C00F  F00A         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
 10146   004770  EC8D  F024         	call	_lcd_send_4bits	;wreg free
 10147   004774  6E10               	movwf	lcd_4bit_send_command@ret^0,c
 10148                           
 10149                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 53:         ret = lcd_4bit_send_enable_signal(lcd);
 10150   004776  C00E  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
 10151   00477A  EC13  F026         	call	_lcd_4bit_send_enable_signal	;wreg free
 10152   00477E  6E10               	movwf	lcd_4bit_send_command@ret^0,c
 10153   004780                     l5117:
 10154                           
 10155                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 55:     return ret;
 10156   004780  5010               	movf	lcd_4bit_send_command@ret^0,w,c
 10157   004782  0012               	return		;funcret
 10158   004784                     __end_of_lcd_4bit_send_command:
 10159                           	callstack 0
 10160                           
 10161 ;; *************** function _lcd_send_4bits *****************
 10162 ;; Defined at:
 10163 ;;		line 307 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  lcd             1    8[COMRAM] PTR const struct .
 10166 ;;		 -> lcd_4(6), 
 10167 ;;  _data_comman    1    9[COMRAM] unsigned char 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  data_pin_cou    1   12[COMRAM] unsigned char 
 10170 ;;  ret             1    0        unsigned char 
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  1    wreg      unsigned char 
 10173 ;; Registers used:
 10174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;Total ram usage:        5 bytes
 10185 ;; Hardware stack levels used: 1
 10186 ;; Hardware stack levels required when called: 1
 10187 ;; This function calls:
 10188 ;;		_gpio_pin_write_logic
 10189 ;; This function is called by:
 10190 ;;		_lcd_4bit_send_command
 10191 ;;		_lcd_4bit_send_char_data
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text48
 10196   00491A                     __ptext48:
 10197                           	callstack 0
 10198   00491A                     _lcd_send_4bits:
 10199                           	callstack 26
 10200   00491A                     
 10201                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 309:     uint8 data_pin_counter = 0;
 10202   00491A  0E00               	movlw	0
 10203   00491C  6E0D               	movwf	lcd_send_4bits@data_pin_counter^0,c
 10204                           
 10205                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 310:     for (data_pin_counter = 0; data_pin_counter
      +                           < 4; data_pin_counter++) {
 10206   00491E  0E00               	movlw	0
 10207   004920  6E0D               	movwf	lcd_send_4bits@data_pin_counter^0,c
 10208   004922                     l4749:
 10209   004922  5009               	movf	lcd_send_4bits@lcd^0,w,c
 10210   004924  240D               	addwf	lcd_send_4bits@data_pin_counter^0,w,c
 10211   004926  0F02               	addlw	2
 10212   004928  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 10213   00492A  C00D  F00B         	movff	lcd_send_4bits@data_pin_counter,??_lcd_send_4bits
 10214   00492E  C00A  F00C         	movff	lcd_send_4bits@_data_command,??_lcd_send_4bits+1
 10215   004932  2A0B               	incf	??_lcd_send_4bits^0,f,c
 10216   004934  EF9E  F024         	goto	u4904
 10217   004938                     u4905:
 10218   004938  90D8               	bcf	status,0,c
 10219   00493A  320C               	rrcf	(??_lcd_send_4bits+1)^0,f,c
 10220   00493C                     u4904:
 10221   00493C  2E0B               	decfsz	??_lcd_send_4bits^0,f,c
 10222   00493E  EF9C  F024         	goto	u4905
 10223   004942  500C               	movf	(??_lcd_send_4bits+1)^0,w,c
 10224   004944  0B01               	andlw	1
 10225   004946  6E02               	movwf	gpio_pin_write_logic@logic^0,c
 10226   004948  EC46  F01C         	call	_gpio_pin_write_logic	;wreg free
 10227   00494C                     
 10228                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 312:     }
 10229   00494C  2A0D               	incf	lcd_send_4bits@data_pin_counter^0,f,c
 10230   00494E  0E03               	movlw	3
 10231   004950  640D               	cpfsgt	lcd_send_4bits@data_pin_counter^0,c
 10232   004952  EFAD  F024         	goto	u4911
 10233   004956  EFAF  F024         	goto	u4910
 10234   00495A                     u4911:
 10235   00495A  EF91  F024         	goto	l4749
 10236   00495E                     u4910:
 10237   00495E  0012               	return		;funcret
 10238   004960                     __end_of_lcd_send_4bits:
 10239                           	callstack 0
 10240                           
 10241 ;; *************** function _lcd_4bit_send_enable_signal *****************
 10242 ;; Defined at:
 10243 ;;		line 315 in file "ECU_layer/Char_LCD/ecu_char_lcd.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;  lcd             1    8[COMRAM] PTR const struct .
 10246 ;;		 -> lcd_4(6), 
 10247 ;; Auto vars:     Size  Location     Type
 10248 ;;  ret             1    0        unsigned char 
 10249 ;; Return value:  Size  Location     Type
 10250 ;;                  1    wreg      unsigned char 
 10251 ;; Registers used:
 10252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10253 ;; Tracked objects:
 10254 ;;		On entry : 0/0
 10255 ;;		On exit  : 0/0
 10256 ;;		Unchanged: 0/0
 10257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10258 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;Total ram usage:        1 bytes
 10263 ;; Hardware stack levels used: 1
 10264 ;; Hardware stack levels required when called: 1
 10265 ;; This function calls:
 10266 ;;		_gpio_pin_write_logic
 10267 ;; This function is called by:
 10268 ;;		_lcd_4bit_send_command
 10269 ;;		_lcd_4bit_send_char_data
 10270 ;; This function uses a non-reentrant model
 10271 ;;
 10272                           
 10273                           	psect	text49
 10274   004C26                     __ptext49:
 10275                           	callstack 0
 10276   004C26                     _lcd_4bit_send_enable_signal:
 10277                           	callstack 26
 10278   004C26  2809               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
 10279   004C28  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 10280   004C2A  0E01               	movlw	1
 10281   004C2C  6E02               	movwf	gpio_pin_write_logic@logic^0,c
 10282   004C2E  EC46  F01C         	call	_gpio_pin_write_logic	;wreg free
 10283   004C32                     
 10284                           ;ECU_layer/Char_LCD/ecu_char_lcd.c: 318:     _delay((unsigned long)((5)*(8000000UL/40000
      +                          00.0)));
 10285   004C32  0E03               	movlw	3
 10286   004C34                     u9157:
 10287   004C34  2EE8               	decfsz	wreg,f,c
 10288   004C36  D7FE               	bra	u9157
 10289   004C38  0000               	nop	
 10290   004C3A  2809               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
 10291   004C3C  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
 10292   004C3E  0E00               	movlw	0
 10293   004C40  6E02               	movwf	gpio_pin_write_logic@logic^0,c
 10294   004C42  EC46  F01C         	call	_gpio_pin_write_logic	;wreg free
 10295   004C46  0012               	return		;funcret
 10296   004C48                     __end_of_lcd_4bit_send_enable_signal:
 10297                           	callstack 0
 10298                           
 10299 ;; *************** function _keypad_initialize *****************
 10300 ;; Defined at:
 10301 ;;		line 17 in file "ECU_layer/KeyPad/ecu_keypad.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  _keypad_obj     1   11[COMRAM] PTR const struct .
 10304 ;;		 -> keypad(8), 
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;  columns_coun    1   14[COMRAM] unsigned char 
 10307 ;;  rows_counter    1   13[COMRAM] unsigned char 
 10308 ;;  ret             1   12[COMRAM] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      unsigned char 
 10311 ;; Registers used:
 10312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10318 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10319 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;Total ram usage:        4 bytes
 10323 ;; Hardware stack levels used: 1
 10324 ;; Hardware stack levels required when called: 2
 10325 ;; This function calls:
 10326 ;;		_gpio_pin_direction_intialize
 10327 ;;		_gpio_pin_intialize
 10328 ;; This function is called by:
 10329 ;;		_ecu_layer_intialize
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text50
 10334   0045A0                     __ptext50:
 10335                           	callstack 0
 10336   0045A0                     _keypad_initialize:
 10337                           	callstack 26
 10338   0045A0                     
 10339                           ;ECU_layer/KeyPad/ecu_keypad.c: 19:     uint8 rows_counter = 0, columns_counter = 0;
 10340   0045A0  0E00               	movlw	0
 10341   0045A2  6E0E               	movwf	keypad_initialize@rows_counter^0,c
 10342   0045A4  0E00               	movlw	0
 10343   0045A6  6E0F               	movwf	keypad_initialize@columns_counter^0,c
 10344                           
 10345                           ;ECU_layer/KeyPad/ecu_keypad.c: 20:     if (((void*)0) == _keypad_obj) {
 10346   0045A8  500C               	movf	keypad_initialize@_keypad_obj^0,w,c
 10347   0045AA  A4D8               	btfss	status,2,c
 10348   0045AC  EFDA  F022         	goto	u5611
 10349   0045B0  EFDC  F022         	goto	u5610
 10350   0045B4                     u5611:
 10351   0045B4  EFE0  F022         	goto	l5303
 10352   0045B8                     u5610:
 10353   0045B8                     
 10354                           ;ECU_layer/KeyPad/ecu_keypad.c: 21:         ret = (Std_ReturnType)0x00;
 10355   0045B8  0E00               	movlw	0
 10356   0045BA  6E0D               	movwf	keypad_initialize@ret^0,c
 10357                           
 10358                           ;ECU_layer/KeyPad/ecu_keypad.c: 22:     } else {
 10359   0045BC  EF02  F023         	goto	l5327
 10360   0045C0                     l5303:
 10361                           
 10362                           ;ECU_layer/KeyPad/ecu_keypad.c: 23:         for (rows_counter = 0; rows_counter < 4; row
      +                          s_counter++) {
 10363   0045C0  0E00               	movlw	0
 10364   0045C2  6E0E               	movwf	keypad_initialize@rows_counter^0,c
 10365   0045C4                     l5309:
 10366   0045C4  500C               	movf	keypad_initialize@_keypad_obj^0,w,c
 10367   0045C6  240E               	addwf	keypad_initialize@rows_counter^0,w,c
 10368   0045C8  6E09               	movwf	gpio_pin_intialize@_pin_config^0,c
 10369   0045CA  EC37  F023         	call	_gpio_pin_intialize	;wreg free
 10370   0045CE                     
 10371                           ;ECU_layer/KeyPad/ecu_keypad.c: 25:         }
 10372   0045CE  2A0E               	incf	keypad_initialize@rows_counter^0,f,c
 10373   0045D0  0E03               	movlw	3
 10374   0045D2  640E               	cpfsgt	keypad_initialize@rows_counter^0,c
 10375   0045D4  EFEE  F022         	goto	u5621
 10376   0045D8  EFF0  F022         	goto	u5620
 10377   0045DC                     u5621:
 10378   0045DC  EFE2  F022         	goto	l5309
 10379   0045E0                     u5620:
 10380   0045E0                     
 10381                           ;ECU_layer/KeyPad/ecu_keypad.c: 26:         for (columns_counter = 0; columns_counter < 
      +                          4; columns_counter++) {
 10382   0045E0  0E00               	movlw	0
 10383   0045E2  6E0F               	movwf	keypad_initialize@columns_counter^0,c
 10384   0045E4                     l5321:
 10385                           
 10386                           ;ECU_layer/KeyPad/ecu_keypad.c: 27:             ret = gpio_pin_direction_intialize(&(_ke
      +                          ypad_obj->keypad_columns_pins[columns_counter]));
 10387   0045E4  500C               	movf	keypad_initialize@_keypad_obj^0,w,c
 10388   0045E6  240F               	addwf	keypad_initialize@columns_counter^0,w,c
 10389   0045E8  0F04               	addlw	4
 10390   0045EA  6E01               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
 10391   0045EC  ECBD  F01B         	call	_gpio_pin_direction_intialize	;wreg free
 10392   0045F0  6E0D               	movwf	keypad_initialize@ret^0,c
 10393   0045F2                     
 10394                           ;ECU_layer/KeyPad/ecu_keypad.c: 28:         }
 10395   0045F2  2A0F               	incf	keypad_initialize@columns_counter^0,f,c
 10396   0045F4  0E03               	movlw	3
 10397   0045F6  640F               	cpfsgt	keypad_initialize@columns_counter^0,c
 10398   0045F8  EF00  F023         	goto	u5631
 10399   0045FC  EF02  F023         	goto	u5630
 10400   004600                     u5631:
 10401   004600  EFF2  F022         	goto	l5321
 10402   004604                     u5630:
 10403   004604                     l5327:
 10404                           
 10405                           ;ECU_layer/KeyPad/ecu_keypad.c: 30:     return ret;
 10406   004604  500D               	movf	keypad_initialize@ret^0,w,c
 10407   004606  0012               	return		;funcret
 10408   004608                     __end_of_keypad_initialize:
 10409                           	callstack 0
 10410                           
 10411 ;; *************** function _gpio_pin_intialize *****************
 10412 ;; Defined at:
 10413 ;;		line 150 in file "MCAL_layer/GPIO/hal_gpio.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;  _pin_config     1    8[COMRAM] PTR const struct .
 10416 ;;		 -> keypad$keypad_row_pins(4), keypad(8), lcd_4$lcd_data(4), lcd_4(6), 
 10417 ;;		 -> relay_initialize@pin_opj(1), led_initialize@pin_obj(1), 
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;  ret             1   10[COMRAM] unsigned char 
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  1    wreg      unsigned char 
 10422 ;; Registers used:
 10423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10429 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10433 ;;Total ram usage:        3 bytes
 10434 ;; Hardware stack levels used: 1
 10435 ;; Hardware stack levels required when called: 1
 10436 ;; This function calls:
 10437 ;;		_gpio_pin_direction_intialize
 10438 ;;		_gpio_pin_write_logic
 10439 ;; This function is called by:
 10440 ;;		_lcd_4bit_intialize
 10441 ;;		_keypad_initialize
 10442 ;;		_seven_segement_intialize
 10443 ;;		_lcd_8bit_intialize
 10444 ;;		_dc_motor_initialize
 10445 ;;		_led_initialize
 10446 ;;		_relay_initialize
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text51
 10451   00466E                     __ptext51:
 10452                           	callstack 0
 10453   00466E                     _gpio_pin_intialize:
 10454                           	callstack 26
 10455   00466E                     
 10456                           ;MCAL_layer/GPIO/hal_gpio.c: 153:     if (((void*)0) == _pin_config || _pin_config->pin 
      +                          > 8 - 1) {
 10457   00466E  5009               	movf	gpio_pin_intialize@_pin_config^0,w,c
 10458   004670  B4D8               	btfsc	status,2,c
 10459   004672  EF3D  F023         	goto	u5481
 10460   004676  EF3F  F023         	goto	u5480
 10461   00467A                     u5481:
 10462   00467A  EF4F  F023         	goto	l5103
 10463   00467E                     u5480:
 10464   00467E  5009               	movf	gpio_pin_intialize@_pin_config^0,w,c
 10465   004680  6ED9               	movwf	fsr2l,c
 10466   004682  6ADA               	clrf	fsr2h,c
 10467   004684  30DF               	rrcf	223,w,c
 10468   004686  32E8               	rrcf	wreg,f,c
 10469   004688  32E8               	rrcf	wreg,f,c
 10470   00468A  0B07               	andlw	7
 10471   00468C  6E0A               	movwf	??_gpio_pin_intialize^0,c
 10472   00468E  0E07               	movlw	7
 10473   004690  640A               	cpfsgt	??_gpio_pin_intialize^0,c
 10474   004692  EF4D  F023         	goto	u5491
 10475   004696  EF4F  F023         	goto	u5490
 10476   00469A                     u5491:
 10477   00469A  EF53  F023         	goto	l5105
 10478   00469E                     u5490:
 10479   00469E                     l5103:
 10480                           
 10481                           ;MCAL_layer/GPIO/hal_gpio.c: 154:         ret = (Std_ReturnType)0x00;
 10482   00469E  0E00               	movlw	0
 10483   0046A0  6E0B               	movwf	gpio_pin_intialize@ret^0,c
 10484                           
 10485                           ;MCAL_layer/GPIO/hal_gpio.c: 155:     } else {
 10486   0046A2  EF64  F023         	goto	l5107
 10487   0046A6                     l5105:
 10488                           
 10489                           ;MCAL_layer/GPIO/hal_gpio.c: 156:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
 10490   0046A6  C009  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
 10491   0046AA  ECBD  F01B         	call	_gpio_pin_direction_intialize	;wreg free
 10492   0046AE  6E0B               	movwf	gpio_pin_intialize@ret^0,c
 10493                           
 10494                           ;MCAL_layer/GPIO/hal_gpio.c: 157:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
 10495   0046B0  C009  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
 10496   0046B4  5009               	movf	gpio_pin_intialize@_pin_config^0,w,c
 10497   0046B6  6ED9               	movwf	fsr2l,c
 10498   0046B8  6ADA               	clrf	fsr2h,c
 10499   0046BA  0E00               	movlw	0
 10500   0046BC  BEDF               	btfsc	indf2,7,c
 10501   0046BE  0E01               	movlw	1
 10502   0046C0  6E02               	movwf	gpio_pin_write_logic@logic^0,c
 10503   0046C2  EC46  F01C         	call	_gpio_pin_write_logic	;wreg free
 10504   0046C6  6E0B               	movwf	gpio_pin_intialize@ret^0,c
 10505   0046C8                     l5107:
 10506                           
 10507                           ;MCAL_layer/GPIO/hal_gpio.c: 160:     return ret;
 10508   0046C8  500B               	movf	gpio_pin_intialize@ret^0,w,c
 10509   0046CA  0012               	return		;funcret
 10510   0046CC                     __end_of_gpio_pin_intialize:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function _gpio_pin_write_logic *****************
 10514 ;; Defined at:
 10515 ;;		line 77 in file "MCAL_layer/GPIO/hal_gpio.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  _pin_config     1    0[COMRAM] PTR const struct .
 10518 ;;		 -> keypad$keypad_row_pins(4), keypad(8), lcd_4$lcd_data(4), lcd_4(6), 
 10519 ;;		 -> relay_turn_off@pin_opj(1), relay_turn_on@pin_opj(1), relay_initialize@pin_opj(1), led_turn_off@pin_obj(1), 
 10520 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
 10521 ;;  logic           1    1[COMRAM] enum E2948
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  ret             1    7[COMRAM] unsigned char 
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  1    wreg      unsigned char 
 10526 ;; Registers used:
 10527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10536 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10537 ;;Total ram usage:        8 bytes
 10538 ;; Hardware stack levels used: 1
 10539 ;; This function calls:
 10540 ;;		Nothing
 10541 ;; This function is called by:
 10542 ;;		_lcd_4bit_send_command
 10543 ;;		_lcd_4bit_send_char_data
 10544 ;;		_lcd_send_4bits
 10545 ;;		_lcd_4bit_send_enable_signal
 10546 ;;		_keypad_get_value
 10547 ;;		_gpio_pin_intialize
 10548 ;;		_seven_segement_write_number
 10549 ;;		_lcd_8bit_send_command
 10550 ;;		_lcd_8bit_send_char_data
 10551 ;;		_lcd_8bit_send_enable_signal
 10552 ;;		_dc_motor_move_right
 10553 ;;		_dc_motor_move_left
 10554 ;;		_dc_motor_stop
 10555 ;;		_led_turn_on
 10556 ;;		_led_turn_off
 10557 ;;		_relay_turn_on
 10558 ;;		_relay_turn_off
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text52
 10563   00388C                     __ptext52:
 10564                           	callstack 0
 10565   00388C                     _gpio_pin_write_logic:
 10566                           	callstack 26
 10567   00388C                     
 10568                           ;MCAL_layer/GPIO/hal_gpio.c: 78:     Std_ReturnType ret = (Std_ReturnType)0x01;
 10569   00388C  0E01               	movlw	1
 10570   00388E  6E08               	movwf	gpio_pin_write_logic@ret^0,c
 10571                           
 10572                           ;MCAL_layer/GPIO/hal_gpio.c: 80:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 - 1) {
 10573   003890  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 10574   003892  B4D8               	btfsc	status,2,c
 10575   003894  EF4E  F01C         	goto	u3821
 10576   003898  EF50  F01C         	goto	u3820
 10577   00389C                     u3821:
 10578   00389C  EF60  F01C         	goto	l4129
 10579   0038A0                     u3820:
 10580   0038A0  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 10581   0038A2  6ED9               	movwf	fsr2l,c
 10582   0038A4  6ADA               	clrf	fsr2h,c
 10583   0038A6  30DF               	rrcf	223,w,c
 10584   0038A8  32E8               	rrcf	wreg,f,c
 10585   0038AA  32E8               	rrcf	wreg,f,c
 10586   0038AC  0B07               	andlw	7
 10587   0038AE  6E03               	movwf	??_gpio_pin_write_logic^0,c
 10588   0038B0  0E07               	movlw	7
 10589   0038B2  6403               	cpfsgt	??_gpio_pin_write_logic^0,c
 10590   0038B4  EF5E  F01C         	goto	u3831
 10591   0038B8  EF60  F01C         	goto	u3830
 10592   0038BC                     u3831:
 10593   0038BC  EFB7  F01C         	goto	l4137
 10594   0038C0                     u3830:
 10595   0038C0                     l4129:
 10596                           
 10597                           ;MCAL_layer/GPIO/hal_gpio.c: 81:         ret = (Std_ReturnType)0x00;
 10598   0038C0  0E00               	movlw	0
 10599   0038C2  6E08               	movwf	gpio_pin_write_logic@ret^0,c
 10600                           
 10601                           ;MCAL_layer/GPIO/hal_gpio.c: 82:     } else {
 10602   0038C4  EFCC  F01C         	goto	l4139
 10603   0038C8                     l4131:
 10604                           
 10605                           ;MCAL_layer/GPIO/hal_gpio.c: 85:                 (*(lat_registers[_pin_config->port]) &=
      +                           ~((uint8)1 << _pin_config->pin));
 10606   0038C8  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 10607   0038CA  6ED9               	movwf	fsr2l,c
 10608   0038CC  6ADA               	clrf	fsr2h,c
 10609   0038CE  30DF               	rrcf	223,w,c
 10610   0038D0  32E8               	rrcf	wreg,f,c
 10611   0038D2  32E8               	rrcf	wreg,f,c
 10612   0038D4  0B07               	andlw	7
 10613   0038D6  6E03               	movwf	??_gpio_pin_write_logic^0,c
 10614   0038D8  0E01               	movlw	1
 10615   0038DA  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
 10616   0038DC  2A03               	incf	??_gpio_pin_write_logic^0,f,c
 10617   0038DE  EF73  F01C         	goto	u3844
 10618   0038E2                     u3845:
 10619   0038E2  90D8               	bcf	status,0,c
 10620   0038E4  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 10621   0038E6                     u3844:
 10622   0038E6  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
 10623   0038E8  EF71  F01C         	goto	u3845
 10624   0038EC  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 10625   0038EE  0AFF               	xorlw	255
 10626   0038F0  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
 10627   0038F2  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 10628   0038F4  6ED9               	movwf	fsr2l,c
 10629   0038F6  6ADA               	clrf	fsr2h,c
 10630   0038F8  50DF               	movf	223,w,c
 10631   0038FA  0B07               	andlw	7
 10632   0038FC  0D02               	mullw	2
 10633   0038FE  50F3               	movf	243,w,c
 10634   003900  0FBD               	addlw	low _lat_registers
 10635   003902  6ED9               	movwf	fsr2l,c
 10636   003904  6ADA               	clrf	fsr2h,c
 10637   003906  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
 10638   00390A  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
 10639   00390E  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
 10640   003912  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
 10641   003916  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 10642   003918  16DF               	andwf	indf2,f,c
 10643                           
 10644                           ;MCAL_layer/GPIO/hal_gpio.c: 86:                 break;
 10645   00391A  EFCC  F01C         	goto	l4139
 10646   00391E                     l4133:
 10647                           
 10648                           ;MCAL_layer/GPIO/hal_gpio.c: 88:                 (*(lat_registers[_pin_config->port]) |=
      +                           ((uint8)1 << _pin_config->pin));
 10649   00391E  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 10650   003920  6ED9               	movwf	fsr2l,c
 10651   003922  6ADA               	clrf	fsr2h,c
 10652   003924  30DF               	rrcf	223,w,c
 10653   003926  32E8               	rrcf	wreg,f,c
 10654   003928  32E8               	rrcf	wreg,f,c
 10655   00392A  0B07               	andlw	7
 10656   00392C  6E03               	movwf	??_gpio_pin_write_logic^0,c
 10657   00392E  0E01               	movlw	1
 10658   003930  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
 10659   003932  2A03               	incf	??_gpio_pin_write_logic^0,f,c
 10660   003934  EF9E  F01C         	goto	u3854
 10661   003938                     u3855:
 10662   003938  90D8               	bcf	status,0,c
 10663   00393A  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 10664   00393C                     u3854:
 10665   00393C  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
 10666   00393E  EF9C  F01C         	goto	u3855
 10667   003942  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 10668   003944  6ED9               	movwf	fsr2l,c
 10669   003946  6ADA               	clrf	fsr2h,c
 10670   003948  50DF               	movf	223,w,c
 10671   00394A  0B07               	andlw	7
 10672   00394C  0D02               	mullw	2
 10673   00394E  50F3               	movf	243,w,c
 10674   003950  0FBD               	addlw	low _lat_registers
 10675   003952  6ED9               	movwf	fsr2l,c
 10676   003954  6ADA               	clrf	fsr2h,c
 10677   003956  CFDE F005          	movff	postinc2,??_gpio_pin_write_logic+2
 10678   00395A  CFDD F006          	movff	postdec2,??_gpio_pin_write_logic+3
 10679   00395E  C005  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
 10680   003962  C006  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
 10681   003966  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 10682   003968  12DF               	iorwf	indf2,f,c
 10683                           
 10684                           ;MCAL_layer/GPIO/hal_gpio.c: 89:                 break;
 10685   00396A  EFCC  F01C         	goto	l4139
 10686   00396E                     l4137:
 10687   00396E  5002               	movf	gpio_pin_write_logic@logic^0,w,c
 10688   003970  6E03               	movwf	??_gpio_pin_write_logic^0,c
 10689   003972  6A04               	clrf	(??_gpio_pin_write_logic+1)^0,c
 10690                           
 10691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10692                           ; Switch size 1, requested type "simple"
 10693                           ; Number of cases is 1, Range of values is 0 to 0
 10694                           ; switch strategies available:
 10695                           ; Name         Instructions Cycles
 10696                           ; simple_byte            4     3 (average)
 10697                           ;	Chosen strategy is simple_byte
 10698   003974  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 10699   003976  0A00               	xorlw	0	; case 0
 10700   003978  B4D8               	btfsc	status,2,c
 10701   00397A  EFC1  F01C         	goto	l7813
 10702   00397E  EF60  F01C         	goto	l4129
 10703   003982                     l7813:
 10704                           
 10705                           ; Switch size 1, requested type "simple"
 10706                           ; Number of cases is 2, Range of values is 0 to 1
 10707                           ; switch strategies available:
 10708                           ; Name         Instructions Cycles
 10709                           ; simple_byte            7     4 (average)
 10710                           ;	Chosen strategy is simple_byte
 10711   003982  5003               	movf	??_gpio_pin_write_logic^0,w,c
 10712   003984  0A00               	xorlw	0	; case 0
 10713   003986  B4D8               	btfsc	status,2,c
 10714   003988  EF64  F01C         	goto	l4131
 10715   00398C  0A01               	xorlw	1	; case 1
 10716   00398E  B4D8               	btfsc	status,2,c
 10717   003990  EF8F  F01C         	goto	l4133
 10718   003994  EF60  F01C         	goto	l4129
 10719   003998                     l4139:
 10720                           
 10721                           ;MCAL_layer/GPIO/hal_gpio.c: 93:     return ret;
 10722   003998  5008               	movf	gpio_pin_write_logic@ret^0,w,c
 10723   00399A  0012               	return		;funcret
 10724   00399C                     __end_of_gpio_pin_write_logic:
 10725                           	callstack 0
 10726                           
 10727 ;; *************** function _gpio_pin_direction_intialize *****************
 10728 ;; Defined at:
 10729 ;;		line 26 in file "MCAL_layer/GPIO/hal_gpio.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;  _pin_config     1    0[COMRAM] PTR const struct .
 10732 ;;		 -> keypad$keypad_columns_pins(4), keypad$keypad_row_pins(4), keypad(8), lcd_4$lcd_data(4), 
 10733 ;;		 -> lcd_4(6), relay_initialize@pin_opj(1), led_initialize@pin_obj(1), 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;  ret             1    6[COMRAM] unsigned char 
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      unsigned char 
 10738 ;; Registers used:
 10739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10745 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10747 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10748 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10749 ;;Total ram usage:        7 bytes
 10750 ;; Hardware stack levels used: 1
 10751 ;; This function calls:
 10752 ;;		Nothing
 10753 ;; This function is called by:
 10754 ;;		_keypad_initialize
 10755 ;;		_gpio_pin_intialize
 10756 ;;		_button_initialize
 10757 ;; This function uses a non-reentrant model
 10758 ;;
 10759                           
 10760                           	psect	text53
 10761   00377A                     __ptext53:
 10762                           	callstack 0
 10763   00377A                     _gpio_pin_direction_intialize:
 10764                           	callstack 26
 10765   00377A                     
 10766                           ;MCAL_layer/GPIO/hal_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
 10767   00377A  0E01               	movlw	1
 10768   00377C  6E07               	movwf	gpio_pin_direction_intialize@ret^0,c
 10769                           
 10770                           ;MCAL_layer/GPIO/hal_gpio.c: 29:     if (((void*)0) == _pin_config || _pin_config->pin >
      +                           8 - 1) {
 10771   00377E  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
 10772   003780  B4D8               	btfsc	status,2,c
 10773   003782  EFC5  F01B         	goto	u4851
 10774   003786  EFC7  F01B         	goto	u4850
 10775   00378A                     u4851:
 10776   00378A  EFD7  F01B         	goto	l4729
 10777   00378E                     u4850:
 10778   00378E  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
 10779   003790  6ED9               	movwf	fsr2l,c
 10780   003792  6ADA               	clrf	fsr2h,c
 10781   003794  30DF               	rrcf	223,w,c
 10782   003796  32E8               	rrcf	wreg,f,c
 10783   003798  32E8               	rrcf	wreg,f,c
 10784   00379A  0B07               	andlw	7
 10785   00379C  6E02               	movwf	??_gpio_pin_direction_intialize^0,c
 10786   00379E  0E07               	movlw	7
 10787   0037A0  6402               	cpfsgt	??_gpio_pin_direction_intialize^0,c
 10788   0037A2  EFD5  F01B         	goto	u4861
 10789   0037A6  EFD7  F01B         	goto	u4860
 10790   0037AA                     u4861:
 10791   0037AA  EF2E  F01C         	goto	l4737
 10792   0037AE                     u4860:
 10793   0037AE                     l4729:
 10794                           
 10795                           ;MCAL_layer/GPIO/hal_gpio.c: 30:         ret = (Std_ReturnType)0x00;
 10796   0037AE  0E00               	movlw	0
 10797   0037B0  6E07               	movwf	gpio_pin_direction_intialize@ret^0,c
 10798                           
 10799                           ;MCAL_layer/GPIO/hal_gpio.c: 31:     } else {
 10800   0037B2  EF44  F01C         	goto	l4739
 10801   0037B6                     l4731:
 10802                           
 10803                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                 (*(tris_registers[_pin_config->port]) &
      +                          = ~((uint8)1 << _pin_config->pin));
 10804   0037B6  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
 10805   0037B8  6ED9               	movwf	fsr2l,c
 10806   0037BA  6ADA               	clrf	fsr2h,c
 10807   0037BC  30DF               	rrcf	223,w,c
 10808   0037BE  32E8               	rrcf	wreg,f,c
 10809   0037C0  32E8               	rrcf	wreg,f,c
 10810   0037C2  0B07               	andlw	7
 10811   0037C4  6E02               	movwf	??_gpio_pin_direction_intialize^0,c
 10812   0037C6  0E01               	movlw	1
 10813   0037C8  6E03               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
 10814   0037CA  2A02               	incf	??_gpio_pin_direction_intialize^0,f,c
 10815   0037CC  EFEA  F01B         	goto	u4874
 10816   0037D0                     u4875:
 10817   0037D0  90D8               	bcf	status,0,c
 10818   0037D2  3603               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
 10819   0037D4                     u4874:
 10820   0037D4  2E02               	decfsz	??_gpio_pin_direction_intialize^0,f,c
 10821   0037D6  EFE8  F01B         	goto	u4875
 10822   0037DA  5003               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
 10823   0037DC  0AFF               	xorlw	255
 10824   0037DE  6E04               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
 10825   0037E0  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
 10826   0037E2  6ED9               	movwf	fsr2l,c
 10827   0037E4  6ADA               	clrf	fsr2h,c
 10828   0037E6  50DF               	movf	223,w,c
 10829   0037E8  0B07               	andlw	7
 10830   0037EA  0D02               	mullw	2
 10831   0037EC  50F3               	movf	243,w,c
 10832   0037EE  0FC7               	addlw	low _tris_registers
 10833   0037F0  6ED9               	movwf	fsr2l,c
 10834   0037F2  6ADA               	clrf	fsr2h,c
 10835   0037F4  CFDE F005          	movff	postinc2,??_gpio_pin_direction_intialize+3
 10836   0037F8  CFDD F006          	movff	postdec2,??_gpio_pin_direction_intialize+4
 10837   0037FC  C005  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
 10838   003800  C006  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
 10839   003804  5004               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
 10840   003806  16DF               	andwf	indf2,f,c
 10841                           
 10842                           ;MCAL_layer/GPIO/hal_gpio.c: 35:                 break;
 10843   003808  EF44  F01C         	goto	l4739
 10844   00380C                     l4733:
 10845                           
 10846                           ;MCAL_layer/GPIO/hal_gpio.c: 37:                 (*(tris_registers[_pin_config->port]) |
      +                          = ((uint8)1 << _pin_config->pin));
 10847   00380C  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
 10848   00380E  6ED9               	movwf	fsr2l,c
 10849   003810  6ADA               	clrf	fsr2h,c
 10850   003812  30DF               	rrcf	223,w,c
 10851   003814  32E8               	rrcf	wreg,f,c
 10852   003816  32E8               	rrcf	wreg,f,c
 10853   003818  0B07               	andlw	7
 10854   00381A  6E02               	movwf	??_gpio_pin_direction_intialize^0,c
 10855   00381C  0E01               	movlw	1
 10856   00381E  6E03               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
 10857   003820  2A02               	incf	??_gpio_pin_direction_intialize^0,f,c
 10858   003822  EF15  F01C         	goto	u4884
 10859   003826                     u4885:
 10860   003826  90D8               	bcf	status,0,c
 10861   003828  3603               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
 10862   00382A                     u4884:
 10863   00382A  2E02               	decfsz	??_gpio_pin_direction_intialize^0,f,c
 10864   00382C  EF13  F01C         	goto	u4885
 10865   003830  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
 10866   003832  6ED9               	movwf	fsr2l,c
 10867   003834  6ADA               	clrf	fsr2h,c
 10868   003836  50DF               	movf	223,w,c
 10869   003838  0B07               	andlw	7
 10870   00383A  0D02               	mullw	2
 10871   00383C  50F3               	movf	243,w,c
 10872   00383E  0FC7               	addlw	low _tris_registers
 10873   003840  6ED9               	movwf	fsr2l,c
 10874   003842  6ADA               	clrf	fsr2h,c
 10875   003844  CFDE F004          	movff	postinc2,??_gpio_pin_direction_intialize+2
 10876   003848  CFDD F005          	movff	postdec2,??_gpio_pin_direction_intialize+3
 10877   00384C  C004  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
 10878   003850  C005  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
 10879   003854  5003               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
 10880   003856  12DF               	iorwf	indf2,f,c
 10881                           
 10882                           ;MCAL_layer/GPIO/hal_gpio.c: 38:                 break;
 10883   003858  EF44  F01C         	goto	l4739
 10884   00385C                     l4737:
 10885   00385C  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
 10886   00385E  6ED9               	movwf	fsr2l,c
 10887   003860  6ADA               	clrf	fsr2h,c
 10888   003862  BCDF               	btfsc	indf2,6,c
 10889   003864  EF36  F01C         	goto	u4891
 10890   003868  EF39  F01C         	goto	u4890
 10891   00386C                     u4891:
 10892   00386C  0E01               	movlw	1
 10893   00386E  EF3A  F01C         	goto	u4896
 10894   003872                     u4890:
 10895   003872  0E00               	movlw	0
 10896   003874                     u4896:
 10897                           
 10898                           ; Switch size 1, requested type "simple"
 10899                           ; Number of cases is 2, Range of values is 0 to 1
 10900                           ; switch strategies available:
 10901                           ; Name         Instructions Cycles
 10902                           ; simple_byte            7     4 (average)
 10903                           ;	Chosen strategy is simple_byte
 10904   003874  0A00               	xorlw	0	; case 0
 10905   003876  B4D8               	btfsc	status,2,c
 10906   003878  EFDB  F01B         	goto	l4731
 10907   00387C  0A01               	xorlw	1	; case 1
 10908   00387E  B4D8               	btfsc	status,2,c
 10909   003880  EF06  F01C         	goto	l4733
 10910   003884  EFD7  F01B         	goto	l4729
 10911   003888                     l4739:
 10912                           
 10913                           ;MCAL_layer/GPIO/hal_gpio.c: 43:     return ret;
 10914   003888  5007               	movf	gpio_pin_direction_intialize@ret^0,w,c
 10915   00388A  0012               	return		;funcret
 10916   00388C                     __end_of_gpio_pin_direction_intialize:
 10917                           	callstack 0
 10918                           
 10919 ;; *************** function ___xxtofl *****************
 10920 ;; Defined at:
 10921 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 10922 ;; Parameters:    Size  Location     Type
 10923 ;;  sign            1    wreg     unsigned char 
 10924 ;;  val             4    0[COMRAM] long 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;  sign            1    8[COMRAM] unsigned char 
 10927 ;;  arg             4   10[COMRAM] unsigned long 
 10928 ;;  exp             1    9[COMRAM] unsigned char 
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  4    0[COMRAM] unsigned char 
 10931 ;; Registers used:
 10932 ;;		wreg, status,2, status,0
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10939 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10940 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10941 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10942 ;;Total ram usage:       14 bytes
 10943 ;; Hardware stack levels used: 1
 10944 ;; This function calls:
 10945 ;;		Nothing
 10946 ;; This function is called by:
 10947 ;;		_main
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951                           	psect	text54
 10952   0032FE                     __ptext54:
 10953                           	callstack 0
 10954   0032FE                     ___xxtofl:
 10955                           	callstack 30
 10956                           
 10957                           ;incstack = 0
 10958                           ;___xxtofl@sign stored from wreg
 10959   0032FE  6E09               	movwf	___xxtofl@sign^0,c
 10960   003300  5009               	movf	___xxtofl@sign^0,w,c
 10961   003302  B4D8               	btfsc	status,2,c
 10962   003304  EF86  F019         	goto	u6011
 10963   003308  EF88  F019         	goto	u6010
 10964   00330C                     u6011:
 10965   00330C  EFAA  F019         	goto	l1214
 10966   003310                     u6010:
 10967   003310  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10968   003312  EF8F  F019         	goto	u6020
 10969   003316  EF8D  F019         	goto	u6021
 10970   00331A                     u6021:
 10971   00331A  EFAA  F019         	goto	l1214
 10972   00331E                     u6020:
 10973   00331E  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10974   003322  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10975   003326  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10976   00332A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10977   00332E  1E05               	comf	??___xxtofl^0,f,c
 10978   003330  1E06               	comf	(??___xxtofl+1)^0,f,c
 10979   003332  1E07               	comf	(??___xxtofl+2)^0,f,c
 10980   003334  1E08               	comf	(??___xxtofl+3)^0,f,c
 10981   003336  2A05               	incf	??___xxtofl^0,f,c
 10982   003338  0E00               	movlw	0
 10983   00333A  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10984   00333C  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10985   00333E  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10986   003340  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10987   003344  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10988   003348  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10989   00334C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10990   003350  EFB2  F019         	goto	l5639
 10991   003354                     l1214:
 10992   003354  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10993   003358  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10994   00335C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10995   003360  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10996   003364                     l5639:
 10997   003364  5001               	movf	___xxtofl@val^0,w,c
 10998   003366  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10999   003368  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11000   00336A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11001   00336C  A4D8               	btfss	status,2,c
 11002   00336E  EFBB  F019         	goto	u6031
 11003   003372  EFBD  F019         	goto	u6030
 11004   003376                     u6031:
 11005   003376  EFC7  F019         	goto	l5645
 11006   00337A                     u6030:
 11007   00337A  0E00               	movlw	0
 11008   00337C  6E01               	movwf	?___xxtofl^0,c
 11009   00337E  0E00               	movlw	0
 11010   003380  6E02               	movwf	(?___xxtofl+1)^0,c
 11011   003382  0E00               	movlw	0
 11012   003384  6E03               	movwf	(?___xxtofl+2)^0,c
 11013   003386  0E00               	movlw	0
 11014   003388  6E04               	movwf	(?___xxtofl+3)^0,c
 11015   00338A  EF58  F01A         	goto	l1217
 11016   00338E                     l5645:
 11017   00338E  0E96               	movlw	150
 11018   003390  6E0A               	movwf	___xxtofl@exp^0,c
 11019   003392  EFD1  F019         	goto	l5649
 11020   003396                     l5647:
 11021   003396  2A0A               	incf	___xxtofl@exp^0,f,c
 11022   003398  90D8               	bcf	status,0,c
 11023   00339A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11024   00339C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11025   00339E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11026   0033A0  320B               	rrcf	___xxtofl@arg^0,f,c
 11027   0033A2                     l5649:
 11028   0033A2  0E00               	movlw	0
 11029   0033A4  140B               	andwf	___xxtofl@arg^0,w,c
 11030   0033A6  6E05               	movwf	??___xxtofl^0,c
 11031   0033A8  0E00               	movlw	0
 11032   0033AA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11033   0033AC  6E06               	movwf	(??___xxtofl+1)^0,c
 11034   0033AE  0E00               	movlw	0
 11035   0033B0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11036   0033B2  6E07               	movwf	(??___xxtofl+2)^0,c
 11037   0033B4  0EFE               	movlw	254
 11038   0033B6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11039   0033B8  6E08               	movwf	(??___xxtofl+3)^0,c
 11040   0033BA  5005               	movf	??___xxtofl^0,w,c
 11041   0033BC  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11042   0033BE  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11043   0033C0  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11044   0033C2  A4D8               	btfss	status,2,c
 11045   0033C4  EFE6  F019         	goto	u6041
 11046   0033C8  EFE8  F019         	goto	u6040
 11047   0033CC                     u6041:
 11048   0033CC  EFCB  F019         	goto	l5647
 11049   0033D0                     u6040:
 11050   0033D0  EFF6  F019         	goto	l1221
 11051   0033D4                     l5651:
 11052   0033D4  2A0A               	incf	___xxtofl@exp^0,f,c
 11053   0033D6  0E01               	movlw	1
 11054   0033D8  260B               	addwf	___xxtofl@arg^0,f,c
 11055   0033DA  0E00               	movlw	0
 11056   0033DC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 11057   0033DE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 11058   0033E0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 11059   0033E2  90D8               	bcf	status,0,c
 11060   0033E4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11061   0033E6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11062   0033E8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11063   0033EA  320B               	rrcf	___xxtofl@arg^0,f,c
 11064   0033EC                     l1221:
 11065   0033EC  0E00               	movlw	0
 11066   0033EE  140B               	andwf	___xxtofl@arg^0,w,c
 11067   0033F0  6E05               	movwf	??___xxtofl^0,c
 11068   0033F2  0E00               	movlw	0
 11069   0033F4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11070   0033F6  6E06               	movwf	(??___xxtofl+1)^0,c
 11071   0033F8  0E00               	movlw	0
 11072   0033FA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11073   0033FC  6E07               	movwf	(??___xxtofl+2)^0,c
 11074   0033FE  0EFF               	movlw	255
 11075   003400  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11076   003402  6E08               	movwf	(??___xxtofl+3)^0,c
 11077   003404  5005               	movf	??___xxtofl^0,w,c
 11078   003406  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11079   003408  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11080   00340A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11081   00340C  A4D8               	btfss	status,2,c
 11082   00340E  EF0B  F01A         	goto	u6051
 11083   003412  EF0D  F01A         	goto	u6050
 11084   003416                     u6051:
 11085   003416  EFEA  F019         	goto	l5651
 11086   00341A                     u6050:
 11087   00341A  EF15  F01A         	goto	l5659
 11088   00341E                     l5657:
 11089   00341E  060A               	decf	___xxtofl@exp^0,f,c
 11090   003420  90D8               	bcf	status,0,c
 11091   003422  360B               	rlcf	___xxtofl@arg^0,f,c
 11092   003424  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 11093   003426  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 11094   003428  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 11095   00342A                     l5659:
 11096   00342A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 11097   00342C  EF1A  F01A         	goto	u6061
 11098   003430  EF1C  F01A         	goto	u6060
 11099   003434                     u6061:
 11100   003434  EF24  F01A         	goto	l1228
 11101   003438                     u6060:
 11102   003438  0E02               	movlw	2
 11103   00343A  600A               	cpfslt	___xxtofl@exp^0,c
 11104   00343C  EF22  F01A         	goto	u6071
 11105   003440  EF24  F01A         	goto	u6070
 11106   003444                     u6071:
 11107   003444  EF0F  F01A         	goto	l5657
 11108   003448                     u6070:
 11109   003448                     l1228:
 11110   003448  B00A               	btfsc	___xxtofl@exp^0,0,c
 11111   00344A  EF29  F01A         	goto	u6081
 11112   00344E  EF2B  F01A         	goto	u6080
 11113   003452                     u6081:
 11114   003452  EF2C  F01A         	goto	l5665
 11115   003456                     u6080:
 11116   003456  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 11117   003458                     l5665:
 11118   003458  90D8               	bcf	status,0,c
 11119   00345A  320A               	rrcf	___xxtofl@exp^0,f,c
 11120   00345C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 11121   003460  6A06               	clrf	(??___xxtofl+1)^0,c
 11122   003462  6A07               	clrf	(??___xxtofl+2)^0,c
 11123   003464  6A08               	clrf	(??___xxtofl+3)^0,c
 11124   003466  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 11125   00346A  6A07               	clrf	(??___xxtofl+2)^0,c
 11126   00346C  6A06               	clrf	(??___xxtofl+1)^0,c
 11127   00346E  6A05               	clrf	??___xxtofl^0,c
 11128   003470  5005               	movf	??___xxtofl^0,w,c
 11129   003472  120B               	iorwf	___xxtofl@arg^0,f,c
 11130   003474  5006               	movf	(??___xxtofl+1)^0,w,c
 11131   003476  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 11132   003478  5007               	movf	(??___xxtofl+2)^0,w,c
 11133   00347A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 11134   00347C  5008               	movf	(??___xxtofl+3)^0,w,c
 11135   00347E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 11136   003480  5009               	movf	___xxtofl@sign^0,w,c
 11137   003482  B4D8               	btfsc	status,2,c
 11138   003484  EF46  F01A         	goto	u6091
 11139   003488  EF48  F01A         	goto	u6090
 11140   00348C                     u6091:
 11141   00348C  EF50  F01A         	goto	l5675
 11142   003490                     u6090:
 11143   003490  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11144   003492  EF4F  F01A         	goto	u6100
 11145   003496  EF4D  F01A         	goto	u6101
 11146   00349A                     u6101:
 11147   00349A  EF50  F01A         	goto	l5675
 11148   00349E                     u6100:
 11149   00349E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 11150   0034A0                     l5675:
 11151   0034A0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 11152   0034A4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 11153   0034A8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 11154   0034AC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 11155   0034B0                     l1217:
 11156   0034B0  0012               	return		;funcret
 11157   0034B2                     __end_of___xxtofl:
 11158                           	callstack 0
 11159                           
 11160                           	psect	rparam
 11161   000000                     
 11162                           	psect	idloc
 11163                           
 11164                           ;Config register IDLOC0 @ 0x200000
 11165                           ;	unspecified, using default values
 11166   200000                     	org	2097152
 11167   200000  FF                 	db	255
 11168                           
 11169                           ;Config register IDLOC1 @ 0x200001
 11170                           ;	unspecified, using default values
 11171   200001                     	org	2097153
 11172   200001  FF                 	db	255
 11173                           
 11174                           ;Config register IDLOC2 @ 0x200002
 11175                           ;	unspecified, using default values
 11176   200002                     	org	2097154
 11177   200002  FF                 	db	255
 11178                           
 11179                           ;Config register IDLOC3 @ 0x200003
 11180                           ;	unspecified, using default values
 11181   200003                     	org	2097155
 11182   200003  FF                 	db	255
 11183                           
 11184                           ;Config register IDLOC4 @ 0x200004
 11185                           ;	unspecified, using default values
 11186   200004                     	org	2097156
 11187   200004  FF                 	db	255
 11188                           
 11189                           ;Config register IDLOC5 @ 0x200005
 11190                           ;	unspecified, using default values
 11191   200005                     	org	2097157
 11192   200005  FF                 	db	255
 11193                           
 11194                           ;Config register IDLOC6 @ 0x200006
 11195                           ;	unspecified, using default values
 11196   200006                     	org	2097158
 11197   200006  FF                 	db	255
 11198                           
 11199                           ;Config register IDLOC7 @ 0x200007
 11200                           ;	unspecified, using default values
 11201   200007                     	org	2097159
 11202   200007  FF                 	db	255
 11203                           
 11204                           	psect	config
 11205                           
 11206                           ; Padding undefined space
 11207   300000                     	org	3145728
 11208   300000  FF                 	db	255
 11209                           
 11210                           ;Config register CONFIG1H @ 0x300001
 11211                           ;	Oscillator Selection bits
 11212                           ;	OSC = HS, HS oscillator
 11213                           ;	Fail-Safe Clock Monitor Enable bit
 11214                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11215                           ;	Internal/External Oscillator Switchover bit
 11216                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11217   300001                     	org	3145729
 11218   300001  02                 	db	2
 11219                           
 11220                           ;Config register CONFIG2L @ 0x300002
 11221                           ;	Power-up Timer Enable bit
 11222                           ;	PWRT = OFF, PWRT disabled
 11223                           ;	Brown-out Reset Enable bits
 11224                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 11225                           ;	Brown Out Reset Voltage bits
 11226                           ;	BORV = 1, 
 11227   300002                     	org	3145730
 11228   300002  09                 	db	9
 11229                           
 11230                           ;Config register CONFIG2H @ 0x300003
 11231                           ;	Watchdog Timer Enable bit
 11232                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11233                           ;	Watchdog Timer Postscale Select bits
 11234                           ;	WDTPS = 32768, 1:32768
 11235   300003                     	org	3145731
 11236   300003  1E                 	db	30
 11237                           
 11238                           ; Padding undefined space
 11239   300004                     	org	3145732
 11240   300004  FF                 	db	255
 11241                           
 11242                           ;Config register CONFIG3H @ 0x300005
 11243                           ;	CCP2 MUX bit
 11244                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11245                           ;	PORTB A/D Enable bit
 11246                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11247                           ;	Low-Power Timer1 Oscillator Enable bit
 11248                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11249                           ;	MCLR Pin Enable bit
 11250                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11251   300005                     	org	3145733
 11252   300005  81                 	db	129
 11253                           
 11254                           ;Config register CONFIG4L @ 0x300006
 11255                           ;	Stack Full/Underflow Reset Enable bit
 11256                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11257                           ;	Single-Supply ICSP Enable bit
 11258                           ;	LVP = OFF, Single-Supply ICSP disabled
 11259                           ;	Extended Instruction Set Enable bit
 11260                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11261                           ;	Background Debugger Enable bit
 11262                           ;	DEBUG = 0x1, unprogrammed default
 11263   300006                     	org	3145734
 11264   300006  81                 	db	129
 11265                           
 11266                           ; Padding undefined space
 11267   300007                     	org	3145735
 11268   300007  FF                 	db	255
 11269                           
 11270                           ;Config register CONFIG5L @ 0x300008
 11271                           ;	Code Protection bit
 11272                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11273                           ;	Code Protection bit
 11274                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11275                           ;	Code Protection bit
 11276                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11277                           ;	Code Protection bit
 11278                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11279   300008                     	org	3145736
 11280   300008  0F                 	db	15
 11281                           
 11282                           ;Config register CONFIG5H @ 0x300009
 11283                           ;	Boot Block Code Protection bit
 11284                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11285                           ;	Data EEPROM Code Protection bit
 11286                           ;	CPD = OFF, Data EEPROM not code-protected
 11287   300009                     	org	3145737
 11288   300009  C0                 	db	192
 11289                           
 11290                           ;Config register CONFIG6L @ 0x30000A
 11291                           ;	Write Protection bit
 11292                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11293                           ;	Write Protection bit
 11294                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11295                           ;	Write Protection bit
 11296                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11297                           ;	Write Protection bit
 11298                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11299   30000A                     	org	3145738
 11300   30000A  0F                 	db	15
 11301                           
 11302                           ;Config register CONFIG6H @ 0x30000B
 11303                           ;	Configuration Register Write Protection bit
 11304                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11305                           ;	Boot Block Write Protection bit
 11306                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11307                           ;	Data EEPROM Write Protection bit
 11308                           ;	WRTD = OFF, Data EEPROM not write-protected
 11309   30000B                     	org	3145739
 11310   30000B  E0                 	db	224
 11311                           
 11312                           ;Config register CONFIG7L @ 0x30000C
 11313                           ;	Table Read Protection bit
 11314                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11315                           ;	Table Read Protection bit
 11316                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11317                           ;	Table Read Protection bit
 11318                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11319                           ;	Table Read Protection bit
 11320                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11321   30000C                     	org	3145740
 11322   30000C  0F                 	db	15
 11323                           
 11324                           ;Config register CONFIG7H @ 0x30000D
 11325                           ;	Boot Block Table Read Protection bit
 11326                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11327   30000D                     	org	3145741
 11328   30000D  40                 	db	64
 11329                           tosu	equ	0xFFF
 11330                           tosh	equ	0xFFE
 11331                           tosl	equ	0xFFD
 11332                           stkptr	equ	0xFFC
 11333                           pclatu	equ	0xFFB
 11334                           pclath	equ	0xFFA
 11335                           pcl	equ	0xFF9
 11336                           tblptru	equ	0xFF8
 11337                           tblptrh	equ	0xFF7
 11338                           tblptrl	equ	0xFF6
 11339                           tablat	equ	0xFF5
 11340                           prodh	equ	0xFF4
 11341                           prodl	equ	0xFF3
 11342                           indf0	equ	0xFEF
 11343                           postinc0	equ	0xFEE
 11344                           postdec0	equ	0xFED
 11345                           preinc0	equ	0xFEC
 11346                           plusw0	equ	0xFEB
 11347                           fsr0h	equ	0xFEA
 11348                           fsr0l	equ	0xFE9
 11349                           wreg	equ	0xFE8
 11350                           indf1	equ	0xFE7
 11351                           postinc1	equ	0xFE6
 11352                           postdec1	equ	0xFE5
 11353                           preinc1	equ	0xFE4
 11354                           plusw1	equ	0xFE3
 11355                           fsr1h	equ	0xFE2
 11356                           fsr1l	equ	0xFE1
 11357                           bsr	equ	0xFE0
 11358                           indf2	equ	0xFDF
 11359                           postinc2	equ	0xFDE
 11360                           postdec2	equ	0xFDD
 11361                           preinc2	equ	0xFDC
 11362                           plusw2	equ	0xFDB
 11363                           fsr2h	equ	0xFDA
 11364                           fsr2l	equ	0xFD9
 11365                           status	equ	0xFD8

Data Sizes:
    Strings     83
    Constant    16
    Data        44
    BSS         164
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     127
    BANK0           128     29     124
    BANK1           256      0     113
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    atol@s	PTR const unsigned char  size(2) Largest target is 11
		 -> str_first_number(BANK1[11]), str_sec_number(BANK1[11]), 

    convert_float32_to_string@str	PTR unsigned char  size(2) Largest target is 11
		 -> str_res(BANK1[11]), 

    convert_sint32_to_string@str	PTR unsigned char  size(1) Largest target is 11
		 -> str_int_res(BANK0[11]), 

    convert_str_to_int@num	PTR long  size(1) Largest target is 4
		 -> first_num(BANK0[4]), sec_num(BANK0[4]), 

    convert_str_to_int@str	PTR const unsigned char  size(2) Largest target is 11
		 -> str_first_number(BANK1[11]), str_sec_number(BANK1[11]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), keypad$keypad_columns_pins(BANK0[4]), keypad$keypad_row_pins(BANK0[4]), lcd_4(BANK0[6]), 
		 -> lcd_4$lcd_data(BANK0[4]), led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_opj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), keypad$keypad_row_pins(BANK0[4]), lcd_4(BANK0[6]), lcd_4$lcd_data(BANK0[4]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_opj(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), keypad$keypad_columns_pins(BANK0[4]), 

    gpio_pin_read_logic@logic	PTR enum E2948 size(1) Largest target is 1
		 -> button_read_state@Pin_Logic_Status(COMRAM[1]), keypad_get_value@logic(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), keypad$keypad_row_pins(BANK0[4]), lcd_4(BANK0[6]), lcd_4$lcd_data(BANK0[4]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_opj(COMRAM[1]), 
		 -> relay_turn_off@pin_opj(COMRAM[1]), relay_turn_on@pin_opj(COMRAM[1]), 

    keypad_get_value@_keypad_obj	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), 

    keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> val(COMRAM[1]), 

    keypad_initialize@_keypad_obj	PTR const struct . size(1) Largest target is 8
		 -> keypad(BANK0[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4(BANK0[6]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4(BANK0[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 21
		 -> STR_10(CODE[13]), STR_8(CODE[21]), STR_9(CODE[21]), str_first_number(BANK1[11]), 
		 -> str_int_res(BANK0[11]), str_res(BANK1[11]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 21
		 -> STR_10(CODE[13]), STR_8(CODE[21]), STR_9(CODE[21]), str_first_number(BANK1[11]), 
		 -> str_int_res(BANK0[11]), str_res(BANK1[11]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4(BANK0[6]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memset@dest	PTR void  size(2) Largest target is 11
		 -> str_int_res(BANK0[11]), str_res(BANK1[11]), 

    memset@p	PTR unsigned char  size(2) Largest target is 11
		 -> str_int_res(BANK0[11]), str_res(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1309$buffer	PTR unsigned char  size(2) Largest target is 0

    S1309$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__memset	PTR void  size(2) Largest target is 11
		 -> str_int_res(BANK0[11]), str_res(BANK1[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[4]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[4]), STR_7(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> str_int_res(BANK0[11]), str_res(BANK1[11]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_14(CODE[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[4]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[4]), STR_7(CODE[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[4]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[4]), STR_7(CODE[6]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[4]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[4]), STR_7(CODE[6]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _lcd_4bit_send_string_pos->_lcd_4bit_send_string
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _keypad_get_value->_gpio_pin_write_logic
    _convert_str_to_int->_atol
    _atol->___lmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _ecu_layer_intialize->_lcd_4bit_intialize
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_convert_float32_to_string
    _convert_sint32_to_string->_sprintf
    _convert_float32_to_string->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  220580
                                             27 BANK0      2     2      0
                            ___fldiv
                             ___lmul
                           ___xxtofl
              _application_intialize
          _convert_float32_to_string
           _convert_sint32_to_string
                 _convert_str_to_int
                   _keypad_get_value
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   36056
                                             20 COMRAM     5     0      5
               _lcd_4bit_send_string
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 4     1      3   15328
                                             16 COMRAM     4     1      3
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_data_pos                          5     1      4   34590
                                             19 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   18154
                                             16 COMRAM     3     0      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   15062
                                             13 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                     8     6      2    5639
                                              8 COMRAM     7     5      2
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     460
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _convert_str_to_int                                   4     1      3    1378
                                             26 COMRAM     3     0      3
                               _atol
 ---------------------------------------------------------------------------------
 (2) _atol                                                14    10      4     946
                                             12 COMRAM    14    10      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _convert_sint32_to_string                             6     1      5   45487
                                             21 BANK0      5     0      5
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _convert_float32_to_string                            7     1      6   45127
                                             21 BANK0      6     0      6
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    15      7   42783
                                              1 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   41181
                                            123 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3   40669
                                            111 COMRAM    12     9      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                11     6      5    4957
                                             22 COMRAM    11     6      5
                            ___lldiv
                            ___llmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     412
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     421
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1402
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     962
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   25892
                                             59 COMRAM    52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3413
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2903
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                14     9      5    5780
                                             22 COMRAM    14     9      5
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3579
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1177
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     613
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     625
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    2027
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   30910
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   30910
                  _keypad_initialize
                 _lcd_4bit_intialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_intialize                                   4     3      1   24076
                                             16 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   17494
                                             13 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       6     4      2    5180
                                              8 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    4786
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialize                                    4     3      1    6831
                                             11 COMRAM     4     3      1
       _gpio_pin_direction_intialize
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   3     2      1    6118
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4435
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         7     6      1     407
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
   ___lmul
   ___xxtofl
   _application_intialize
     _ecu_layer_intialize
       _keypad_initialize
         _gpio_pin_direction_intialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _lcd_4bit_intialize
         _gpio_pin_intialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
   _convert_float32_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aldiv
             ___almod
             _abs
               ___almod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _utoa
             ___lldiv
             ___llmod
             _pad
   _convert_sint32_to_string
     _memset
     _sprintf
   _convert_str_to_int
     _atol
       ___lmul
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      71       7       44.1%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1D      7C       5       96.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7F       1      100.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16C      39        0.0%
DATA                 0      0     16C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Apr 09 05:46:58 2024

                           ___fldiv@aexp 0027                             ___fldiv@bexp 0026  
                           ___fldiv@sign 001F                          ?_lcd_send_4bits 0009  
                                     l70 4060                                       l80 4726  
                                     l75 4782                                       l85 4A9A  
                                     l93 44BE                                       l98 4B7A  
            convert_sint32_to_string@str 00F8                                       _op 0095  
                    ___wmul@multiplicand 0003                                      l217 4534  
                                    l420 430E                                      l413 399A  
                                    l181 4882                                      l262 4606  
                                    l191 495E                                      l521 2780  
                                    l434 46CA                                      l194 4C46  
                                    l346 4C58                                      l186 47DA  
                                    l276 3F7E                                      l526 27FC  
                                    l553 4C5E                                      l529 2B6E  
                                    l394 388A                                      l570 458E  
                                    l651 3E9A                                      l571 459E  
                                    l556 4C24                                      l638 3AA6  
                                    l559 4C00                                      l824 3C6A  
                                    l833 4B0C                                      l593 43B2  
                                    l818 41C4                                      l586 43A2  
                                    l829 3CB0                                      l856 3BAC  
                                    l986 443A                                      l979 442A  
                   keypad_initialize@ret 000D                                      _abs 4B7C  
                                    _pad 4608                                      _res 0088  
                                    _ret 0098                                      _val 007F  
    __end_of_lcd_4bit_send_enable_signal 4C48              _lcd_4bit_send_enable_signal 4C26  
                    led_initialize@F3028 009F                    relay_initialize@F3022 009B  
                                    wreg 0FE8                             ___flmul@aexp 000E  
                           ___flmul@bexp 0013              lcd_send_4bits@_data_command 000A  
                           ___flmul@sign 000D                             ___flmul@temp 0018  
                           ___flmul@prod 0014                             ___fltol@exp1 000A  
                                   l1104 1D9A                                     l1113 1E6A  
                                   l1114 1E58                                     ?_abs 000B  
                                   l1300 31AC                                     l1221 33EC  
                                   l1141 2F0A                                     l1214 3354  
                                   l1143 2D6A                                     l1152 2DB0  
                                   l1217 34B0                                     l1313 32FC  
                                   l1129 4918                                     l1154 2E28  
                                   l1146 2D2E                                     l1155 2E16  
                                   l1243 3614                                     l1228 3448  
                                   l1252 4B44                                     l1180 220C  
                                   l1324 1A90                                     l1420 2776  
                                   l1173 2016                                     l1190 233C  
                                   l1182 2284                                     l1246 3624  
                                   l1183 2272                                     l1087 1C80  
                                   l1327 13D8                                     l1096 1F50  
                                   l1088 1C6E                                     l1177 237A  
                                   l1089 1C34                                     l1329 1226  
                                   l1259 49E0                                     l1508 411A  
                                   l1516 4A20                                     l1292 466C  
                                   l1452 4A5E                                     l1525 4AD4  
                                   l1357 1812                                     l1470 4BAE  
                                   l1462 3DAE                                     l1390 4262  
                                   l1519 4C60                                     l1288 461E  
                                   l1376 3652                                     l1297 315E  
                                   l1490 4830                                     l1394 426A  
                                   l1386 3778                                     l1378 365A  
                                   l4131 38C8                                     l1467 4B96  
                                   l1299 3166                                     l1476 311C  
                                   l4133 391E                                     l4125 388C  
                                   l5101 467E                                     l4127 38A0  
                                   l5103 469E                                     l5111 4728  
                                   l1479 3060                                     l1496 48D2  
                                   l4137 396E                                     l4129 38C0  
                                   l5105 46A6                                     l5113 4738  
                                   l4139 3998                                     l5107 46C8  
                                   l5115 4740                                     l5301 45B8  
                                   l5117 4780                                     l5311 45CE  
                                   l5303 45C0                                     l5321 45E4  
                                   l5313 45D0                                     l7001 4B7C  
                                   l5323 45F2                                     l5315 45E0  
                                   l5251 3FAC                                     l7003 4B8A  
                                   l7011 3D38                                     l5331 4536  
                                   l5325 45F4                                     l5309 45C4  
                                   l5261 3FBE                                     l5245 3F80  
                                   l7101 31BE                                     l6301 1ACE  
                                   l7013 3D44                                     l7005 3CB2  
                                   l5333 4546                                     ?_pad 000F  
                                   l5327 4604                                     l5271 4008  
                                   l5263 3FCE                                     l5247 3F94  
                                   l7103 31C4                                     l7111 3246  
                                   l6311 1AFE                                     l6303 1ADE  
                                   l7023 3DA6                                     l7007 3CD2  
                                   l7031 47DC                                     l5335 4554  
                                   l5351 426C                                     l5281 4044  
                                   l5273 4014                                     l5265 3FDC  
                                   l5257 3FB0                                     l5249 3F9C  
                                   l7113 3260                                     l7121 32BA  
                                   l7105 3206                                     l6401 1CD0  
                                   l6321 1B28                                     l6313 1B10  
                                   l6305 1AE0                                     l7009 3D10  
                                   l7017 3D50                                     l7041 2F2C  
                                   l7033 47EA                                     l7201 126E  
                                   l5337 4564                                     l5361 430C  
                                   l5353 4280                                     l5601 3EF8  
                                   l4731 37B6                                     l5099 466E  
                                   l5283 4050                                     l5275 4020  
                                   l5267 3FE8                                     l5259 3FBC  
                                   l5451 4C50                                     l7123 32CA  
                                   l7115 3276                                     l7107 320C  
                                   l6411 1CFE                                     l6403 1CDE  
                                   l6323 1B38                                     l6331 1B62  
                                   l6315 1B12                                     l6307 1AE8  
                                   l7019 3D62                                     l7051 3014  
                                   l7043 2F82                                     l7035 47FE  
                                   l7027 4A9C                                     l7211 1360  
                                   l7203 12AA                                     l7131 1066  
                                   l5339 456E                                     l5355 4290  
                                   l5611 3F1A                                     l5603 3F06  
                                   l5291 46DC                                     l5371 44D8  
                                   l4733 380C                                     l4725 377A  
                                   l5277 402C                                     l5269 4002  
                                   l5285 405E                                     l7125 32D0  
                                   l7117 3290                                     l7109 3212  
                                   l6421 1D6A                                     l6413 1D08  
                                   l6405 1CEA                                     l6341 1B9A  
                                   l6333 1B72                                     l6325 1B48  
                                   l6317 1B18                                     l6309 1AF8  
                                   l7061 30FC                                     l7053 3050  
                                   l7045 2F96                                     l7029 4AA4  
                                   l7301 1844                                     l7221 13F0  
                                   l7213 1366                                     l7205 12DC  
                                   l7141 10B0                                     l7133 106A  
                                   l6501 4BDC                                     l5357 42B0  
                                   l5621 3F6C                                     l5613 3F2A  
                                   l5605 3F16                                     l5293 46E4  
                                   l5373 44EA                                     l5365 44C0  
                                   l5381 4450                                     l4727 378E  
                                   l4751 494C                                     l4743 491A  
                                   l5279 4038                                     l5447 4C48  
                                   l7127 32E0                                     l7119 32AA  
                                   l6423 1D7A                                     l6407 1CEE  
                                   l6415 1D0E                                     l6351 1BAE  
                                   l6343 1B9E                                     l6335 1B84  
                                   l6327 1B58                                     l6319 1B26  
                                   l7063 310C                                     l7047 2FA4  
                                   l7055 3084                                     l7039 2F0C  
                                   l7071 48A4                                     l7311 186C  
                                   l7303 184A                                     l7231 1422  
                                   l7223 13FC                                     l7207 1318  
                                   l7151 10EC                                     l7143 10B8  
                                   l7135 107A                                     l6503 4BF8  
                                   l6511 4336                                     l5359 42B8  
                                   l5623 3F6E                                     l5615 3F3A  
                                   l5295 4724                                     l5375 44FC  
                                   l5367 44C0                                     l5383 4458  
                                   l5641 337A                                     l5633 3300  
                                   l4737 385C                                     l4729 37AE  
                                   l4761 4C3A                                     l4753 494E  
                                   l5449 4C48                                     l5625 4C5A  
                                   l6601 3E6A                                     l6281 4082  
                                   l7081 3142                                     l6441 1DFC  
                                   l6433 1DD4                                     l6417 1D34  
                                   l6425 1D8A                                     l6409 1CFC  
                                   l6361 1BC2                                     l6353 1BB2  
                                   l6345 1BA2                                     l6337 1B92  
                                   l6329 1B5A                                     l7057 30C0  
                                   l7073 48A8                                     l7321 18A0  
                                   l7305 1852                                     l7313 1872  
                                   l7241 146A                                     l7233 1430  
                                   l7225 1404                                     l7209 132C  
                                   l7217 13A6                                     l7161 1132  
                                   l7153 10F4                                     l7145 10C0  
                                   l7137 1088                                     l7401 41C6  
                                   l6521 4380                                     l6513 433E  
                                   l5617 3F5A                                     l5289 46CC  
                                   l5369 44C6                                     l5377 450E  
                                   l5481 4A60                                     l5385 4486  
                                   l5651 33D4                                     l5635 3310  
                                   l4739 3888                                     l5299 45A0  
                                   l4755 4C26                                     l6531 39A0  
                                   l6603 3E7A                                     l6283 408C  
                                   l7091 3184                                     l7083 3144  
                                   l6611 2B7E                                     l6443 1E04  
                                   l6435 1DDE                                     l6427 1DB0  
                                   l6419 1D68                                     l6451 1E28  
                                   l6371 1BD6                                     l6363 1BC6  
                                   l6355 1BB6                                     l6347 1BA6  
                                   l6339 1B96                                     l6291 1A92  
                                   l7059 30D4                                     l7075 48B4  
                                   l7067 4884                                     l7331 1954  
                                   l7323 18F8                                     l7315 1884  
                                   l7307 1862                                     l7251 157E  
                                   l7243 147A                                     l7235 1448  
                                   l7227 140C                                     l7219 13E0  
                                   l7163 1138                                     l7147 10D0  
                                   l7155 10F8                                     l7139 108C  
                                   l7411 4234                                     l7403 41CE  
                                   l6523 4390                                     l6515 434A  
                                   l6507 4310                                     l5619 3F5C  
                                   l5483 4A70                                     l5387 448A  
                                   l5379 443C                                     l5491 4B46  
                                   l5661 3438                                     l5653 33D6  
                                   l5645 338E                                     l5637 331E  
                                   l4757 4C26                                     l4749 4922  
                                   l6541 39E0                                     l6533 39AE  
                                   l6605 3E8A                                     l6285 40A8  
                                   l6277 4062                                     l7093 3194  
                                   l7085 3152                                     l6701 2DAE  
                                   l6621 2BBE                                     l6613 2B8C  
                                   l6461 1E7A                                     l6453 1E2C  
                                   l6445 1E08                                     l6437 1DEC  
                                   l6429 1DC0                                     l6381 1C4E  
                                   l6373 1C00                                     l6365 1BCA  
                                   l6357 1BBA                                     l6349 1BAA  
                                   l6293 1A9E                                     l7069 4898  
                                   l7077 48B8                                     l7341 19C2  
                                   l7333 1970                                     l7325 192C  
                                   l7317 1896                                     l7309 1866  
                                   l7261 161A                                     l7245 148E  
                                   l7253 1582                                     l7237 145A  
                                   l7229 1410                                     l7181 11B8  
                                   l7165 1140                                     l7157 111E  
                                   l7173 1178                                     l7149 10E0  
                                   l7405 41F0                                     l7413 423C  
                                   l6525 4392                                     l6517 4358  
                                   l6509 4320                                     l7501 2644  
                                   l7421 23B4                                     l5581 3ECC  
                                   l5485 4A78                                     l5389 44BC  
                                   l5493 4B56                                     l5671 3490  
                                   l5663 3456                                     l5655 33E2  
                                   l5647 3396                                     l5639 3364  
                                   l4759 4C32                                     l6551 3A1E  
                                   l6543 39E4                                     l6535 39BE  
                                   l6287 40DA                                     l6279 4072  
                                   l7095 31A0                                     l7087 316E  
                                   l7079 311E                                     l6711 2E0E  
                                   l6703 2DC0                                     l6631 2BE4  
                                   l6623 2BC0                                     l6615 2B8E  
                                   l6471 1EE0                                     l6463 1E86  
                                   l6455 1E3A                                     l6447 1E18  
                                   l6439 1DEE                                     l6391 1C8E  
                                   l6383 1C52                                     l6375 1C1C  
                                   l6367 1BCE                                     l6359 1BBE  
                                   l6295 1AAC                                     l7351 1A0A  
                                   l7343 19DA                                     l7335 1978  
                                   l7327 1932                                     l7319 189A  
                                   l7271 16F4                                     l7263 164C  
                                   l7255 15A0                                     l7247 14F2  
                                   l7239 1462                                     l7183 11C0  
                                   l7175 119E                                     l7191 11D8  
                                   l7167 1154                                     l7159 112E  
                                   l7407 41F8                                     l6527 439C  
                                   l6519 4362                                     l7511 2692  
                                   l7503 264C                                     l7423 23B8  
                                   l7415 237C                                     l5583 3ED0  
                                   l5487 4A98                                     l5495 4B5A  
                                   l5673 349E                                     l5665 3458  
                                   l5657 341E                                     l5649 33A2  
                                   l6561 3A66                                     l6553 3A2C  
                                   l6545 39F4                                     l6537 39C2  
                                   l6529 399C                                     l7097 31A8  
                                   l7089 317E                                     l6721 2E7C  
                                   l6705 2DCE                                     l6641 2C24  
                                   l6633 2BF2                                     l6617 2B9E  
                                   l6625 2BC8                                     l6609 2B72  
                                   l6801 20B2                                     l6481 1F28  
                                   l6473 1EF0                                     l6465 1E94  
                                   l6457 1E50                                     l6449 1E1A  
                                   l6393 1C9E                                     l6385 1C60  
                                   l6377 1C2C                                     l6369 1BD2  
                                   l6297 1AAE                                     l7361 1A74  
                                   l7353 1A28                                     l7337 1986  
                                   l7329 1936                                     l7281 1752  
                                   l7273 16F8                                     l7265 165A  
                                   l7257 15D4                                     l7249 154A  
                                   l7193 11F0                                     l7177 11AE  
                                   l7169 115C                                     l7409 4214  
                                   l7521 2706                                     l7513 26BA  
                                   l7441 2430                                     l7433 23D8  
                                   l7425 23C0                                     l7417 239E  
                                   l7601 4848                                     l5577 3E9C  
                                   l5497 4B6A                                     l5675 34A0  
                                   l5667 345C                                     l5659 342A  
                                   l6563 3A70                                     l6555 3A36  
                                   l6547 3A0A                                     l6539 39D0  
                                   l7099 31B4                                     l6731 2EE6  
                                   l6715 2E38                                     l6723 2E80  
                                   l6707 2DD2                                     l6651 2C64  
                                   l6643 2C26                                     l6635 2BF4  
                                   l6627 2BD8                                     l6619 2BAE  
                                   l6811 20F8                                     l6803 20C0  
                                   l6483 1F2A                                     l6475 1F10  
                                   l6467 1ECE                                     l6387 1C62  
                                   l6379 1C42                                     l6299 1ABE  
                                   l7347 19EE                                     l7355 1A46  
                                   l7339 19B6                                     l7291 17EA  
                                   l7283 175A                                     l7275 172C  
                                   l7267 166A                                     l7259 1606  
                                   l7179 11B2                                     l7371 3646  
                                   l7507 2654                                     l7451 246E  
                                   l7443 2444                                     l7427 23C4  
                                   l7435 23F6                                     l7419 23A6  
                                   l7611 4798                                     l7603 4862  
                                   l5595 3ED8                                     l5579 3EBC  
                                   l5669 3480                                     l6557 3A54  
                                   l6549 3A12                                     l6565 3A76  
                                   l6581 3DD6                                     l6573 3DB0  
                                   l6493 49E2                                     l6733 2EEA  
                                   l6725 2E9A                                     l6717 2E44  
                                   l6709 2DE0                                     l6661 2C94  
                                   l6653 2C6C                                     l6637 2C04  
                                   l6645 2C2E                                     l6629 2BDE  
                                   l6901 3BDC                                     l6821 2166  
                                   l6813 2112                                     l6805 20CC  
                                   l6485 1F30                                     l6477 1F14  
                                   l6469 1ED0                                     l6397 1CB2  
                                   l6389 1C6C                                     l7357 1A56  
                                   l7349 1A04                                     l7293 180A  
                                   l7285 175E                                     l7277 173E  
                                   l7269 169E                                     l7197 1236  
                                   l7381 36B0                                     l7373 3662  
                                   l7365 3626                                     l7517 26E2  
                                   l7509 2672                                     l7461 24D8  
                                   l7445 244E                                     l7437 2406  
                                   l7429 23D0                                     l7533 2754  
                                   l7541 4A2A                                     l7613 479C  
                                   l7621 4C02                                     l5597 3EE6  
                                   l5589 3ED4                                     l7701 27E8  
                                   l7551 4B1A                                     l6567 3A86  
                                   l6559 3A64                                     l6591 3E1E  
                                   l6583 3DE4                                     l6575 3DB4  
                                   l6495 49EE                                     l6735 2EF8  
                                   l6727 2EB0                                     l6719 2E52  
                                   l6671 2CD2                                     l6663 2C94  
                                   l6655 2C70                                     l6647 2C3E  
                                   l6639 2C14                                     l6911 3C4A  
                                   l6903 3BEC                                     l6831 21FC  
                                   l6823 2190                                     l6815 2122  
                                   l6807 20DC                                     l6751 1F6C  
                                   l6487 1F3E                                     l6479 1F22  
                                   l6399 1CC2                                     l7359 1A6C  
                                   l7295 1822                                     l7287 1766  
                                   l7279 1742                                     l7199 123A  
                                   l7391 3718                                     l7383 36B6  
                                   l7375 366A                                     l7367 3636  
                                   l7527 2730                                     l7519 26F8  
                                   l7471 2542                                     l7463 24FE  
                                   l7447 2460                                     l7455 2476  
                                   l7439 2428                                     l7543 4A3A  
                                   l7615 47B8                                     l7607 4784  
                                   l5599 3EE8                                     l7711 286C  
                                   l7703 2800                                     l7553 4B26  
                                   l6569 3A96                                     l6593 3E2C  
                                   l6585 3DF4                                     l6577 3DC2  
                                   l6497 49FC                                     l6737 2EFE  
                                   l6729 2ECA                                     l6681 2D1E  
                                   l6673 2CE2                                     l6649 2C54  
                                   l6913 3C58                                     l6905 3C1A  
                                   l6841 223C                                     l6833 220A  
                                   l6825 21C6                                     l6817 213E  
                                   l6809 20E8                                     l6761 1FA4  
                                   l6753 1F6E                                     l6921 4AD6  
                                   l6489 1F40                                     l7297 1830  
                                   l7289 1772                                     l7393 3732  
                                   l7385 36BC                                     l7377 3674  
                                   l7369 3638                                     l7529 2748  
                                   l7449 2466                                     l7457 249C  
                                   l7545 4A56                                     l7561 49B8  
                                   l7609 4784                                     l7721 28A2  
                                   l7705 2818                                     l7555 4B2A  
                                   l6595 3E4A                                     l6587 3E0A  
                                   l6579 3DD2                                     l6499 4A00  
                                   l6739 2F00                                     l6691 2D68  
                                   l6683 2D2C                                     l6675 2CF2  
                                   l6667 2CA8                                     l6659 2C84  
                                   l6915 3CA8                                     l6907 3C2A  
                                   l6851 22AE                                     l6843 226A  
                                   l6835 221C                                     l6827 21D4  
                                   l6819 214A                                     l6771 1FD0  
                                   l6763 1FB4                                     l6755 1F7E  
                                   l6747 1F52                                     l6923 4AEC  
                                   l6931 3ABE                                     l7299 1840  
                                   l7395 374C                                     l7379 367A  
                                   l7387 36F0                                     l7483 25CA  
                                   l7475 255E                                     l7459 24B8  
                                   l7467 2522                                     l7539 4A22  
                                   l7563 49C0                                     l7571 34CA  
                                   l7619 4C02                                     l7731 28FA  
                                   l7715 287C                                     l7723 28C0  
                                   l7707 282E                                     l7813 3982  
                                   l7549 4B0E                                     l6597 3E5A  
                                   l6589 3E12                                     l6693 2D7A  
                                   l6685 2D38                                     l6677 2CFA  
                                   l6669 2CC2                                     l6917 3CAE  
                                   l6909 3C38                                     l6861 2324  
                                   l6853 22D8                                     l6837 222A  
                                   l6829 21F2                                     l6781 2026  
                                   l6773 1FE0                                     l6765 1FBA  
                                   l6757 1F8E                                     l6749 1F5E  
                                   l6925 4AFC                                     l6941 3B0E  
                                   l7389 3702                                     l7397 375C  
                                   l7493 260A                                     l7485 25E0  
                                   l7477 257E                                     l7469 2538  
                                   l7565 49D0                                     l7557 49A2  
                                   l7581 3526                                     l7573 34CE  
                                   l7733 290C                                     l7725 28DA  
                                   l7717 288C                                     l7709 285A  
                                   l6599 3E64                                     l6695 2D90  
                                   l6687 2D56                                     l6679 2D0A  
                                   l6863 2340                                     l6871 2366  
                                   l6847 2294                                     l6855 22DC  
                                   l6839 222E                                     l6791 2060  
                                   l6783 2036                                     l6775 1FF0  
                                   l6767 1FC0                                     l6759 1F9E  
                                   l6951 3B38                                     l6943 3B12  
                                   l6935 3AD2                                     l7487 25EE  
                                   l7479 25A6                                     l7495 2622  
                                   l7559 49B0                                     l7591 35AE  
                                   l7583 352E                                     l7575 34E8  
                                   l7743 2946                                     l7751 2970  
                                   l7735 2920                                     l7727 28DE  
                                   l7719 288E                                     l6697 2D96  
                                   l6689 2D58                                     l6873 236A  
                                   l6865 2350                                     l6857 22F6  
                                   l6849 22A0                                     l6793 2076  
                                   l6777 2000                                     l6769 1FCE  
                                   l6961 3B60                                     l6953 3B42  
                                   l6945 3B20                                     l6937 3AFC  
                                   l6929 3AA8                                     l7497 262C  
                                   l7593 35CE                                     l7577 3508  
                                   l7569 34B2                                     l7761 29E0  
                                   l7753 298A                                     l7745 2956  
                                   l7737 2930                                     l7729 28EA  
              _convert_float32_to_string 4784                                     l6699 2DA0  
                                   l6891 4198                                     l6883 411C  
                                   l6867 235E                                     l6859 230A  
                                   l6795 2082                                     l6787 204A  
                                   l6779 2006                                     l6963 3B6C  
                                   l6955 3B4C                                     l6939 3AFE  
                                   l7499 263E                                     l7595 35DE  
                                   l7587 354C                                     l7579 3522  
                                   l7763 29FA                                     l7755 299A  
                                   l7747 2958                                     l7691 2790  
                                   l6893 41BC                                     l6885 414A  
                                   l6869 2360                                     l6797 209A  
                                   l6789 2056                                     l6877 48D4  
                                   l6965 3B7C                                     l6981 43EC  
                                   l6973 43B4                                     l7597 4832  
                                   l7781 2A8C                                     l7757 29AE  
                                   l7693 27A0                                     l7685 2778  
                                   l6991 4616                                     l6895 41C2  
                                   l6887 415A                                     l6799 20A6  
                                   l6879 48E4                                     l6967 3B8C  
                                   l6983 440A                                     l6975 43CA  
                                   l7599 4844                                     l7775 2A4E  
                                   l7759 29C6                                     l7791 2B46  
                                   l7695 27B2                                     l7687 2780  
                                   l6993 462A                                     l6889 4188  
                                   l6969 3B9C                                     l6985 441A  
                                   l6977 43D2                                     l7777 2A64  
                                   l7785 2AAC                                     l7769 2A16  
                                   l7697 27C4                                     l7689 2784  
                                   l6995 463A                                     l6899 3BAE  
                                   l6987 4424                                     l6979 43DE  
                                   l7787 2B0C                                     l7779 2A70  
                                   l7699 27D6                                     l6997 463E  
                                   l6989 4608                                     l7789 2B2A  
                                   l6999 465C                                     STR_1 1061  
                                   STR_2 105E                                     STR_3 105A  
                                   STR_6 1056                                     STR_7 1048  
                                   STR_8 1011                                     STR_9 1026  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     u6000 3F7E  
                                   u6001 3F7A                                     u6010 3310  
                                   u6011 330C                                     u6100 349E  
                                   u6020 331E                                     u6101 349A  
                                   u6021 331A                                     u6030 337A  
                                   u6031 3376                                     u6040 33D0  
                                   u7000 1D7A                                     u6041 33CC  
                                   u7001 1D76                                     u6050 341A  
                                   u7010 1DB0                                     u6051 3416  
                                   u7011 1DAC                                     u6060 3438  
                                   u3820 38A0                                     u5500 4738  
                                   u7100 1E7A                                     u7020 1DC0  
                                   u6061 3434                                     u3821 389C  
                                   u5501 4734                                     u7101 1E76  
                                   u7021 1DBC                                     u6070 3448  
                                   u3830 38C0                                     u7110 1E94  
                                   u7030 1DEC                                     u6071 3444  
                                   u3831 38BC                                     u7111 1E90  
                                   u7031 1DE8                                     u6080 3456  
                                   u7120 1ECE                                     u7040 1DFC  
                                   u8000 3D38                                     u7200 4358  
                                   u5600 46DC                                     u6081 3452  
                                   u7121 1ECA                                     u7041 1DF8  
                                   u8001 3D34                                     u7201 4354  
                                   u5601 46D8                                     u6090 3490  
                                   u5610 45B8                                     u7130 1EE0  
                                   u7050 1E18                                     u8010 3D62  
                                   u7210 4380                                     u6091 348C  
                                   u5611 45B4                                     u7131 1EDC  
                                   u7051 1E14                                     u8011 3D5E  
                                   u7211 437C                                     u3844 38E6  
                                   u5620 45E0                                     u7220 39AE  
                                   u7300 3E0A                                     u7140 1EF0  
                                   u7060 1E28                                     u3845 38E2  
                                   u5621 45DC                                     u7221 39AA  
                                   u7301 3E06                                     u7141 1EEC  
                                   u7061 1E24                                     u3854 393C  
                                   u5630 4604                                     u4910 495E  
                                   u7230 39D0                                     u7310 3E2C  
                                   u7150 1F10                                     u7070 1E3A  
                                   u8030 3D9C                                     u8110 3010  
                                   u5710 4450                                     u3855 3938  
                                   u5631 4600                                     u4911 495A  
                                   u7231 39CC                                     u7311 3E28  
                                   u7151 1F0C                                     u7071 1E36  
                                   u8031 3D96                                     u8111 300C  
                                   u5711 444C                                     u5480 467E  
                                   u4904 493C                                     u7240 3A0A  
                                   u7320 3E4A                                     u8200 3142  
                                   u7400 2C54                                     u7160 1F22  
                                   u7080 1E50                                     u8040 3D9E  
                                   u8120 3034                                     u5640 4554  
                                   u5704 4300                                     u5720 447E  
                                   u9000 27E8                                     u5481 467A  
                                   u4905 4938                                     u7241 3A06  
                                   u7321 3E46                                     u8201 313E  
                                   u7401 2C50                                     u7161 1F1E  
                                   u7081 1E4C                                     u8025 3D74  
                                   u8105 2FB8                                     u5641 4550  
                                   u5705 42FC                                     u9001 27E4  
                                   u4850 378E                                     u5490 469E  
                                   u7250 3A2C                                     u7330 3E7A  
                                   u8210 3152                                     u7410 2C94  
                                   u7170 1F3E                                     u7090 1E66  
                                   u8130 3050                                     u8106 2FC2  
                                   u8050 4AD4                                     u5650 458E  
                                   u5730 44AC                                     u9010 27FC  
                                   u4851 378A                                     u5491 469A  
                                   u7251 3A28                                     u7331 3E76  
                                   u8211 314E                                     u7411 2C90  
                                   u7171 1F3A                                     u7091 1E62  
                                   u8131 304C                                     u8107 2FD2  
                                   u8051 4AD0                                     u5651 458A  
                                   u9011 27F8                                     u4860 37AE  
                                   u5580 3F94                                     u7260 3A54  
                                   u7180 4A20                                     u8220 317E  
                                   u7500 2E0E                                     u7420 2D0A  
                                   u7340 2B8C                                     u8140 30A4  
                                   u8060 47EA                                     u8300 1088  
                                   u5740 44BC                                     u9020 286C  
                                   u4861 37AA                                     u5581 3F90  
                                   u7261 3A50                                     u7181 4A1C  
                                   u8221 317A                                     u7501 2E0A  
                                   u7421 2D06                                     u7341 2B88  
                                   u8125 302A                                     u8061 47E6  
                                   u8301 1084                                     u5741 44B8  
                                   u9021 2868                                     u5590 3FCE  
                                   u7270 3A86                                     u8230 3194  
                                   u7510 2E24                                     u7430 2D2C  
                                   u7350 2B9E                                     u8150 30C0  
                                   u8070 2F54                                     u8310 10D0  
                                   u7190 4336                                     u5670 4280  
                                   u9030 28FA                                     u5591 3FCA  
                                   u7271 3A82                                     u8231 3190  
                                   u7511 2E20                                     u7431 2D28  
                                   u7351 2B9A                                     u8151 30BC  
                                   u8311 10CC                                     u7191 4332  
                                   u5671 427C                                     u5727 4474  
                                   u9031 28F6                                     u7280 3DC2  
                                   u8240 3260                                     u7520 2E38  
                                   u7440 2D56                                     u7360 2BAE  
                                   u7600 1FCE                                     u6800 1ABE  
                                   u8160 30FC                                     u8080 2F82  
                                   u8400 1318                                     u8320 10E0  
                                   u5680 4290                                     u9040 290C  
                                   u7281 3DBE                                     u8241 325C  
                                   u7521 2E34                                     u7441 2D52  
                                   u7361 2BAA                                     u7601 1FCA  
                                   u6801 1ABA                                     u8161 30F8  
                                   u8145 309A                                     u8081 2F7E  
                                   u8401 1314                                     u8321 10DC  
                                   u5681 428C                                     u5737 44A2  
                                   u9041 2908                                     u4890 3872  
                                   u4874 37D4                                     u7290 3DE4  
                                   u8250 3276                                     u7530 2E52  
                                   u7450 2D7A                                     u7370 2BF2  
                                   u7610 1FE0                                     u6810 1ACE  
                                   u8090 2FA4                                     u8170 48D2  
                                   u8410 13A2                                     u8330 111E  
                                   u5690 42B0                                     u5850 4A70  
                                   u9050 2920                                     u4891 386C  
                                   u4875 37D0                                     u7291 3DE0  
                                   u8251 3272                                     u7531 2E4E  
                                   u7451 2D76                                     u7371 2BEE  
                                   u7611 1FDC                                     u6811 1ACA  
                                   u8091 2FA0                                     u8075 2F4A  
                                   u8171 48CE                                     u8411 139E  
                                   u8331 111A                                     u5691 42AC  
                                   u5851 4A6C                                     u9107 297C  
                                   u9051 291C                                     u4884 382A  
                                   u8260 3290                                     u8180 312E  
                                   u7540 2E9A                                     u7460 2D90  
                                   u7380 2C04                                     u7700 2280  
                                   u7620 1FF0                                     u6900 1C1A  
                                   u6820 1B10                                     u8500 165A  
                                   u8420 13D8                                     u8340 112E  
                                   u5860 4B56                                     u9060 2942  
                                   u4885 3826                                     u8261 328C  
                                   u8181 3128                                     u7541 2E96  
                                   u7461 2D8C                                     u7381 2C00  
                                   u7701 227C                                     u7621 1FEC  
                                   u6821 1B0C                                     u8501 1656  
                                   u8421 13D4                                     u8341 112A  
                                   u9117 3F0C                                     u5861 4B52  
                                   u9061 293E                                     u6750 4072  
                                   u8270 32AA                                     u8190 3130  
                                   u7550 2ECA                                     u7470 2DAE  
                                   u7390 2C14                                     u7710 2294  
                                   u7630 2026                                     u6910 1C42  
                                   u6830 1B26                                     u8510 16F4  
                                   u8430 13F0                                     u8350 119E  
                                   u5950 3EBC                                     u9070 2A64  
                                   u9127 3FD4                                     u6751 406E  
                                   u8271 32A6                                     u7551 2EC6  
                                   u7471 2DAA                                     u7391 2C10  
                                   u7711 2290                                     u7631 2022  
                                   u6911 1C3E                                     u6831 1B22  
                                   u8511 16F0                                     u8431 13EC  
                                   u8351 119A                                     u5951 3EB8  
                                   u9071 2A60                                     u4896 3874  
                                   u6760 4082                                     u8280 32BA  
                                   u7560 2EF8                                     u7480 2DCE  
                                   u7800 3C1A                                     u7720 22AE  
                                   u7640 2036                                     u6920 1C60  
                                   u6840 1B38                                     u8600 19D6  
                                   u8520 173E                                     u8440 1422  
                                   u8360 11AE                                     u5960 3ECC  
                                   u9137 3FEE                                     u6761 407E  
                                   u8281 32B6                                     u7561 2EF4  
                                   u7481 2DCA                                     u7801 3C16  
                                   u7721 22AA                                     u7641 2032  
                                   u6921 1C5C                                     u6841 1B34  
                                   u8521 173A                                     u8441 141E  
                                   u8361 11AA                                     u5961 3EC8  
                                   u6770 40A8                                     u8290 32CA  
                                   u7490 2DE0                                     u7810 3C38  
                                   u7730 22F6                                     u7650 21B0  
                                   u7570 1F6C                                     u6930 1C80  
                                   u6850 1B48                                     u8610 19EA  
                                   u8530 17EA                                     u8450 1430  
                                   u8370 1222                                     u5970 3EF8  
                                   u9147 4004                                     u6771 40A4  
                                   u8291 32C6                                     u7491 2DDC  
                                   u7811 3C34                                     u7731 22F2  
                                   u7571 1F68                                     u6931 1C7C  
                                   u6851 1B44                                     u8611 19E6  
                                   u8531 17E6                                     u8451 142C  
                                   u8371 121E                                     u5971 3EF4  
                                   u6780 40DA                                     u7820 3C58  
                                   u7740 2324                                     u7660 220A  
                                   u7580 1F7E                                     u6940 1C8E  
                                   u6860 1B84                                     u7900 3B7C  
                                   u8620 1A28                                     u8540 1822  
                                   u8460 145A                                     u8380 12AA  
                                   u8700 374C                                     u5980 3F3A  
                                   u9157 4C34                                     u6781 40D6  
                                   u7821 3C54                                     u7741 2320  
                                   u7661 2206                                     u7581 1F7A  
                                   u6941 1C8A                                     u6861 1B80  
                                   u7901 3B78                                     u8621 1A24  
                                   u8541 181E                                     u8461 1456  
                                   u8381 12A6                                     u8701 3748  
                                   u5981 3F36                                     u7830 3CA8  
                                   u7750 235E                                     u7670 222A  
                                   u7590 1F8E                                     u6950 1C9E  
                                   u6870 1B92                                     u6790 1AAC  
                                   u7910 3B8C                                     u8630 1A46  
                                   u8550 1830                                     u8470 15A0  
                                   u8390 12DC                                     u8710 375C  
                                   u5990 3F6C                                     u7831 3CA4  
                                   u7751 235A                                     u7671 2226  
                                   u7655 21A6                                     u7591 1F8A  
                                   u6951 1C9A                                     u6871 1B8E  
                                   u6791 1AA8                                     u7911 3B88  
                                   u8631 1A42                                     u8551 182C  
                                   u8471 159C                                     u8391 12D8  
                                   u8711 3758                                     u5991 3F68  
                                   u9087 28AE                                     u7760 414A  
                                   u7680 223C                                     u7840 4AEC  
                                   u6960 1CD0                                     u6880 1C00  
                                   u8640 1A56                                     u8560 1884  
                                   u8480 1606                                     u8720 41F0  
                                   u7920 43CA                                     u8800 268E  
                                   u7761 4146                                     u7681 2238  
                                   u7841 4AE8                                     u6961 1CCC  
                                   u6881 1BFC                                     u8641 1A52  
                                   u8561 1880                                     u8481 1602  
                                   u8721 41EC                                     u7921 43C6  
                                   u8801 268A                                     u9097 28CC  
                                   u7770 4188                                     u7690 226A  
                                   u6970 1CDE                                     u6890 1C18  
                                   u7850 3ABE                                     u8570 1954  
                                   u8490 164C                                     u8730 4262  
                                   u7930 43EC                                     u8650 3636  
                                   u8810 4A56                                     u7771 4184  
                                   u7691 2266                                     u6971 1CDA  
                                   u6891 1C12                                     u7851 3ABA  
                                   u8571 1950                                     u8491 1648  
                                   u8731 425E                                     u7931 43E8  
                                   u8651 3632                                     u8811 4A52  
                                   u8820 4B44                                     u7780 41BC  
                                   u6980 1CFC                                     u7860 3AF2  
                                   u8580 1970                                     u7940 440A  
                                   u8660 3646                                     u8740 239E  
                                   u8900 4798                                     u8821 4B40  
                                   u7781 41B8                                     u6981 1CF8  
                                   u8581 196C                                     u7941 4406  
                                   u8661 3642                                     u8741 239A  
                                   u8901 4794                                     u7950 4616  
                                   u7790 3BDC                                     u6990 1D34  
                                   u7870 3B20                                     u8590 19D4  
                                   u8670 3702                                     u8750 2406  
                                   u8830 34E8                                     u7951 4612  
                                   u7791 3BD8                                     u6991 1D30  
                                   u7871 3B1C                                     u8591 19CE  
                                   u8671 36FE                                     u8751 2402  
                                   u8831 34E4                                     u7960 465C  
                                   u7880 3B34                                     u8680 3718  
                                   u8760 2428                                     u8840 3508  
                                   u7961 4658                                     u7881 3B30  
                                   u7865 3AE8                                     u8681 3714  
                                   u8761 2424                                     u8841 3504  
                                   u7970 4B8A                                     u7890 3B5C  
                                   u8690 3732                                     u8770 24B8  
                                   u8850 3522                                     u7971 4B86  
                                   u7891 3B58                                     u8691 372E  
                                   u8771 24B4                                     u8851 351E  
                                   u7980 3CF2                                     u8780 24D4  
                                   u8860 3548                                     u8781 24D0  
                                   u8861 3544                                     u7990 3D10  
                                   u8790 257A                                     u8870 35CE  
                                   u7991 3D0C                                     u8791 2576  
                                   u8871 35CA                                     u8880 35DE  
                                   u8960 27A0                                     u7985 3CE8  
                                   u8881 35DA                                     u8961 279C  
                                   u8890 4844                                     u8970 27B2  
                                   u8891 4840                                     u8971 27AE  
                                   u8980 27C4                                     u8981 27C0  
                                   u8990 27D6                                     u8991 27D2  
                   _lcd_4bit_send_string 443C                  ??_application_intialize 0015  
          ??_lcd_4bit_send_enable_signal 000A                                     abs@a 000B  
                                   _dbuf 0100           gpio_pin_read_logic@_pin_config 0001  
                                   _labs 47DC                                     _atol 34B2  
                                   _main 2778                                     _dtoa 311E  
                                   _prec 0092                                     pad@i 0015  
                                   pad@p 0012                                     fsr0h 0FEA  
                                   fsr1h 0FE2                                     indf0 0FEF  
                                   fsr2h 0FDA                                     fsr0l 0FE9  
                                   indf1 0FE7                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                            _str_int_res 00A0                                     _utoa 3626  
           keypad_get_value@rows_counter 000E        lcd_4bit_send_char_data_pos@column 0016  
                          ___fpclassifyf 3CB2                                     prodh 0FF4  
                                   prodl 0FF3                                     start 0000  
                        ___fldiv@new_exp 0020                             ___param_bank 0000  
                  _lcd_4bit_send_command 4728                                    ??_abs 000D  
                   _gpio_pin_write_logic 388C           lcd_4bit_send_string_pos@column 0017  
                                  ??_pad 0014                    lcd_4bit_intialize@lcd 0011  
                  lcd_4bit_intialize@ret 0013                            ___fltol@sign1 0009  
                        __end_of___aldiv 3AA8                                    ?_labs 0001  
                        __end_of___almod 3E9C                                    ?_atol 000D  
                        __end_of___fladd 1F52                                    ?_main 0001  
                                  ?_dtoa 0017                          __end_of___fldiv 2F0C  
                        __end_of___flneg 4B0E                                    STR_10 103B  
                                  STR_11 104E                                    STR_14 1052  
                        __end_of___flmul 237C                          __end_of___flsub 491A  
                        __end_of___fltol 3BAE                          __end_of___lldiv 43B4  
                                  ?_utoa 0017                          __end_of___llmod 443C  
                    relay_turn_off@F3032 0099                             vfpfcnvrt@fmt 0071  
                                  _PORTA 0F80                                    _PORTB 0F81  
                                  _PORTC 0F82                                    _PORTD 0F83  
                                  _PORTE 0F84                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
              lcd_4bit_set_cursor@column 0013                      ___lmul@multiplicand 0005  
               __end_of_keypad_get_value 3F80                                    _lcd_4 00D9  
                                  _flags 0094                      read_prec_or_width@c 0009  
                    read_prec_or_width@n 000A                                    _fputc 4062  
                                  _fputs 49E2                                    labs@a 0001  
                                  pad@fp 000F                                    atol@n 0017  
                                  _width 0090                                    atol@s 000D  
                                  _putch 4C60                                    dtoa@d 0018  
                                  dtoa@i 0023                                    dtoa@p 001E  
                                  dtoa@s 0022                                    dtoa@w 0020  
                  ?_lcd_4bit_send_string 0011                                    tablat 0FF5  
                                  utoa@d 0018                                    utoa@i 0020  
                                  utoa@p 001C                                    utoa@w 001E  
                                  status 0FD8                          __end_of_sprintf 49E2  
                         ?___fpclassifyf 0001                          __initialization 4960  
                           __end_of_labs 4832                             __end_of_atol 3626  
                           __end_of_main 2B72                             __end_of_dtoa 32FE  
                  ?_gpio_pin_write_logic 0001                             __end_of_utoa 377A  
               gpio_pin_read_logic@logic 0002                            _lat_registers 00BD  
                keypad_get_value@counter 000D                                   ??_labs 0005  
                                 ??_atol 0011                                   ??_main 00FA  
                                 ??_dtoa 001C                                   ??_utoa 001C  
                          __activetblptr 0002                         led_turn_on@F3033 009E  
             __end_of_read_prec_or_width 426C                                   ?_fputc 0001  
                       ___llmod@dividend 0001                                   ?_fputs 0009  
                                 ?_putch 0001                            vfpfcnvrt@done 0075  
                       __end_of___xxtofl 34B2         __end_of_lcd_4bit_send_string_pos 4B7C  
                 ?_lcd_4bit_send_command 000E                             vfprintf@cfmt 00DF  
                                 ___flge 3BAE                                   ___fleq 411C  
                                 ___lmul 4536                                ??___aldiv 0009  
                              ??___almod 0009                                ??___fladd 0009  
                                 ___wmul 4BDC                                ??___fldiv 0017  
                              ??___flneg 0005                                ??___flmul 0009  
                              ??___flsub 0022                                ??___fltol 0005  
                              ??___lldiv 0009                                ??___llmod 0009  
                                 _efgtoa 1066                                   _floorf 2F0C  
                                 _memcpy 4884                     read_prec_or_width@ap 0008  
                                 _keypad 00D1                                   _memset 4B0E  
                                 clear_0 4986                                   clear_1 4992  
                                 isa$std 0001                                   pad@buf 0010  
                                 dtoa@fp 0017                                   _strcpy 4A9C  
gpio_pin_direction_intialize@_pin_config 0001                                   fputc@c 0001  
                                 fputs@c 000C                                   fputs@i 000D  
                                 fputs@s 0009                          ___fpclassifyf@e 0009  
                        ___fpclassifyf@u 000B                          ___fpclassifyf@x 0001  
                           __mediumconst 0000            convert_sint32_to_string@value 00F4  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                                   putch@c 0001  
                       __end_of_vfprintf 4A60                                   utoa@fp 0017  
                 ??_lcd_4bit_send_string 0014                                ??_sprintf 007F  
                             ___flge@ff1 001A                               ___flge@ff2 001E  
                        ??___fpclassifyf 0005                             ___xxtofl@arg 000B  
                           ___xxtofl@exp 000A                             ___xxtofl@val 0001  
                             ___fleq@ff1 0001                               ___fleq@ff2 0005  
                             __accesstop 0080                  __end_of__initialization 4998  
                             ___flneg@f1 0001                            ___rparam_used 0001  
                             ___fltol@f1 0001                         ??_lcd_send_4bits 000B  
                _lcd_4bit_send_char_data 46CC                   ??_gpio_pin_write_logic 0003  
                         __pcstackCOMRAM 0001                             __pidataBANK0 4BB0  
                          __end_of_fputc 411C                            __end_of_fputs 4A22  
                          __end_of_putch 4C62                 lcd_4bit_send_command@lcd 000E  
               lcd_4bit_send_command@ret 0010             ?_lcd_4bit_send_char_data_pos 0014  
                                ??_fputc 0004                                  ??_fputs 000C  
                lcd_4bit_send_string@lcd 0011                  lcd_4bit_send_string@ret 0014  
                lcd_4bit_send_string@str 0012                                  ??_putch 0001  
                             __pbssBANK0 0080                               __pbssBANK1 0100  
                             __pnvCOMRAM 007F            __end_of_application_intialize 4C60  
                                ?___flge 001A                                  ?___fleq 0001  
                                ?___lmul 0001        __end_of_convert_float32_to_string 47DC  
                                ?___wmul 0001                        led_turn_off@F3038 009D  
               _convert_sint32_to_string 4832                                  ?_efgtoa 003C  
                                ?_floorf 0028                                  ?_memcpy 0001  
                                ?_memset 0001                           ___lmul@product 0009  
                                ?_strcpy 0001      lcd_4bit_intialize@data_pins_counter 0014  
                              ?___xxtofl 0001                ?_lcd_4bit_send_string_pos 0015  
                   led_turn_toggle@F3043 009C                        ?_keypad_get_value 0009  
                     ??_keypad_get_value 000B                               _btn_values 1001  
                         _tris_registers 00C7                ??_lcd_4bit_send_char_data 0010  
                                __Hparam 0000                                  __Lparam 0000  
                    _ecu_layer_intialize 4C48                                  ___aldiv 399C  
                                ___almod 3DB0                                  ___fladd 1A92  
                                ___fldiv 2B72                      _gpio_pin_read_logic 426C  
                                ___flneg 4AD6                                  ___flmul 1F52  
                                ___flsub 48D4                                  ___fltol 3AA8  
                                ___lldiv 4310                                  ___llmod 43B4  
                              ?_vfprintf 007C         keypad_initialize@columns_counter 000F  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 46CC  
                                __pcinit 4960                                  __ramtop 1000  
                                __ptext0 2778                                  __ptext1 4B46  
                                __ptext2 443C                                  __ptext3 4A60  
                                __ptext4 44C0                                  __ptext5 46CC  
                                __ptext6 3E9C                                  __ptext7 426C  
                                __ptext8 4C02                                  __ptext9 34B2  
                  read_prec_or_width@fmt 0007                               ??___xxtofl 0005  
                                _int_res 008C                                  _sec_num 00AB  
                       ___aldiv@dividend 0001                     ?_ecu_layer_intialize 0001  
                                efgtoa@c 0041                                  efgtoa@d 004F  
                                efgtoa@e 0053                                  efgtoa@f 003D  
                                efgtoa@g 0066                                  efgtoa@h 005B  
                                efgtoa@i 0063                                  efgtoa@l 005F  
                                efgtoa@m 0051                                  efgtoa@n 006A  
                                efgtoa@p 0046                                  efgtoa@t 0048  
                                efgtoa@u 006C                                  efgtoa@w 0059  
                                atol@neg 0016                     ?_gpio_pin_read_logic 0001  
                                _sprintf 49A2                                  _str_res 0150  
                   end_of_initialization 4998                        lcd_send_4bits@lcd 0009  
                                floorf@e 0036                                  floorf@m 0032  
                                floorf@u 0038                                  floorf@x 0028  
                                memcpy@d 0008                                  memcpy@n 0005  
                                memcpy@s 000A                                  fputc@fp 0003  
                                memset@c 0003                                  memset@n 0005  
                                memset@p 0007                            __Lmediumconst 0000  
                         _str_sec_number 015B                                  fputs@fp 000B  
             __end_of_lcd_4bit_intialize 4062                       _read_prec_or_width 41C6  
                ??_lcd_4bit_send_command 0010           lcd_send_4bits@data_pin_counter 000D  
                        ___lldiv@divisor 0005                    gpio_pin_intialize@ret 000B  
                        ___lldiv@counter 000D                        __end_of_vfpfcnvrt 2778  
                             efgtoa@mode 004D                               efgtoa@sign 0065  
                       ___aldiv@quotient 000B                                  postdec1 0FE5  
                                postdec2 0FDD                      ?_read_prec_or_width 0007  
                                postinc0 0FEE                                  postinc1 0FE6  
                                postinc2 0FDE                         vfpfcnvrt@convarg 0076  
                             ??_vfprintf 007F                                  strcpy@d 0005  
        __end_of_lcd_4bit_send_char_data 4728                            _sec_num_index 0096  
          gpio_pin_intialize@_pin_config 0009                              ___fladd@grs 0010  
             lcd_4bit_send_char_data@lcd 000E                    ??_ecu_layer_intialize 0015  
             lcd_4bit_send_char_data@ret 0010     __end_of_gpio_pin_direction_intialize 388C  
           _gpio_pin_direction_intialize 377A                            ___xxtofl@sign 0009  
                  ??_gpio_pin_read_logic 0003                     ??_read_prec_or_width 0009  
                            ___fldiv@grs 0022                              ___fldiv@rem 001B  
        lcd_4bit_send_char_data_pos@data 0017                              ___flmul@grs 000F  
                    _lcd_4bit_set_cursor 44C0                       relay_turn_on@F3027 009A  
            lcd_4bit_send_string_pos@lcd 0015                    keypad_get_value@logic 000C  
            lcd_4bit_send_string_pos@row 0016              lcd_4bit_send_string_pos@str 0018  
                  keypad_get_value@value 000A                           __end_of___flge 3CB2  
                         __end_of___fleq 41C6                           __end_of___lmul 45A0  
             __end_of_convert_str_to_int 4C26                    convert_str_to_int@num 001D  
                            vfpfcnvrt@ap 0072                              vfpfcnvrt@cp 007B  
                  convert_str_to_int@str 001B                              vfpfcnvrt@fp 0070  
                         __end_of___wmul 4C02                           __end_of_efgtoa 1A92  
                         __end_of_floorf 311E                           __end_of_memcpy 48D4  
                             floorf@F521 0080                           __end_of_memset 4B46  
                         __end_of_strcpy 4AD6                      start_initialization 4960  
           ?_lcd_4bit_send_enable_signal 0009                     ?_lcd_4bit_set_cursor 0011  
                            __end_of_abs 4BB0                              __end_of_pad 466E  
          ?_gpio_pin_direction_intialize 0001                    __end_of___fpclassifyf 3DB0  
                        ___llmod@divisor 0005               ??_convert_sint32_to_string 007F  
                        ___llmod@counter 0009                              vfprintf@fmt 007D  
                               ??___flge 0022                                 ??___fleq 0009  
                               ??___lmul 0009                                 ??___wmul 0005  
                               ??_efgtoa 0042                              __pdataBANK0 00B3  
                               ??_floorf 002C                                 ??_memcpy 0007  
                               ??_memset 0007                               memset@dest 0001  
           lcd_4bit_send_command@command 000F                          _first_num_index 0097  
                               ??_strcpy 0004                                ___fladd@a 0005  
                              ___fladd@b 0001                                ___fldiv@a 0013  
                              ___fldiv@b 000F                                ___flmul@a 0005  
                              ___flmul@b 0001                    ??_lcd_4bit_set_cursor 0014  
                              ___flsub@a 001E                                ___flsub@b 001A  
                          __pcstackBANK0 00DF                         _str_first_number 0166  
        gpio_pin_direction_intialize@ret 0007                              _efgtoa$1450 004A  
          keypad_initialize@rows_counter 000E                    _application_intialize 4C5A  
                              _dtoa$1419 001C                                 ?___aldiv 0001  
                               ?___almod 0001                                 ?___fladd 0001  
        gpio_pin_write_logic@_pin_config 0001                                 ?___fldiv 000F  
                               ?___flneg 0001                                 ?___flmul 0001  
                               ?___flsub 001A                                 ?___fltol 0001  
                               ?___lldiv 0001                                 ?___llmod 0001  
             ?_convert_float32_to_string 00F4                gpio_pin_write_logic@logic 0002  
                       ___almod@dividend 0001                              __smallconst 1000  
                              _first_num 00AF                                 ?_sprintf 00E0  
                     _gpio_pin_intialize 466E                          ___aldiv@divisor 0005  
         ??_gpio_pin_direction_intialize 0002                          ___aldiv@counter 0009  
                         ___wmul@product 0005                      ?_gpio_pin_intialize 0009  
          __end_of_lcd_4bit_send_command 4784           convert_float32_to_string@value 00F4  
                     _lcd_4bit_intialize 3F80                                _vfpfcnvrt 237C  
               _lcd_4bit_send_string_pos 4B46                        ___wmul@multiplier 0001  
                   ??_gpio_pin_intialize 000A           lcd_4bit_send_char_data_pos@lcd 0014  
         lcd_4bit_send_char_data_pos@ret 0018           lcd_4bit_send_char_data_pos@row 0015  
                    ?_lcd_4bit_intialize 0011      __end_of_lcd_4bit_send_char_data_pos 4A9C  
            _lcd_4bit_send_char_data_pos 4A60          keypad_get_value@columns_counter 000F  
                             vfpfcnvrt@c 007A                  gpio_pin_write_logic@ret 0008  
                      ___lmul@multiplier 0001                 ?_lcd_4bit_send_char_data 000E  
                              copy_data0 4974                        _keypad_initialize 45A0  
       __end_of_convert_sint32_to_string 4884                       ?_keypad_initialize 000C  
                 gpio_pin_read_logic@ret 0007            ??_lcd_4bit_send_char_data_pos 0018  
                 ?_application_intialize 0001                     ??_lcd_4bit_intialize 0012  
                               __Hrparam 0000                                memcpy@tmp 0007  
                             vfprintf@ap 007E                                 __Lrparam 0000  
                             vfprintf@fp 007C                      ??_keypad_initialize 000D  
                 lcd_4bit_set_cursor@lcd 0011              __end_of_ecu_layer_intialize 4C5A  
                             ?_vfpfcnvrt 0070                   lcd_4bit_set_cursor@row 0012  
                     __end_of_btn_values 1011              __end_of_gpio_pin_read_logic 4310  
                     ___fpclassifyf@F465 0084              keypad_get_value@_keypad_obj 0009  
                             sprintf@fmt 00E2                                 ___xxtofl 32FE  
              __end_of_keypad_initialize 4608                                 __ptext10 4536  
                               __ptext11 4832                                 __ptext20 4BDC  
                               __ptext12 4784                                 __ptext21 1066  
                               __ptext13 49A2                                 __ptext30 4AD6  
                               __ptext22 4A9C                                 __ptext14 4A22  
                               __ptext31 1F52                                 __ptext23 4884  
                               __ptext15 237C                                 __ptext40 4B7C  
                               __ptext32 3BAE                                 __ptext24 47DC  
                               __ptext16 3626                                 __ptext41 3DB0  
                               __ptext33 411C                                 __ptext25 2F0C  
                               __ptext17 43B4                                 __ptext50 45A0  
                               __ptext42 399C                                 __ptext34 2B72  
                               __ptext26 3CB2                                 __ptext18 4310  
                               __ptext51 466E                                 __ptext43 4B0E  
                               __ptext35 311E                                 __ptext27 3AA8  
                               __ptext19 41C6                                 __ptext52 388C  
                               __ptext44 4C5A                                 __ptext36 4608  
                               __ptext28 48D4                                 __ptext53 377A  
                               __ptext45 4C48                                 __ptext37 49E2  
                               __ptext29 1A92                                 __ptext54 32FE  
                               __ptext46 3F80                                 __ptext38 4062  
                               __ptext47 4728                                 __ptext39 4C60  
                               __ptext48 491A                                 __ptext49 4C26  
                     _convert_str_to_int 4C02                          ___almod@divisor 0005  
                        ___almod@counter 0009                               strcpy@dest 0001  
                    ?_convert_str_to_int 001B                         _keypad_get_value 3E9C  
                               efgtoa@fp 003C                                 efgtoa@ne 0044  
                               efgtoa@pp 004C                                 efgtoa@ou 0055  
                               isa$xinst 0000             __end_of_lcd_4bit_send_string 44C0  
                               _vfprintf 4A22                           _lcd_send_4bits 491A  
                   ??_convert_str_to_int 001E                                 memcpy@d1 0001  
                               memcpy@s1 0003             __end_of_gpio_pin_write_logic 399C  
                              sprintf@ap 00E7           lcd_4bit_send_enable_signal@lcd 0009  
                       ___lldiv@dividend 0001             keypad_initialize@_keypad_obj 000C  
                              strcpy@src 0003             convert_float32_to_string@str 00F8  
                            efgtoa@nmode 004E                   __end_of_lcd_send_4bits 4960  
            ??_convert_float32_to_string 007F                              ??_vfpfcnvrt 0073  
            __end_of_lcd_4bit_set_cursor 4536                ?_convert_sint32_to_string 00F4  
                               sprintf@f 00E8                                 sprintf@s 00E0  
                       ___lldiv@quotient 0009                           _port_registers 00B3  
                           ___aldiv@sign 000A                            ___fladd@signs 000D  
                           ___almod@sign 000A                             ___fladd@aexp 000E  
                           ___fladd@bexp 000F              lcd_4bit_send_char_data@data 000F  
             ??_lcd_4bit_send_string_pos 001A  
